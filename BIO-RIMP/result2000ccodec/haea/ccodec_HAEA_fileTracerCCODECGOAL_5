
[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ],1.0140210624833035

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[setEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ],1.017926925405393

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ],1.0149921002895137

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ],1.0144379566009372

[ " MM ":{ {tgt=[TypeDeclaration [name=URLCodecTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorStringThrowable|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ],1.0134728453276802

[ " MF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], src=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], fld=[MD2|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QCodecTest]|EXISTS], src=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ],1.0165352867585895

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ],1.0150776698367654

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ],1.0156224159244722

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ],1.0143467114333358

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[encodeQuotedPrintable|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualExtended2|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=ColognePhonetic]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS]} ,  , feasible : true } ],1.019340368846755

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CryptTest]|EXISTS], mtd=[testCrypt|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CharsetsTest]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS], fld=[CHARS_AF|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=BCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ],1.019339931503732

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorThrowable|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], src=[TypeDeclaration [name=URLCodecTest]|EXISTS], mtd=[testDecodeStringWithNull|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], fld=[URL_SAFE_ENCODE_TABLE|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ],1.0224590112730707

[ " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=Base32Test]|EXISTS], mtd=[testBase32Chunked|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[phonemeText|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTencodeHexString]|NEW], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[encodeHexString|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32TestData]|EXISTS], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ],1.021804529701681

[ " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTtestTranslateToJOfDGEOrDGIOrDGY]|NEW], src=[TypeDeclaration [name=MetaphoneTest]|EXISTS], mtd=[testTranslateToJOfDGEOrDGIOrDGY|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], fld=[engine|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[chunkSeparatorLength|EXISTS]} ,  , feasible : true } ],1.0253854568478227

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncodingVariations|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], fld=[LANGUAGE_RULES_RN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MIME_CHUNK_SIZE|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ],1.0257613465559745

[ " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[encodeQuotedPrintable|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualBasic|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32Test]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], mtd=[sha2Crypt|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ],1.02502577027211

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[maxPhonemes|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeAsString|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], fld=[CKQ|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[lineLength|EXISTS]} ,  , feasible : true } ],1.0231908468346147

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testAccentRemovalNormalString_NoChange|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[concat|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestSkipPastEnd]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testSkipPastEnd|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[STRING_FIXTURE|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=PhonemeList]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ],1.0235905307887672

[ " MF ":{ {tgt=[TypeDeclaration [name=Md5CryptTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], fld=[ELEVEN|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base32TestData]|EXISTS], fld=[STRING_FIXTURE|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTfill]|NEW], src=[TypeDeclaration [name=Base64TestData]|EXISTS], mtd=[fill|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], mtd=[testSetRuleTypeToRulesIllegalArgumentException|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=PhonemeList]|EXISTS]} ,  , feasible : true } ],1.0289160445932568

[ " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestMd5CryptStrings]|NEW], src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testMd5CryptStrings|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], mtd=[testStaticEncodeChunked|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS], mtd=[testUtf16Be|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testCodec105|EXISTS]} ,  , feasible : true } ],1.027383072220365

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ],1.023294170716001

[ " MM ":{ {tgt=[TypeDeclaration [name=URLCodecTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorStringThrowable|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ],1.0246088403071913

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[setEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhoneticEngine]|EXISTS], mtd=[applyFinalRules|EXISTS]} ,  , feasible : true } ],1.0249545452683886

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ],1.0290432332309314

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeAsString|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], fld=[CKQ|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[lineLength|EXISTS]} ,  , feasible : true } ],1.0241419141103414

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[maxPhonemes|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ],1.0238432037304321

[ " MM ":{ {tgt=[TypeDeclaration [name=URLCodecTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorStringThrowable|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=LanguageGuessingTest]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[addLeft|EXISTS]} ,  , feasible : true } ],1.0224924702511538

[ " MF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], src=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], fld=[MD2|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QCodecTest]|EXISTS], src=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ],1.023728711909304

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Md5CryptTest]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0232490994735726

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS]} ,  , feasible : true } ],1.0201964712140825

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ],1.0198616223132362

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[encodeQuotedPrintable|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualExtended2|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS], fld=[serialVersionUID|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[getNextChar|EXISTS]} ,  , feasible : true } ],1.0223918590358645

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CharsetsTest]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS], fld=[CHARS_AF|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=BCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=BCodecTest]|EXISTS], fld=[SWISS_GERMAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testDecodeObjects|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ],1.0214169222662144

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorThrowable|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], fld=[URL_SAFE_ENCODE_TABLE|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=ResourceConstants]|EXISTS], fld=[EXT_CMT_START|EXISTS]} ,  , feasible : true } ],1.0245556194062897

[ " IM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=Base32Test]|EXISTS], mtd=[testBase32Chunked|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[phonemeText|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTencodeHexString]|NEW], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[encodeHexString|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[SILENT_START|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncoding|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], fld=[LOOP|EXISTS]} ,  , feasible : true } ],1.0226139417435554

[ " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTtestTranslateToJOfDGEOrDGIOrDGY]|NEW], src=[TypeDeclaration [name=MetaphoneTest]|EXISTS], mtd=[testTranslateToJOfDGEOrDGIOrDGY|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS], mtd=[testUtf16Be|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testCodec105|EXISTS]} ,  , feasible : true } ],1.0217655446335874

[ " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestMd5CryptStrings]|NEW], src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testMd5CryptStrings|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], mtd=[testStaticEncodeChunked|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], fld=[engine|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[chunkSeparatorLength|EXISTS]} ,  , feasible : true } ],1.021446556121075

[ " MF ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], fld=[LANGUAGE_RULES_RN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MIME_CHUNK_SIZE|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ],1.0205295773102245

[ " RMMO ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[encodeQuotedPrintable|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualBasic|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=BCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testNullInput|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0209656787343493

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[maxPhonemes|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeAsString|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " RID ":{ {src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[lineLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ],1.0197167714211226

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testAccentRemovalNormalString_NoChange|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestSkipPastEnd]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testSkipPastEnd|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=PhonemeList]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[chunkSeparatorLength|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], src=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ],1.0211180152861041

[ " MF ":{ {tgt=[TypeDeclaration [name=Md5CryptTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], fld=[ELEVEN|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ],1.0230280184020062

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base32TestData]|EXISTS], fld=[STRING_FIXTURE|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTfill]|NEW], src=[TypeDeclaration [name=Base64TestData]|EXISTS], mtd=[fill|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], mtd=[testSetRuleTypeToRulesIllegalArgumentException|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=PhonemeList]|EXISTS]} ,  , feasible : true } ],1.0287559520598608

[ " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestMd5CryptStrings]|NEW], src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testMd5CryptStrings|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], mtd=[testStaticEncodeChunked|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testCodec105|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringUtils]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], mtd=[testB64T|EXISTS]} ,  , feasible : true } ],1.0275871188837167

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ],1.0283735781816994

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ],1.0240198499336155

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[setEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ],1.0288714270295447

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[setEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ],1.0288714270295447

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ],1.0302917003244054

[ " MF ":{ {tgt=[TypeDeclaration [name=Md5CryptTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], fld=[ELEVEN|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ],1.0302917003244054

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CharsetsTest]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS], fld=[CHARS_AF|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=BCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ],1.023138951320532

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CryptTest]|EXISTS], mtd=[testCrypt|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ],1.0219239291063777

[ " IM ":{ {tgt=[TypeDeclaration [name=URLCodecTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorStringThrowable|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[decodeText|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[differenceEncoded|EXISTS]} ,  , feasible : true } ],1.0230811099666028

[ " MF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], src=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], fld=[MD2|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QCodecTest]|EXISTS], src=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], src=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ],1.0244314092957432

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testAccentRemovalNormalString_NoChange|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestSkipPastEnd]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testSkipPastEnd|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=PhonemeList]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[chunkSeparatorLength|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ],1.0252055366200847

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0245770086806627

[ " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RulesApplication]|EXISTS], src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256CryptStrings|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[markSupported|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base32TestData]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Md5CryptTest]|EXISTS], src=[TypeDeclaration [name=Utils]|EXISTS], mtd=[digit16|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS], mtd=[testNewInstance3|EXISTS]} ,  , feasible : true } ],1.025658931977347

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ],1.0245028176993918

[ " MF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], src=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], fld=[MD2|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QCodecTest]|EXISTS], src=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ],1.0244930594310055

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestMd5CryptStrings]|NEW], src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testMd5CryptStrings|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], mtd=[testStaticEncodeChunked|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], fld=[engine|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[chunkSeparatorLength|EXISTS]} ,  , feasible : true } ],1.023502835932328

[ " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[encodeQuotedPrintable|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualExtended2|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=ColognePhonetic]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS]} ,  , feasible : true } ],1.0287603371527592

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CryptTest]|EXISTS], mtd=[testCrypt|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CharsetsTest]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS], fld=[CHARS_AF|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " RID ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BaseNCodecTest]|EXISTS], mtd=[setUp|EXISTS]} ,  , feasible : true } ],1.0271477624152416

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorThrowable|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], fld=[URL_SAFE_ENCODE_TABLE|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncoding|EXISTS]} ,  , feasible : true } ],1.0282263000891725

[ " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=Base32Test]|EXISTS], mtd=[testBase32Chunked|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[phonemeText|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTencodeHexString]|NEW], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[encodeHexString|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32TestData]|EXISTS], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ],1.0279216404118934

[ " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestMd5CryptStrings]|NEW], src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testMd5CryptStrings|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], mtd=[testStaticEncodeChunked|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ],1.0233513200018414

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], fld=[engine|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[chunkSeparatorLength|EXISTS]} ,  , feasible : true } ],1.024704390692755

[ " MF ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], fld=[LANGUAGE_RULES_RN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[encodeQuotedPrintable|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualExtended2|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=ColognePhonetic]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS]} ,  , feasible : true } ],1.027358980301133

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MIME_CHUNK_SIZE|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ],1.0276432120302352

[ " RMMO ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[encodeQuotedPrintable|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualBasic|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=BCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testNullInput|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiChars|EXISTS]} ,  , feasible : true } ],1.028150636933138

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[maxPhonemes|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeAsString|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " RID ":{ {src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[COMPARATOR|EXISTS]} ,  , feasible : true } ],1.0259477088702889

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testAccentRemovalNormalString_NoChange|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestSkipPastEnd]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testSkipPastEnd|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=PhonemeList]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[chunkSeparatorLength|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], src=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ],1.026689158770218

[ " MF ":{ {tgt=[TypeDeclaration [name=Md5CryptTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], fld=[ELEVEN|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS], mtd=[getRandomSalt|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncodingVariations|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ],1.0262977150675772

[ " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[encodeQuotedPrintable|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualExtended2|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=ColognePhonetic]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS]} ,  , feasible : true } ],1.0291069203976173

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestMd5CryptStrings]|NEW], src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testMd5CryptStrings|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], mtd=[testStaticEncodeChunked|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testCodec105|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Hex]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[difference|EXISTS]} ,  , feasible : true } ],1.0288087890068878

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ],1.0273330120831754

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[setEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ],1.0275761057595074

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ],1.0319109064003698

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[EOF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0285721056829544

[ " EM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncodingVariations|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.TGTcheckEncodings]|NEW], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncodings|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], mtd=[sha256Crypt|EXISTS]} ,  , feasible : true } ],1.0260669492393517

[ " RDI ":{ {tgt=[TypeDeclaration [name=QCodecTest]|EXISTS], src=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=CharsetsTest]|EXISTS], mtd=[testToCharset|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=DecoderExceptionTest]|EXISTS], fld=[MSG|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[length|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[length|EXISTS]} ,  , feasible : true } ],1.0284103991094806

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=EncoderException]|EXISTS], fld=[serialVersionUID|EXISTS]} ,  , feasible : true } ],1.0257563715990663

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[setEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ],1.0279496373307113

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ],1.024779483316497

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ],1.0225087491221438

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[encodeQuotedPrintable|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualExtended2|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=ColognePhonetic]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS]} ,  , feasible : true } ],1.0235632365852507

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CryptTest]|EXISTS], mtd=[testCrypt|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CharsetsTest]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS], fld=[CHARS_AF|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BaseNCodecTest]|EXISTS], mtd=[testContainsAlphabetOrPad|EXISTS]} ,  , feasible : true } ],1.021116942765521

[ " MM ":{ {tgt=[TypeDeclaration [name=URLCodecTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorStringThrowable|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=BCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ],1.0215524205665674

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], src=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS], mtd=[testWriteToNullCoverage|EXISTS]} ,  , feasible : true } ],1.0201531665880386

[ " MF ":{ {tgt=[TypeDeclaration [name=Md5CryptTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], fld=[ELEVEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorThrowable|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], fld=[URL_SAFE_ENCODE_TABLE|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], mtd=[testSha512CryptNullData|EXISTS]} ,  , feasible : true } ],1.0223160623159155

[ " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=Base32Test]|EXISTS], mtd=[testBase32Chunked|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[phonemeText|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTencodeHexString]|NEW], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[encodeHexString|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32TestData]|EXISTS], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ],1.0230782850452957

[ " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestMd5CryptStrings]|NEW], src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testMd5CryptStrings|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], mtd=[testStaticEncodeChunked|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], fld=[engine|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ],1.0220799879746

[ " MM ":{ {tgt=[TypeDeclaration [name=URLCodecTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorStringThrowable|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[chunkSeparatorLength|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ],1.0214373391624305

[ " MF ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], fld=[LANGUAGE_RULES_RN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MIME_CHUNK_SIZE|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ],1.020894692605771

[ " RMMO ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[encodeQuotedPrintable|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualBasic|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=BCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testNullInput|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0218418473446842

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[maxPhonemes|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeAsString|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " RID ":{ {src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testCodec105|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testByteByByte|EXISTS]} ,  , feasible : true } ],1.021541431278518

[ " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestMd5CryptStrings]|NEW], src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testMd5CryptStrings|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], mtd=[testStaticEncodeChunked|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ],1.0217724868237659

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestSkipPastEnd]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testSkipPastEnd|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], src=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[CHUNK_SEPARATOR|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[getMappingCode|EXISTS]} ,  , feasible : true } ],1.0219277950974919

[ " MF ":{ {tgt=[TypeDeclaration [name=Md5CryptTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], fld=[ELEVEN|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ],1.020552639275589

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_2|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ],1.0205269760783193

[ " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestMd5CryptStrings]|NEW], src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testMd5CryptStrings|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], mtd=[testStaticEncodeChunked|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ],1.0223278846146002

[ " MM ":{ {tgt=[TypeDeclaration [name=URLCodecTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorStringThrowable|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testCodec105|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], mtd=[getInstance|EXISTS]} ,  , feasible : true } ],1.02124575832713

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.0182536190734397

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_2|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ],1.020582715668121

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[setEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ],1.02193101542061

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], mtd=[testB64T|EXISTS]} ,  , feasible : true } ],1.0260835491744138

[ " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ],1.0262337399489216

[ " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Utils]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], mtd=[testCodec98NPE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DigestUtils]|EXISTS], src=[TypeDeclaration [name=BinaryEncoderAbstractTest]|EXISTS], mtd=[makeEncoder|EXISTS]} ,  , feasible : true } ],1.0272251055507242

[ " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[chunkSeparatorLength|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BCodecTest]|EXISTS], src=[TypeDeclaration [name=RPattern]|EXISTS], mtd=[isMatch|EXISTS]} ,  , feasible : true } ],1.0258410425333273

[ " MF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], src=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], fld=[MD2|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QCodecTest]|EXISTS], src=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ],1.0265014027759447

[ " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32TestData]|EXISTS], src=[TypeDeclaration [name=CharEncoding]|EXISTS], fld=[UTF_8|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ],1.0224265867930127

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Caverphone]|EXISTS], fld=[encoder|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RulesApplication]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncoding|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS]} ,  , feasible : true } ],1.0253371935269375

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ],1.0231852552592775

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=ColognePhonetic]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32TestData]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS], fld=[VARSON|EXISTS]} ,  , feasible : true } ],1.024313821709629

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CharsetsTest]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS], fld=[CHARS_AF|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=BCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncoding|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32Test]|EXISTS], fld=[BASE32_TEST_CASES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32Test]|EXISTS], mtd=[testSingleCharEncoding|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.022323158934771

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeWithInvalidObject|EXISTS]} ,  , feasible : true } ],1.0254132591729046

[ " MF ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], fld=[LANGUAGE_RULES_RN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MIME_CHUNK_SIZE|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], src=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS], mtd=[testWriteToNullCoverage|EXISTS]} ,  , feasible : true } ],1.0259404150393132

[ " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=Base32Test]|EXISTS], mtd=[testBase32Chunked|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[phonemeText|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTencodeHexString]|NEW], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[encodeHexString|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32TestData]|EXISTS], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ],1.0227846791171824

[ " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[chunkSeparatorLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testReadNull|EXISTS]} ,  , feasible : true } ],1.0271808960214919

[ " RMMO ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[chunkSeparatorLength|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Utils]|EXISTS], mtd=[digit16|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[STRING_FIXTURE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringBadEnc|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0280880710362534

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], fld=[LANGUAGE_RULES_RN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MIME_CHUNK_SIZE|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=EncoderException]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], fld=[SALT_CHARS.|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[markSupported|EXISTS]} ,  , feasible : true } ],1.0255445390082922

[ " IM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[encodeQuotedPrintable|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=BCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testNullInput|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], fld=[engine|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], mtd=[setNameType|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecTest]|EXISTS], fld=[codec|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=NysiisTest]|EXISTS], fld=[fullNysiis|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=NysiisTest]|EXISTS], mtd=[testTranan|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.026566316680218

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[maxPhonemes|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], fld=[DEFAULT_CHARSET|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[resizeBuffer|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], fld=[STRING_FIXTURE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testCodec105|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0273291393213948

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testAccentRemovalNormalString_NoChange|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestSkipPastEnd]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testSkipPastEnd|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=PhonemeList]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[chunkSeparatorLength|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], src=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ],1.0306999974365771

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ],1.0312434878832115

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], fld=[LANGUAGE_RULES_RN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MIME_CHUNK_SIZE|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_2|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS], fld=[maxCodeLen|EXISTS]} ,  , feasible : true } ],1.0323892142205382

[ " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[addLeft|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[hasData|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[COMPARATOR|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[lineLength|EXISTS]} ,  , feasible : true } ],1.0321813340871717

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[available|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], fld=[DEFAULT_CHARSET|EXISTS]} ,  , feasible : true } ],1.029349915134549

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[setEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ],1.030596967465462

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeNull|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[getMappingCode|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=URLCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=URLCodecTest]|EXISTS], mtd=[testDecodeWithNullArray|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[SEP|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[encodeQuotedPrintable|EXISTS]} ,  , feasible : true } ],1.0312402805693381

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[markSupported|EXISTS]} ,  , feasible : true } ],1.0284760587908524

[ " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[encodeQuotedPrintable|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualExtended2|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=ColognePhonetic]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], mtd=[testByChunk|EXISTS]} ,  , feasible : true } ],1.0265743021353735

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ],1.0253397607900239

[ " MF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], src=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], fld=[MD2|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QCodecTest]|EXISTS], src=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ],1.0291998469175319

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Md5CryptTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], fld=[THREE|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[mark|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ],1.025945086712123

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[SEP|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=PhonemeList]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS]} ,  , feasible : true } ],1.0231426236779986

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], src=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS], mtd=[testWriteToNullCoverage|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ],1.0247236465401657

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ],1.0213774274893732

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QCodecTest]|EXISTS], src=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ],1.0227693815355914

[ " MF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], src=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], fld=[MD2|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[encodeQuotedPrintable|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualExtended2|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=ColognePhonetic]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS]} ,  , feasible : true } ],1.021831414327955

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CryptTest]|EXISTS], mtd=[testCrypt|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=BCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[body|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=RPattern]|EXISTS], mtd=[isMatch|EXISTS]} ,  , feasible : true } ],1.0246294820788862

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[chunkSeparatorLength|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], src=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ],1.023848758209979

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testAccentRemovalNormalString_NoChange|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestSkipPastEnd]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testSkipPastEnd|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=PhonemeList]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], src=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS], mtd=[testWriteToNullCoverage|EXISTS]} ,  , feasible : true } ],1.0283490558041586

[ " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=Base32Test]|EXISTS], mtd=[testBase32Chunked|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[phonemeText|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTencodeHexString]|NEW], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[encodeHexString|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32TestData]|EXISTS], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ],1.0240051290292034

[ " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[chunkSeparatorLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryCodec]|EXISTS], src=[TypeDeclaration [name=UtilsTest]|EXISTS], mtd=[testConstructor|EXISTS]} ,  , feasible : true } ],1.0273562632211828

[ " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=BCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RulesApplication]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], mtd=[testB64from24bit|EXISTS]} ,  , feasible : true } ],1.027367436507912

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CryptTest]|EXISTS], mtd=[testCrypt|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CharsetsTest]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS], fld=[CHARS_AF|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[chunkSeparatorLength|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ],1.0271068098808038

[ " MF ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], fld=[LANGUAGE_RULES_RN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MIME_CHUNK_SIZE|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ],1.0250429168450277

[ " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=LangRule]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.TGTtestConstructorString]|NEW], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64Chunked|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[cleanName|EXISTS]} ,  , feasible : true } ],1.0238648544862796

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeAsString|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " RID ":{ {src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0232407176641332

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testAccentRemovalNormalString_NoChange|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestSkipPastEnd]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testSkipPastEnd|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[chunkSeparatorLength|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], src=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[LANGUAGES|EXISTS]} ,  , feasible : true } ],1.0258364031991338

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_2|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.0256022984230635

[ " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testCodec105|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], mtd=[getInstance|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ],1.025323810465119

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_2|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testLocaleIndependence|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ],1.0287596498320413

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[UNDERSCORE|EXISTS]} ,  , feasible : true } ],1.0282556750983163

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[encodeQuotedPrintable|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualExtended2|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=ColognePhonetic]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ],1.0276566013381385

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[setEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ],1.0274311649915493

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualBasic|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=BCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testNullInput|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.032868634105625

[ " RMMO ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[encodeQuotedPrintable|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedExamples|EXISTS]} ,  , feasible : true } ],1.0340964942754036

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncodingVariations|EXISTS]} ,  , feasible : true } ],1.026116908140599

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ],1.0264425474771102

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[encodeQuotedPrintable|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualExtended2|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=ColognePhonetic]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS]} ,  , feasible : true } ],1.0259951698811245

[ " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeList]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=RPattern]|EXISTS], mtd=[isMatch|EXISTS]} ,  , feasible : true } ],1.0255671936457023

[ " MF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], src=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], fld=[MD2|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ],1.028797378368779

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], src=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], fld=[MD5|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS]} ,  , feasible : true } ],1.02763449529187

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], fld=[RADIX|EXISTS]} ,  , feasible : true } ],1.0269181450108127

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64Test]|EXISTS], mtd=[testB64T|EXISTS]} ,  , feasible : true } ],1.0251869101454882

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RID ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=PhonemeList]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[ANY_LANGUAGE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Languages]|EXISTS], mtd=[langResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[DEFAULT_BUFFER_SIZE|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64TestData]|EXISTS], fld=[LAST_READ_KEY|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64TestData]|EXISTS], mtd=[bytesContain|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.025008959101056

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[encodeQuotedPrintable|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MIME_CHUNK_SIZE|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testLocaleIndependence|EXISTS]} ,  , feasible : true } ],1.027438183420371

[ " MF ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], fld=[LANGUAGE_RULES_RN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualExtended2|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=ColognePhonetic]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS]} ,  , feasible : true } ],1.027827537098871

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[mark|EXISTS]} ,  , feasible : true } ],1.0257296281925403

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CryptTest]|EXISTS], mtd=[testCrypt|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CharsetsTest]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS], fld=[CHARS_AF|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=BCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ],1.0226247141552862

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ],1.0215214345382222

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], src=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS], mtd=[testWriteToNullCoverage|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=ResourceConstants]|EXISTS], fld=[CMT|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.0207974172310106

[ " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=Base32Test]|EXISTS], mtd=[testBase32Chunked|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ],1.0204859895450296

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[phonemeText|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTencodeHexString]|NEW], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[encodeHexString|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32TestData]|EXISTS], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ],1.0202853574690034

[ " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomWords|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base32]|EXISTS], fld=[HEX_DECODE_TABLE|EXISTS]} ,  , feasible : true } ],1.0210169844610615

[ " MF ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], fld=[LANGUAGE_RULES_RN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MIME_CHUNK_SIZE|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ],1.020966684880748

[ " RMMO ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[encodeQuotedPrintable|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualBasic|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha2CryptRounds|EXISTS]} ,  , feasible : true } ],1.0209896723900425

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=BCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testNullInput|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0239510912003398

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[maxPhonemes|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeAsString|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " RID ":{ {src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.0234563121567424

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testAccentRemovalNormalString_NoChange|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestSkipPastEnd]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testSkipPastEnd|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[chunkSeparatorLength|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], src=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageGuessingTest]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ],1.0257768496677508

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_2|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeInteger|EXISTS]} ,  , feasible : true } ],1.0269274816240028

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_2|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ],1.0267893487512934

[ " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testCodec105|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], mtd=[getInstance|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=Base32Test]|EXISTS], mtd=[testRandomBytesChunked|EXISTS]} ,  , feasible : true } ],1.0274129712094788

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncodingVariations|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[getEncoding|EXISTS]} ,  , feasible : true } ],1.0283485999620263

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeAsString|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " RID ":{ {src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[encodeTable|EXISTS]} ,  , feasible : true } ],1.0258139807081643

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[maxPhonemes|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[setEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.02777621108108

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[chunkSeparatorLength|EXISTS]} ,  , feasible : true } ],1.0285840226704157

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ],1.0227837553054495

[ " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MIME_CHUNK_SIZE|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Hex]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], mtd=[difference|EXISTS]} ,  , feasible : true } ],1.0222685198421226

[ " MF ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], fld=[LANGUAGE_RULES_RN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RulesApplication]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ],1.0235500587203197

[ " MF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], src=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], fld=[MD2|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=ResourceConstants]|EXISTS], src=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS], mtd=[testBase32EmptyOutputStreamMimeChunkSize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=SoundexTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testAabjoe|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ],1.0217405120592942

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ],1.0197005482561252

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[phonemeText|EXISTS]} ,  , feasible : true } ],1.0208766281321071

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[phonemeText|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTencodeHexString]|NEW], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[encodeHexString|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32TestData]|EXISTS], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS]} ,  , feasible : true } ],1.0203073202901844

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ],1.0200406012260679

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[encodeText|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD_DEFAULT|EXISTS]} ,  , feasible : true } ],1.0212304183756573

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[encodeQuotedPrintable|EXISTS]} ,  , feasible : true } ,  " RID ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualExtended2|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=ColognePhonetic]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[decodeQuotedPrintable|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Utils]|EXISTS], src=[TypeDeclaration [name=Encoder]|EXISTS]} ,  , feasible : true } ],1.0224451006390718

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CryptTest]|EXISTS], mtd=[testCrypt|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CharsetsTest]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS], fld=[CHARS_AF|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=BCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ],1.022212385969724

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " IM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], src=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS], mtd=[testWriteToNullCoverage|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS], fld=[VARSON|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[PREFIX|EXISTS]} ,  , feasible : true } ],1.021392802333227

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTencodeHexString]|NEW], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[encodeHexString|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32TestData]|EXISTS], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[CHUNK_SEPARATOR|EXISTS]} ,  , feasible : true } ],1.0214599272397018

[ " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base32]|EXISTS], fld=[HEX_DECODE_TABLE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorStringThrowable|EXISTS]} ,  , feasible : true } ],1.0236471598431267

[ " RID ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MIME_CHUNK_SIZE|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[length|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], fld=[TDX|EXISTS]} ,  , feasible : true } ],1.0213058403265463

[ " RMMO ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[encodeQuotedPrintable|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base32]|EXISTS], fld=[HEX_DECODE_TABLE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32TestData]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testBase64EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ],1.0209574585562597

[ " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualBasic|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=BCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testNullInput|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0209446958128654

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[maxPhonemes|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeAsString|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " RID ":{ {src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[PREFIX|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ],1.0217842624185294

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[maxPhonemes|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeAsString|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " RID ":{ {src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[SPACE|EXISTS]} ,  , feasible : true } ],1.022424426587796

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testAccentRemovalNormalString_NoChange|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestSkipPastEnd]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testSkipPastEnd|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=PhonemeList]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[chunkSeparatorLength|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], src=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ],1.0261280313151133

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_2|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ],1.0256555085371097

[ " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64URLSafe|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ],1.0237723768576172

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testCodec105|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], mtd=[getInstance|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ],1.0246408349055003

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[unencodedBlockSize|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[append|EXISTS]} ,  , feasible : true } ],1.0253757910714052

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ],1.0262035026726817

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ],1.0297814595355042

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[length|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ],1.0280557846203837

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS]} ,  , feasible : true } ],1.0201490744214463

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[PRINTABLE_CHARS|EXISTS]} ,  , feasible : true } ],1.020804084356102

[ " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testExamples|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[test|EXISTS]} ,  , feasible : true } ],1.0204236770068735

[ " RDI ":{ {tgt=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[rContext|EXISTS]} ,  , feasible : true } ],1.0214767859264131

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[readResults|EXISTS]} ,  , feasible : true } ],1.018061066191233

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeAsString|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " RID ":{ {src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ],1.0165293855405322

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[maxPhonemes|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[encodeBlanks|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Encoder]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ],1.0168964961904736

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[decodeHex|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeWithInvalidObject|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=PhonemeList]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=DigestUtils]|EXISTS], mtd=[sha384|EXISTS]} ,  , feasible : true } ],1.0183482360402634

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[encodeQuotedPrintable|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualExtended2|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=ColognePhonetic]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS]} ,  , feasible : true } ],1.0212077455780335

[ " MM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CryptTest]|EXISTS], mtd=[testCrypt|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CharsetsTest]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS], fld=[CHARS_AF|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Base32TestData]|EXISTS], src=[TypeDeclaration [name=BaseNCodecTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[SWISS_GERMAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=MetaphoneTest]|EXISTS], mtd=[assertIsMetaphoneEqual|EXISTS]} ,  , feasible : true } ],1.0214266570313346

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeAsString|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " RID ":{ {src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ],1.0196423904401741

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[maxPhonemes|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], src=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS], mtd=[testWriteToNullCoverage|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD_DEFAULT|EXISTS]} ,  , feasible : true } ],1.0201263090461405

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTencodeHexString]|NEW], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[encodeHexString|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32TestData]|EXISTS], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[unencodedBlockSize|EXISTS]} ,  , feasible : true } ],1.0217058000962567

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ],1.017604865397279

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ],1.0173267393471297

[ " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base32]|EXISTS], fld=[HEX_DECODE_TABLE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], src=[TypeDeclaration [name=BinaryEncoderAbstractTest]|EXISTS], mtd=[makeEncoder|EXISTS]} ,  , feasible : true } ],1.0220033777029276

[ " MF ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], fld=[LANGUAGE_RULES_RN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MIME_CHUNK_SIZE|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], src=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS], mtd=[testWriteToNullCoverage|EXISTS]} ,  , feasible : true } ],1.0231106824080247

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[PREFIX|EXISTS]} ,  , feasible : true } ],1.02159863728896

[ " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualBasic|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=ColognePhonetic]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS]} ,  , feasible : true } ],1.020596125144693

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[encodeQuotedPrintable|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualExtended2|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=BCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testNullInput|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0207337327545056

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testEncodeBatch2|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[encodeSize|EXISTS]} ,  , feasible : true } ],1.0196066272712947

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testAccentRemovalNormalString_NoChange|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CryptTest]|EXISTS], mtd=[testCrypt|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CharsetsTest]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS], fld=[CHARS_AF|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=BCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ],1.0195882751010683

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestSkipPastEnd]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testSkipPastEnd|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=PhonemeList]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[chunkSeparatorLength|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], src=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[encodedBlockSize|EXISTS]} ,  , feasible : true } ],1.0230612884387789

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_2|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[LANGUAGES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Languages]|EXISTS], mtd=[langResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[DEFAULT_BUFFER_RESIZE_FACTOR|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.0230376741393044

[ " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testCodec105|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], mtd=[getInstance|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base64Test]|EXISTS], src=[TypeDeclaration [name=CharsetsTest]|EXISTS], mtd=[testIso8859_1|EXISTS]} ,  , feasible : true } ],1.0218726284733617

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTtestEncode]|NEW], src=[TypeDeclaration [name=RefinedSoundexTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_0|EXISTS]} ,  , feasible : true } ],1.022907861276674

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[addLeft|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ],1.0238837701177814

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=ColognePhonetic]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ],1.0285351212387108

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[encodeQuotedPrintable|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualExtended2|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ],1.0306096052243188

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ],1.0259707491534042

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptWithEmptySalt|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleP|EXISTS]} ,  , feasible : true } ],1.0253027721249073

[ " RDI ":{ {tgt=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], fld=[engine|EXISTS]} ,  , feasible : true } ],1.0258009320805785

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS], fld=[CHARS_C|EXISTS]} ,  , feasible : true } ],1.0242317474191804

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecoder]|NEW], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], mtd=[testDecoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestCryptWithBytes]|NEW], src=[TypeDeclaration [name=CryptTest]|EXISTS], mtd=[testCryptWithBytes|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base64InputStream]|EXISTS]} ,  , feasible : true } ],1.026114625799121

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[DECODE_TABLE|EXISTS]} ,  , feasible : true } ],1.0253901884654346

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ],1.0253526579061412

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[encodeQuotedPrintable|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=ColognePhonetic]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS]} ,  , feasible : true } ],1.0270037417767768

[ " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualBasic|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualExtended2|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=ColognePhonetic]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ],1.0273032984392285

[ " MF ":{ {tgt=[TypeDeclaration [name=CharsetsTest]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS], fld=[CHARS_AF|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=BCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CryptTest]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD_DEFAULT|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[EOF|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], fld=[DIGITS_UPPER|EXISTS]} ,  , feasible : true } ],1.0264434101395223

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=SoundexTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase64EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testBase64EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[STRING_FIXTURE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testSkipWrongArgument|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ],1.0239487633297493

[ " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngine]|EXISTS], fld=[ruleType|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngine]|EXISTS], mtd=[join|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=Base32]|EXISTS], fld=[BYTES_PER_UNENCODED_BLOCK|EXISTS]} ,  , feasible : true } ],1.0205730965748558

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.0199847500943782

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ],1.023993109994195

[ " MF ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], fld=[LANGUAGE_RULES_RN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ],1.0232501761431225

[ " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[encodeQuotedPrintable|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualExtended2|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=ColognePhonetic]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ],1.0241052608331422

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualBasic|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=ColognePhonetic]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS]} ,  , feasible : true } ],1.026976257867196

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testEncodeBatch2|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ],1.0265882798537844

[ " RDI ":{ {tgt=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[encodeSize|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ],1.0257201285441493

[ " MM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testAccentRemovalNormalString_NoChange|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[append|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DigestUtils]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[difference|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], fld=[engine|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], mtd=[getRuleType|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[getEncoding|EXISTS]} ,  , feasible : true } ],1.024400491254807

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[BITS_PER_ENCODED_BYTE|EXISTS]} ,  , feasible : true } ],1.0238854358114775

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " IM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testCodec105|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], mtd=[getInstance|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testCodeInteger4|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorThrowable|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.0228662706599727

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ],1.0230480939539683

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=BCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ],1.0244268784834616

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testAccentRemovalNormalString_NoChange|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CryptTest]|EXISTS], mtd=[testCrypt|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CharsetsTest]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS], fld=[CHARS_AF|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[getNextPos|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ],1.0227309628020338

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ],1.0213748080449594

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeAsString|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.021398918782864

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], fld=[TEST_DATA|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], mtd=[checkDoubleMetaphone|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testByteByByte|EXISTS]} ,  , feasible : true } ],1.0188668403470216

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Hex]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ],1.0188314462114534

[ " RDI ":{ {tgt=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Hex]|EXISTS], src=[TypeDeclaration [name=Base32]|EXISTS], fld=[encodeSize|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ],1.0195205664690503

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[decodeUrl|EXISTS]} ,  , feasible : true } ],1.0196937253514262

[ " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Languages]|EXISTS], mtd=[langResourceName|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0205518886007878

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=RuleTest]|EXISTS], mtd=[makePhonemes|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ],1.0198072535502565

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualExtended2|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone]|EXISTS], mtd=[caverphone|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Charsets]|EXISTS], src=[TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0203498236866293

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ],1.023722869939453

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CryptTest]|EXISTS], mtd=[testCrypt|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CharsetsTest]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS], fld=[CHARS_AF|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=BCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ],1.02320042708201

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testCodec105|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], mtd=[getInstance|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=ResourceConstants]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[decodeQuotedPrintable|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ],1.022925390317621

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeAsString|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " RID ":{ {src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ],1.023179744531096

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=NysiisTest]|EXISTS], fld=[fullNysiis|EXISTS]} ,  , feasible : true } ],1.0188862727465748

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ],1.0183286572292012

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ],1.0192116298481033

[ " EM ":{ {src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeByteArray|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDencodeEmpty|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeWithInvalidObject|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[test|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ],1.0240086300965985

[ " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualBasic|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MIME_CHUNK_SIZE|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS], fld=[B64T|EXISTS]} ,  , feasible : true } ],1.0266645483920658

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=ColognePhonetic]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[encodeHex|EXISTS]} ,  , feasible : true } ],1.0263240391438082

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[encodeSize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CryptTest]|EXISTS], mtd=[testCryptWithBytes|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32TestData]|EXISTS], fld=[SIZE_KEY|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32TestData]|EXISTS], mtd=[streamToBytes|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0263389010358868

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testAccentRemovalNormalString_NoChange|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CryptTest]|EXISTS], mtd=[testCrypt|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CharsetsTest]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS], fld=[CHARS_AF|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ],1.027068454368802

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=BCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ],1.024713600955772

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Encoder]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeHexOddCharacters1|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Phoneme]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], fld=[DIGITS_LOWER|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTcrypt]|NEW], src=[TypeDeclaration [name=Crypt]|EXISTS], mtd=[crypt|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.0250049342460872

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testCodec105|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], mtd=[getInstance|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[instance|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.024977890925347

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[write|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isEncodeEquals|EXISTS]} ,  , feasible : true } ],1.0267684652258526

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CharEncoding]|EXISTS], src=[TypeDeclaration [name=Crypt]|EXISTS], mtd=[crypt|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[PREFIX|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=PhonemeList]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ],1.0249352525774

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeAsString|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " RID ":{ {src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ],1.0217978251219944

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[chunkSeparatorLength|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[decodeQuotedPrintable|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], fld=[RADIX|EXISTS]} ,  , feasible : true } ],1.0215409193299816

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ],1.0257974467434074

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ],1.0256793339477788

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=BCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ],1.0214720047666082

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testAccentRemovalNormalString_NoChange|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CryptTest]|EXISTS], mtd=[testCrypt|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CharsetsTest]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS], fld=[CHARS_AF|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ],1.0194840350470777

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Encoder]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[metaphone|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RefinedSoundex]|EXISTS], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[contains|EXISTS]} ,  , feasible : true } ],1.0203823791236928

[ " RDI ":{ {tgt=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], fld=[ELEVEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=ResourceConstants]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS], mtd=[testUnicCryptInvalidSalt|EXISTS]} ,  , feasible : true } ],1.022706089029465

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], mtd=[checkDoubleMetaphone|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ],1.0208238354360721

[ " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[append|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=URLCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=URLCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testDifference|EXISTS]} ,  , feasible : true } ],1.023271116609564

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testCodec105|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], mtd=[getInstance|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[unencodedBlockSize|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ],1.0266929739178372

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testUTF8RoundTrip|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=PhonemeList]|EXISTS]} ,  , feasible : true } ],1.0248021780046708

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], mtd=[testSetRuleTypeToRulesIllegalArgumentException|EXISTS]} ,  , feasible : true } ],1.0237339284705151

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualExtended2|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=ColognePhonetic]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MetaphoneTest]|EXISTS], mtd=[testIsMetaphoneEqualXalan|EXISTS]} ,  , feasible : true } ],1.026769826623959

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CryptTest]|EXISTS], mtd=[testCrypt|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=BCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[SPACE|EXISTS]} ,  , feasible : true } ],1.0259452962749387

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ],1.0270294275113003

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeAsString|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " RID ":{ {src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ],1.024772299191324

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CryptTest]|EXISTS], mtd=[testCrypt|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=BCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexTest]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ],1.0235043612486683

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testAccentRemovalNormalString_NoChange|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ],1.0206256973269492

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[unencodedBlockSize|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS]} ,  , feasible : true } ],1.022989521363431

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ],1.0221579985432472

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeNull|EXISTS]} ,  , feasible : true } ],1.024461148473405

[ " MF ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], fld=[LANGUAGE_RULES_RN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ],1.0229304544157714

[ " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=ColognePhonetic]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[SEP|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=URLCodecTest]|EXISTS], mtd=[testDecodeWithNullArray|EXISTS]} ,  , feasible : true } ],1.0224733809237088

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testEncodeBatch2|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Base64Test]|EXISTS], src=[TypeDeclaration [name=Base64InputStream]|EXISTS]} ,  , feasible : true } ],1.02233980607359

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testEncodeBatch2|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[encodeSize|EXISTS]} ,  , feasible : true } ],1.0223337335533096

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testAccentRemovalNormalString_NoChange|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CryptTest]|EXISTS], mtd=[testCrypt|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=BCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_0|EXISTS]} ,  , feasible : true } ],1.022635471854855

[ " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], fld=[SKB.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[permOp|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[chunkSeparatorLength|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ],1.020196095827933

[ " RDI ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualBasic|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=ColognePhonetic]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=LanguageGuessingTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ],1.0194422127905163

[ " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testCodec105|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], mtd=[getInstance|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[PREFIX|EXISTS]} ,  , feasible : true } ],1.0206704311974297

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ],1.0213074753690945

[ " EM ":{ {src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], mtd=[testBinaryEncoder|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testEncodeZeroes|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Rule]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS], fld=[B64T|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=PhoneticEngine]|EXISTS], fld=[maxPhonemes|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], mtd=[compare|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ],1.0199486815632206

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[SEP|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ],1.0225714065925062

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[DECODE_TABLE|EXISTS]} ,  , feasible : true } ],1.0193160073751537

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Encoder]|EXISTS], src=[TypeDeclaration [name=Context]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0211045617615835

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ],1.0210777952196555

[ " RDI ":{ {tgt=[TypeDeclaration [name=QCodecTest]|EXISTS], src=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Utils]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ],1.0233387350462126

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ],1.0227996071626413

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testAccentRemovalNormalString_NoChange|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CryptTest]|EXISTS], mtd=[testCrypt|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=BCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], fld=[engine|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS, TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ],1.0218917142452981

[ " RID ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=URLCodecTest]|EXISTS], mtd=[testDecodeWithNullArray|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ],1.0231403062561792

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ],1.0223804201754827

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualExtended2|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=ColognePhonetic]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[append|EXISTS]} ,  , feasible : true } ],1.024149233836383

[ " MM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CryptTest]|EXISTS], mtd=[testCrypt|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=BCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeNull|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Charsets]|EXISTS], src=[TypeDeclaration [name=Base32]|EXISTS], fld=[HEX_ENCODE_TABLE|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[mark|EXISTS]} ,  , feasible : true } ],1.02333995563502

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QCodecTest]|EXISTS], src=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ],1.0226643541571803

[ " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeAsString|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " RID ":{ {src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=URLCodecTest]|EXISTS], fld=[SWISS_GERMAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ],1.0212776965495618

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ],1.0208892698416017

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ],1.0195917927301188

[ " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodec]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[COMPARATOR|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=RulesApplication]|EXISTS], mtd=[invoke|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[preprocess|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Base32Test]|EXISTS], mtd=[testBase32Samples|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testBase64InputStreamByteByByte|EXISTS]} ,  , feasible : true } ],1.0193364407721124

[ " MF ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], fld=[LANGUAGE_RULES_RN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualBasic|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=ColognePhonetic]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS]} ,  , feasible : true } ],1.020814029400197

[ " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[SEP|EXISTS]} ,  , feasible : true } ],1.0207648681847983

[ " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualBasic|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=StringDecoder]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=ColognePhonetic]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PEM_CHUNK_SIZE|EXISTS]} ,  , feasible : true } ],1.020326485676861

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[chunkSeparatorLength|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ],1.020727761591355

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testEncodeBatch2|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[encodeSize|EXISTS]} ,  , feasible : true } ],1.0200041359752359

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testAccentRemovalNormalString_NoChange|EXISTS]} ,  , feasible : true } ,  " IM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CryptTest]|EXISTS], mtd=[testCrypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=CharsetsTest]|EXISTS], fld=[CHARS_AF|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=BCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testDecodeInvalid|EXISTS]} ,  , feasible : true } ],1.0196250283332127

[ " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], fld=[SKB.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[permOp|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[chunkSeparatorLength|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getDefaultBufferSize|EXISTS]} ,  , feasible : true } ],1.0196503761433222

[ " RDI ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualBasic|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=StringDecoder]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=ColognePhonetic]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=ColognePhonetic]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS]} ,  , feasible : true } ],1.0196503761433222

[ " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualBasic|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=StringDecoder]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=LanguageGuessingTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ],1.0188351228092698

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS, TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ],1.0196738913229182

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PEM_CHUNK_SIZE|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], fld=[TDX|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], src=[TypeDeclaration [name=Base32Test]|EXISTS], mtd=[testRandomBytesChunked|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ],1.0205692596438867

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=ColognePhonetic]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ],1.0231545987683313

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualExtended2|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[decodeBase64|EXISTS]} ,  , feasible : true } ],1.0250135719923041

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ],1.0207007355732844

[ " RMMO ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256CryptWithEmptySalt|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], mtd=[testNegativeIndexForRuleMatchIndexOutOfBoundsException|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Hex]|EXISTS], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1LongSalt|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ],1.0188611493419688

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[unencodedBlockSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncodingVariations|EXISTS]} ,  , feasible : true } ],1.0193294090206129

[ " RDI ":{ {tgt=[TypeDeclaration [name=QCodecTest]|EXISTS], src=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=LanguageGuessingTest]|EXISTS], fld=[lang|EXISTS]} ,  , feasible : true } ],1.0199514432147025

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ],1.0208333426946676

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testHyphen|EXISTS]} ,  , feasible : true } ],1.020761400764244

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.020475364152939

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeAsString|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS]} ,  , feasible : true } ],1.0199854079245834

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=NysiisTest]|EXISTS], fld=[fullNysiis|EXISTS]} ,  , feasible : true } ],1.0200698142398108

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=StringDecoder]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=LanguageGuessingTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ],1.0196357753046443

[ " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualBasic|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualExtended2|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=ColognePhonetic]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ],1.0201790622608904

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CryptTest]|EXISTS], mtd=[testCrypt|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringUtils]|EXISTS], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[ALL_STRINGS_RMATCHER|EXISTS]} ,  , feasible : true } ],1.0200090680821694

[ " RDI ":{ {tgt=[TypeDeclaration [name=QCodecTest]|EXISTS], src=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=BCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ],1.0204113067196978

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " RID ":{ {src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncodings|EXISTS]} ,  , feasible : true } ],1.0201260760466249

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ],1.0175560317722325

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[encodeSize|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ],1.0184527799986265

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testEncodeBatch2|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ],1.0185652128643385

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS]} ,  , feasible : true } ],1.0190881003149432

[ " MF ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], fld=[LANGUAGE_RULES_RN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ],1.0179263190527816

[ " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualBasic|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], mtd=[difference|EXISTS]} ,  , feasible : true } ],1.0175398059883474

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=StringDecoder]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=ColognePhonetic]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PEM_CHUNK_SIZE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=BaseNCodecTest]|EXISTS], mtd=[testIsInAlphabetString|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ],1.0190806773490826

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[encodeSize|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.019189501666432

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testAccentRemovalNormalString_NoChange|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CryptTest]|EXISTS], mtd=[testCrypt|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], fld=[SKB.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[permOp|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[chunkSeparatorLength|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getDefaultBufferSize|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ResourceConstants]|EXISTS], src=[TypeDeclaration [name=BaseNCodecTest]|EXISTS], fld=[codec|EXISTS]} ,  , feasible : true } ],1.019899865403738

[ " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=BCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ],1.0192884392181825

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.DoubleMetaphone.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], fld=[alternate|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.DoubleMetaphone.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[getAlternate|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[encodedBlockSize|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0191407666876662

[ " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualBasic|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=StringDecoder]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MetaphoneTest]|EXISTS], mtd=[testIsMetaphoneEqualWhite|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodecTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[VOWELS|EXISTS]} ,  , feasible : true } ],1.0193613871891933

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=LanguageGuessingTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[unencodedBlockSize|EXISTS]} ,  , feasible : true } ],1.0204538276962076

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=BCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0206955633537689

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CryptTest]|EXISTS], mtd=[testCrypt|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32TestData]|EXISTS], src=[TypeDeclaration [name=Base64TestData]|EXISTS], fld=[CODEC_98_NPE_DECODED|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ],1.018902814244637

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[encodeSize|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ],1.0186274649745681

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiChars|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ResourceConstants]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[SPACE|EXISTS]} ,  , feasible : true } ],1.0206919487566413

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " RID ":{ {src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ],1.0253810323764885

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeAsString|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ],1.0252709543619574

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testBase64InputStreamByteByByte|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MetaphoneTest]|EXISTS], mtd=[testIsMetaphoneEqualAlbert|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base32]|EXISTS], fld=[HEX_ENCODE_TABLE|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTtestIsEncodeEquals]|NEW], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestSha256]|NEW], src=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], mtd=[testSha256|EXISTS]} ,  , feasible : true } ],1.0247903249415142

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=ColognePhonetic]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=NysiisTest]|EXISTS], mtd=[testSnad|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[DEFAULT_BUFFER_RESIZE_FACTOR|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS], mtd=[testUnicCryptInvalidSalt|EXISTS]} ,  , feasible : true } ],1.023453247633711

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualExtended2|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getLanguages|EXISTS]} ,  , feasible : true } ],1.0213926293111735

[ " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], fld=[DIGITS_UPPER|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], fld=[engine|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], mtd=[setConcat|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ],1.0227084443635932

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ],1.0174898255427374

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[unencodedBlockSize|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.TgtClassEC]|NEW], src=[TypeDeclaration [name=Charsets]|EXISTS], fld=[ISO_8859_1|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.TgtClassEC]|NEW], src=[TypeDeclaration [name=Charsets]|EXISTS], mtd=[toCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ],1.0184869106131786

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[SEP|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhonetic]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.018074114858804

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ],1.0174993748554957

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeAsString|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " RID ":{ {src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualExtended2|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=ColognePhonetic]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS]} ,  , feasible : true } ],1.0183934852600574

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=BCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testLocaleIndependence|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], mtd=[testNullInput|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS, TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ],1.0219865776210166

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeAsString|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " RID ":{ {src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ],1.0219865776210166

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeAsString|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " RID ":{ {src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ],1.0219865776210166

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ],1.0202665460255462

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ],1.0190291860104905

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Languages]|EXISTS], mtd=[getLanguages|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testEndMb|EXISTS]} ,  , feasible : true } ],1.0194578928602973

[ " MF ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Encoder]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ],1.0164536490665999

[ " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualBasic|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], mtd=[difference|EXISTS]} ,  , feasible : true } ],1.0155765165347368

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ],1.0148016370848127

[ " RDI ":{ {tgt=[TypeDeclaration [name=QCodecTest]|EXISTS], src=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[encodeSize|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Lang]|EXISTS], fld=[Langs|EXISTS]} ,  , feasible : true } ],1.015590913496514

[ " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=BCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ],1.0156694275201548

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CryptTest]|EXISTS], mtd=[testCrypt|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=BCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Md5Crypt]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[MSG|EXISTS]} ,  , feasible : true } ],1.0160858439738971

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[encodedBlockSize|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toByteArray|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testRfc4648Section10DecodeWithCrLf|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0165714221497857

[ " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualBasic|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=StringDecoder]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ],1.0173308115568946

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=LanguageGuessingTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ],1.017045890093236

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[UNDERSCORE|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncodingVariations|EXISTS]} ,  , feasible : true } ],1.0181589316307156

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.0160796543122281

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ],1.0175694533826183

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ],1.0192104808690141

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], mtd=[difference|EXISTS]} ,  , feasible : true } ],1.015381659357982

[ " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualBasic|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0151103312157579

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CryptTest]|EXISTS], src=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS], mtd=[testBase32OutputStreamByteByByte|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[PREFIX|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ],1.0156118555706697

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CharsetsTest]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[getMappingCode|EXISTS]} ,  , feasible : true } ],1.018738088667378

[ " RDI ":{ {tgt=[TypeDeclaration [name=QCodecTest]|EXISTS], src=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=LanguageGuessingTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=Base64TestData]|EXISTS], fld=[LAST_READ_KEY|EXISTS]} ,  , feasible : true } ],1.020069082863746

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ],1.016426554523132

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LangRule]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[SEP|EXISTS]} ,  , feasible : true } ],1.0163652007040247

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ],1.0160111498260278

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[unencodedBlockSize|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[DECODE_TABLE|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ],1.0164256957797233

[ " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=DigestUtils]|EXISTS], fld=[STREAM_BUFFER_LENGTH|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=DigestUtils]|EXISTS], mtd=[sha256Hex|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], fld=[testData|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], mtd=[testSha384|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testGetBytesUncheckedBadName|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[phonemeText|EXISTS]} ,  , feasible : true } ],1.016068200672175

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncoding|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64Test]|EXISTS], mtd=[testB64from24bit|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0179260834884776

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CryptTest]|EXISTS], mtd=[testCrypt|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[FIXTURE|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ],1.0189955456915125

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " RID ":{ {src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngine]|EXISTS], fld=[ruleType|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngine]|EXISTS], mtd=[getMaxPhonemes|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0183721249609607

[ " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTtestIsCaverphoneEquals]|NEW], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testIsCaverphoneEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS, TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=CharEncodingTest]|EXISTS], mtd=[testUtf16|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=NysiisTest]|EXISTS], fld=[fullNysiis|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[write|EXISTS]} ,  , feasible : true } ],1.0212126817486802

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ],1.0214678443402845

[ " MF ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Encoder]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ],1.0214584069906085

[ " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualBasic|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], mtd=[difference|EXISTS]} ,  , feasible : true } ],1.0215696252367092

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], mtd=[difference|EXISTS]} ,  , feasible : true } ],1.0215209351291967

[ " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualBasic|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ],1.0209015569059579

[ " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=LanguageGuessingTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ],1.0204810791596666

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Utils]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], fld=[SHA256_PREFIX|EXISTS]} ,  , feasible : true } ],1.0199205523537862

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toByteArray|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testMsSqlServer3|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[fourBytesToInt|EXISTS]} ,  , feasible : true } ],1.0215257238660531

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ],1.0216332371581167

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=LanguageGuessingTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ],1.022535202461036

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ],1.0216544030577954

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ],1.0207200837152082

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ],1.019907956096108

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.0199502076845666

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ],1.0230762368236075

[ " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[PREFIX|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ],1.0218998371473287

[ " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CharsetsTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ],1.0218687661217338

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], mtd=[testB64T|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[apr1Crypt|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ],1.023929259786259

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[COMPARATOR|EXISTS]} ,  , feasible : true } ],1.0244971350991892

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ],1.0211689665399302

[ " MF ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Encoder]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ],1.0213580984001513

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ],1.0213580984001513

[ " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodecTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Charsets]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], fld=[EOF|EXISTS]} ,  , feasible : true } ],1.0216571100036336

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS], mtd=[testByteByByte|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ],1.0192635889805313

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ],1.0229691444681823

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithDoubleMetaphone|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleJ|EXISTS]} ,  , feasible : true } ],1.024036807982372

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[FIXTURE|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ],1.0238285700005294

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngine]|EXISTS], fld=[ruleType|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngine]|EXISTS], mtd=[getMaxPhonemes|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=LanguageGuessingTest]|EXISTS], fld=[name|EXISTS]} ,  , feasible : true } ],1.0222623031138525

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Hex]|EXISTS], src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ],1.0175660030967595

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[STRINGS|EXISTS]} ,  , feasible : true } ],1.0176992305161918

[ " MF ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " RID ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Encoder]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncoding]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS]} ,  , feasible : true } ],1.0173575655708178

[ " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualBasic|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.0164914918181172

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], mtd=[difference|EXISTS]} ,  , feasible : true } ],1.0152415307025142

[ " EM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS]} ,  , feasible : true } ],1.0154476704006319

[ " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], fld=[SPTRANS.|EXISTS]} ,  , feasible : true } ],1.0147964470620545

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ],1.0142131041680493

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ],1.0139537786833774

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[encodedBlockSize|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toByteArray|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testRfc4648Section10DecodeWithCrLf|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.015152220838082

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ],1.015703496747199

[ " RMMO ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[available|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=UtilsTest]|EXISTS], mtd=[testConstructor|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.0159219413524356

[ " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS]} ,  , feasible : true } ],1.0179138256216407

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.0221186948547354

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], fld=[engine|EXISTS]} ,  , feasible : true } ],1.021393412740789

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], mtd=[compare|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.0171220428108598

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], mtd=[difference|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[SEP|EXISTS]} ,  , feasible : true } ],1.016742809494524

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testCodec105|EXISTS]} ,  , feasible : true } ],1.0161568050233392

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ],1.0169956909823754

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[loadFromResource|EXISTS]} ,  , feasible : true } ],1.0190962960055747

[ " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[write|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ],1.0197889432833398

[ " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], src=[TypeDeclaration [name=NysiisTest]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS]} ,  , feasible : true } ],1.020338668333196

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=LangRule]|EXISTS], fld=[acceptOnMatch|EXISTS]} ,  , feasible : true } ],1.0176041202256159

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[FIXTURE|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ],1.0193796056894138

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Utils]|EXISTS], src=[TypeDeclaration [name=UtilsTest]|EXISTS], mtd=[testConstructor|EXISTS]} ,  , feasible : true } ],1.0186229623042204

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testAabjoe|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ],1.0189107013305674

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[addLeft|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], src=[TypeDeclaration [name=RPattern]|EXISTS], mtd=[isMatch|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ],1.0177145687280083

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ],1.018090866878746

[ " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=URLCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], mtd=[test|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], src=[TypeDeclaration [name=EncoderException]|EXISTS], fld=[serialVersionUID|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ],1.0178947149514113

[ " PUM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Encoder]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=NysiisTest]|EXISTS], mtd=[testRule7|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTtestDoubleMetaphonePrimary]|NEW], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], mtd=[testDoubleMetaphonePrimary|EXISTS]} ,  , feasible : true } ],1.0166376829673416

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], mtd=[difference|EXISTS]} ,  , feasible : true } ],1.0175342785515598

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Encoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS]} ,  , feasible : true } ],1.0179116239419124

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Encoder]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ],1.0170949349590268

[ " MF ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ],1.0171076568792032

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], mtd=[testOOM|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=URLCodecTest]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], mtd=[testByteByByte|EXISTS]} ,  , feasible : true } ],1.0179840285743047

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ],1.0183279507646816

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Caverphone2Test]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], mtd=[testEncoder|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32TestData]|EXISTS], src=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS], mtd=[testBase32OutputStreamByteByByte|EXISTS]} ,  , feasible : true } ],1.0181586749231357

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], fld=[SEVEN|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[markSupported|EXISTS]} ,  , feasible : true } ],1.0179803192097738

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ],1.0178803586286203

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.0185727790536039

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ],1.0216014528254291

[ " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], src=[TypeDeclaration [name=RPattern]|EXISTS], mtd=[isMatch|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.TGTtestComparatorWithDoubleMetaphone]|NEW], src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithDoubleMetaphone|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[UNDERSCORE|EXISTS]} ,  , feasible : true } ],1.0227706574281163

[ " RDI ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Base32Test]|EXISTS], mtd=[testBase32Chunked|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=RulesApplication]|EXISTS], mtd=[isFound|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testBadCharacters|EXISTS]} ,  , feasible : true } ],1.0233923483551624

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ],1.0201901692632227

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ],1.0198931043065467

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Encoder]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS], fld=[B64T|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS]} ,  , feasible : true } ],1.0214454058728242

[ " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Caverphone]|EXISTS], fld=[encoder|EXISTS]} ,  , feasible : true } ],1.0219565260199528

[ " RID ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[apr1Crypt|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TGTgetDefaultCharset]|NEW], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], fld=[ROUNDS_PREFIX|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], mtd=[sha512Crypt|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ],1.0230264924097112

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=RulesApplication]|EXISTS], fld=[finalRules|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.0220645977811185

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], fld=[DEFAULT_CHARSET_NAME|EXISTS]} ,  , feasible : true } ],1.0234618723675821

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=BinaryEncoderAbstractTest]|EXISTS], mtd=[makeEncoder|EXISTS]} ,  , feasible : true } ],1.0221939954769586

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testGetBytesIso8859_1|EXISTS]} ,  , feasible : true } ],1.0228991387369648

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testAabjoe|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ],1.0223753444773422

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[addLeft|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], src=[TypeDeclaration [name=RPattern]|EXISTS], mtd=[isMatch|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TGTtestDefaultEncoding]|NEW], src=[TypeDeclaration [name=URLCodecTest]|EXISTS], mtd=[testDefaultEncoding|EXISTS]} ,  , feasible : true } ],1.021396005919997

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testAabjoe|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testMsSqlServer1|EXISTS]} ,  , feasible : true } ],1.0208574324342075

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ],1.0208496775033808

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[ROUNDS|EXISTS]} ,  , feasible : true } ],1.0212898642473618

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testAabjoe|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ],1.0208165556224824

[ " MF ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], mtd=[getNameType|EXISTS]} ,  , feasible : true } ],1.0209296191790027

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Encoder]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeDecodeNull|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[PREFIX|EXISTS]} ,  , feasible : true } ],1.019790444670371

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0179175562923999

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], mtd=[difference|EXISTS]} ,  , feasible : true } ],1.017888480126442

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], mtd=[testDoubleMetaphonePrimary|EXISTS]} ,  , feasible : true } ],1.0184436858538726

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[encodeText|EXISTS]} ,  , feasible : true } ],1.0204033076214936

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=NysiisTest]|EXISTS], fld=[fullNysiis|EXISTS]} ,  , feasible : true } ],1.017630360046638

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS], mtd=[encode|EXISTS]} ,  , feasible : true } ],1.0174880003319349

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[lineLength|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS], mtd=[testBase32OutputStreamByteByByte|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0176595595678384

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS, TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[maxCodeLen|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeWithInvalidObject|EXISTS]} ,  , feasible : true } ],1.0197729413832324

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[chunkSeparatorLength|EXISTS]} ,  , feasible : true } ],1.0197079795602428

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD_DEFAULT|EXISTS]} ,  , feasible : true } ],1.0231052998555785

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ResourceConstants]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[STRING_FIXTURE|EXISTS]} ,  , feasible : true } ],1.0230673047899241

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CharEncoding]|EXISTS], src=[TypeDeclaration [name=BaseNCodecTest]|EXISTS], mtd=[testIsInAlphabetByteArrayBoolean|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ],1.0177397815887752

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testNTilde|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ],1.0183903730220254

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ],1.0191165259711366

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], mtd=[test|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[PREFIX|EXISTS]} ,  , feasible : true } ],1.0193048608421165

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ],1.0178586619420866

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[COMPARATOR|EXISTS]} ,  , feasible : true } ],1.0173224711536075

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectNull|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], fld=[WFPV|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS]} ,  , feasible : true } ],1.0175545220192403

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS], fld=[SWISS_GERMAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], fld=[TWO|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[encodeSize|EXISTS]} ,  , feasible : true } ],1.017169149476555

[ " MF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Utils]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ],1.0178802891948908

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[doubleMetaphoneEqualTest|EXISTS]} ,  , feasible : true } ],1.0181912400369484

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], src=[TypeDeclaration [name=RPattern]|EXISTS], mtd=[isMatch|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.017273097278321

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ],1.0170097050697364

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ],1.0180236153280886

[ " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Encoder]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=EncoderException]|EXISTS], src=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], fld=[MD5|EXISTS]} ,  , feasible : true } ],1.0184135128198089

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], mtd=[difference|EXISTS]} ,  , feasible : true } ],1.0175108206387864

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ],1.017695219992424

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], mtd=[difference|EXISTS]} ,  , feasible : true } ],1.0166699101834953

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ],1.0165865013570468

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], fld=[engine|EXISTS]} ,  , feasible : true } ],1.0164097390904554

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[getAlternate|EXISTS]} ,  , feasible : true } ],1.0162882776155107

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ],1.0170027424031078

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[chunkSeparatorLength|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS, TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ],1.0174051292834965

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[EMPTY_BYTE_ARRAY|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[available|EXISTS]} ,  , feasible : true } ],1.0168325183972828

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeWithInvalidObject|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTtestIsMetaphoneEqualJohn]|NEW], src=[TypeDeclaration [name=MetaphoneTest]|EXISTS], mtd=[testIsMetaphoneEqualJohn|EXISTS]} ,  , feasible : true } ],1.0163198948728973

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[chunkSeparatorLength|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[mark|EXISTS]} ,  , feasible : true } ],1.0157666036755153

[ " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[encodeBlanks|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=URLCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ],1.0157625172521767

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], src=[TypeDeclaration [name=Base64TestData]|EXISTS], mtd=[streamToBytes|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ResourceConstants]|EXISTS], src=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.0166756474325884

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ],1.0167161665390128

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.0157421065924985

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ],1.0187526194174046

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ],1.021661234261797

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[EOF|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[BLANK|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32TestData]|EXISTS], src=[TypeDeclaration [name=DigestUtils]|EXISTS], fld=[STREAM_BUFFER_LENGTH|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=BCodec]|EXISTS]} ,  , feasible : true } ],1.023558823712104

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodecTest]|EXISTS], src=[TypeDeclaration [name=DecoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0201418546493761

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], fld=[AHKLOQRUX|EXISTS]} ,  , feasible : true } ],1.023392396840702

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ],1.0239526110475943

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[doubleMetaphoneEqualTest|EXISTS]} ,  , feasible : true } ],1.024599633521361

[ " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], src=[TypeDeclaration [name=RPattern]|EXISTS], mtd=[isMatch|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.TgtClassEC]|NEW], src=[TypeDeclaration [name=Charsets]|EXISTS], fld=[UTF_16LE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.TgtClassEC]|NEW], src=[TypeDeclaration [name=Charsets]|EXISTS], mtd=[toCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0209893174938127

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=RPattern]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[fromAscii|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.0212971421174646

[ " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[SEP|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=URLCodecTest]|EXISTS], fld=[SWISS_GERMAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=URLCodecTest]|EXISTS], mtd=[testDecodeInvalid|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BinaryEncoderAbstractTest]|EXISTS], mtd=[testEncodeNull|EXISTS]} ,  , feasible : true } ],1.0218365905731979

[ " MF ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Encoder]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ],1.0206005294469433

[ " MF ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Encoder]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ],1.0206005294469433

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], mtd=[difference|EXISTS]} ,  , feasible : true } ],1.0198398401604292

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ],1.018800253605326

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MIME_CHUNK_SIZE|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[ANY|EXISTS]} ,  , feasible : true } ],1.0187205485376187

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RulesApplication]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[ANY|EXISTS]} ,  , feasible : true } ],1.0176337652614136

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[DEFAULT_BUFFER_SIZE|EXISTS]} ,  , feasible : true } ],1.017685539160899

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ],1.0206103805604205

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[hasData|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ],1.0191515186364282

[ " MM ":{ {tgt=[TypeDeclaration [name=BCodecTest]|EXISTS], src=[TypeDeclaration [name=CryptTest]|EXISTS], mtd=[testCryptWithBytes|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], fld=[WFPV|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[metaphone|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[getEncoding|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=BCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Phoneme]|EXISTS], src=[TypeDeclaration [name=Context]|EXISTS]} ,  , feasible : true } ],1.0213950980786644

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.0220852049716556

[ " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING_STRING|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.0210989142185152

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[MSG|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testSkipBig|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], fld=[decodeTable|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[PRINTABLE_CHARS|EXISTS]} ,  , feasible : true } ],1.0180963519943245

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32TestData]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testGetEncoding_SMITH_to_SMTH|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ],1.0187415122977126

[ " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], fld=[LOOP|EXISTS]} ,  , feasible : true } ],1.0183807914517482

[ " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=BCodecTest]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTtestIsMetaphoneEqualWhite]|NEW], src=[TypeDeclaration [name=MetaphoneTest]|EXISTS], mtd=[testIsMetaphoneEqualWhite|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], mtd=[testSpeedCheck2|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS], fld=[FRONTV|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=DigestUtils]|EXISTS], mtd=[getDigest|EXISTS]} ,  , feasible : true } ],1.0236697351056991

[ " MF ":{ {tgt=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=BaseNCodecTest]|EXISTS], mtd=[testIsInAlphabetByteArrayBoolean|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], mtd=[isConcat|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.TGTmakeEncoder]|NEW], src=[TypeDeclaration [name=BinaryEncoderAbstractTest]|EXISTS], mtd=[makeEncoder|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ],1.0246808729009325

[ " IM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[CHUNK_SEPARATOR|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], src=[TypeDeclaration [name=Lang]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ],1.0240988822446726

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ],1.0244247059579155

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Crypt]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ],1.0242227391712448

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[doubleMetaphoneEqualTest|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.0249906147526464

[ " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], src=[TypeDeclaration [name=RPattern]|EXISTS], mtd=[isMatch|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32TestData]|EXISTS], fld=[STRING_FIXTURE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32TestData]|EXISTS], mtd=[streamToBytes|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.TGTtestComparatorWithDoubleMetaphoneAndInvalidInput]|NEW], src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithDoubleMetaphoneAndInvalidInput|EXISTS]} ,  , feasible : true } ],1.022269291579257

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ],1.0198314218508324

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[differenceEncoded|EXISTS]} ,  , feasible : true } ],1.016819538792035

[ " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptWithoutSalt|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ],1.0163949472125717

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.0144124723540977

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], mtd=[difference|EXISTS]} ,  , feasible : true } ],1.0157223002126292

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[PREFIX|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeAsString|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], fld=[encodeSize|EXISTS]} ,  , feasible : true } ],1.0153423119356426

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ],1.0158745986302833

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=CryptTest]|EXISTS], mtd=[testDefaultCryptVariant|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TGTtestConstructor]|NEW], src=[TypeDeclaration [name=UtilsTest]|EXISTS], mtd=[testConstructor|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Base32Test]|EXISTS], fld=[BASE32HEX_TEST_CASES|EXISTS]} ,  , feasible : true } ],1.0175019647257209

[ " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PEM_CHUNK_SIZE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Caverphone2Test]|EXISTS], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptBytes|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ],1.0173087631177788

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeWithInvalidObject|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testCaverphoneRevisitedCommonCodeAT1111|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], fld=[RADIX|EXISTS]} ,  , feasible : true } ],1.0188171289083343

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ],1.0180177524864442

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.0185649771988097

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.019625427004413

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncodingVariations|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[getEncoding|EXISTS]} ,  , feasible : true } ],1.0196505815776875

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[SPACE|EXISTS]} ,  , feasible : true } ],1.0199306420480987

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[difference|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.0194885458486531

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ],1.0192942359056316

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.0180614221093278

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[decodeText|EXISTS]} ,  , feasible : true } ],1.0178857875362124

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[encodedBlockSize|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[addLeft|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[markSupported|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_4|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testDecodeByteArray|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ],1.016049920865545

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithDoubleMetaphoneAndInvalidInput|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[unencodedBlockSize|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[fromAscii|EXISTS]} ,  , feasible : true } ],1.0170344426466136

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ],1.0184025313648335

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Md5Crypt]|EXISTS], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[parsePhoneme|EXISTS]} ,  , feasible : true } ],1.0198096176167726

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[doubleMetaphoneEqualTest|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], fld=[SHA_384|EXISTS]} ,  , feasible : true } ],1.020516017808733

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testIsVowel_SmallD_ReturnsFalse|EXISTS]} ,  , feasible : true } ],1.0200614512281116

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], src=[TypeDeclaration [name=RPattern]|EXISTS], mtd=[isMatch|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testLocaleIndependence|EXISTS]} ,  , feasible : true } ],1.021386587759338

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ],1.0210067058442376

[ " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[differenceEncoded|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[readResults|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectNull|EXISTS]} ,  , feasible : true } ],1.0185565656262048

[ " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testLocaleIndependence|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=QCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64TestData]|EXISTS], fld=[CODEC_101_MULTIPLE_OF_3|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64TestData]|EXISTS], mtd=[randomData|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0218557883225463

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ],1.0220678101981333

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.0191457447456662

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], src=[TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0199598591049583

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ],1.0198100960134575

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[decodeText|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], mtd=[test|EXISTS]} ,  , feasible : true } ],1.02069860151833

[ " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[BLANK|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=URLCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Sha2Crypt]|EXISTS], src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testMd5CryptStrings|EXISTS]} ,  , feasible : true } ],1.0185911442787827

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[COMPARATOR|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ],1.0203823616343612

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[difference|EXISTS]} ,  , feasible : true } ],1.0199931306992707

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS, TypeDeclaration [name=DoubleMetaphone]|EXISTS, TypeDeclaration [name=Nysiis]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[write|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CryptTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], mtd=[setConcat|EXISTS]} ,  , feasible : true } ],1.019122271516803

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptBytes|EXISTS]} ,  , feasible : true } ],1.0187744746749878

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_4|EXISTS]} ,  , feasible : true } ],1.0181420105590824

[ " RID ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Caverphone2Test]|EXISTS], src=[TypeDeclaration [name=PhoneticEngine]|EXISTS], mtd=[isConcat|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[PREFIX|EXISTS]} ,  , feasible : true } ],1.0183900169516007

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.0183900169516007

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=SomeLanguages]|EXISTS], mtd=[getLanguages|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD_DEFAULT|EXISTS]} ,  , feasible : true } ],1.0188437863584547

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[PREFIX|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], mtd=[testDoubleMetaphoneAlternate|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Lang]|EXISTS], src=[TypeDeclaration [name=BaseNCodecTest]|EXISTS], mtd=[testIsInAlphabetByte|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_7|EXISTS]} ,  , feasible : true } ],1.0175523615240865

[ " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[lineLength|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=DecoderExceptionTest]|EXISTS], fld=[MSG|EXISTS]} ,  , feasible : true } ],1.0169646251666318

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ],1.0180504696713448

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ],1.0204322844706273

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiChars|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone2Test]|EXISTS], src=[TypeDeclaration [name=NysiisTest]|EXISTS], fld=[fullNysiis|EXISTS]} ,  , feasible : true } ],1.0213702671400262

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[doubleMetaphoneEqualTest|EXISTS]} ,  , feasible : true } ],1.0222122765387243

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.0197161189037383

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], src=[TypeDeclaration [name=RPattern]|EXISTS], mtd=[isMatch|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0197525599519623

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ],1.0177617508425376

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ],1.0186015308097773

[ " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[differenceEncoded|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testCodec98NPE|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ],1.019228975713185

[ " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptWithoutSalt|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ],1.0197599772068524

[ " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptWithoutSalt|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ],1.0197599772068524

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ],1.0212267198409193

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.0206213558080883

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[unencodedBlockSize|EXISTS]} ,  , feasible : true } ],1.0204398298821835

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.02092007545062

[ " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], src=[TypeDeclaration [name=Context]|EXISTS], fld=[lbitWorkArea|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32TestData]|EXISTS], fld=[BASE32_FIXTURE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32TestData]|EXISTS], mtd=[resizeArray|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.TGTtestLocaleIndependence]|NEW], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testLocaleIndependence|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ],1.0217004068564233

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[doubleMetaphoneEqualTest|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[decodeQuotedPrintable|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=EncoderException]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.0217218771939856

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ],1.021717818526405

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[write|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS, TypeDeclaration [name=DoubleMetaphone]|EXISTS, TypeDeclaration [name=Nysiis]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ],1.0173374550147718

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[encodeText|EXISTS]} ,  , feasible : true } ],1.0189481231123119

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], fld=[WWW_FORM_URL|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ],1.0173478738420425

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncodingVariations|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestCodec98NPE]|NEW], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testCodec98NPE|EXISTS]} ,  , feasible : true } ],1.0199282966848866

[ " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptWithoutSalt|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ],1.0191837155449155

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ],1.0223244192716996

[ " MF ":{ {tgt=[TypeDeclaration [name=Hex]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_3|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncodingVariations|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[encodedBlockSize|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncoding]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithDoubleMetaphoneAndInvalidInput|EXISTS]} ,  , feasible : true } ],1.0213916640695901

[ " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ],1.0222652433667851

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.0182976911848824

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ],1.0193489038846402

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.0207274880710413

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_3|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[CHUNKED_STRINGS|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ],1.0189606828716473

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testToAsciiBytes|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH_MAPPING_STRING|EXISTS]} ,  , feasible : true } ],1.018734258996129

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ],1.018099363733651

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ],1.0182474286604053

[ " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], fld=[THREE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[removeAccents|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=CharEncoding]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=NysiisTest]|EXISTS], fld=[fullNysiis|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ],1.0184431599911223

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], src=[TypeDeclaration [name=RPattern]|EXISTS], mtd=[isMatch|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0187358425141395

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=CryptTest]|EXISTS], mtd=[testCryptWithEmptySalt|EXISTS]} ,  , feasible : true } ],1.0201162453813544

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], mtd=[testSetRuleTypeExact|EXISTS]} ,  , feasible : true } ],1.0201438968235335

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[differenceEncoded|EXISTS]} ,  , feasible : true } ],1.0198263253847422

[ " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptWithoutSalt|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[available|EXISTS]} ,  , feasible : true } ],1.0194020868771332

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptWithoutSalt|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[available|EXISTS]} ,  , feasible : true } ],1.0199152324425647

[ " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.0181459049018633

[ " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[UNDERSCORE|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.0179408011782425

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=UtilsTest]|EXISTS], mtd=[testConstructor|EXISTS]} ,  , feasible : true } ],1.0159535518146294

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ],1.018817729609257

[ " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[decodeText|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TgtClassEC]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], fld=[acceptOnMatch|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TgtClassEC]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[BYTES_PER_ENCODED_BLOCK|EXISTS]} ,  , feasible : true } ],1.0206579867094372

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=LanguageSet]|EXISTS], mtd=[from|EXISTS]} ,  , feasible : true } ],1.0187971676548786

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[decodeBase64|EXISTS]} ,  , feasible : true } ],1.0205007005836122

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], fld=[DIGITS_LOWER|EXISTS]} ,  , feasible : true } ],1.0206622364893685

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ],1.0203614555352993

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], fld=[DIGITS_LOWER|EXISTS]} ,  , feasible : true } ],1.0188661679285076

[ " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], src=[TypeDeclaration [name=RuleTest]|EXISTS], mtd=[testPhonemeComparedToLaterIsNegative|EXISTS]} ,  , feasible : true } ],1.017094448557166

[ " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[chunkSeparatorLength|EXISTS]} ,  , feasible : true } ],1.017601209645246

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ],1.0176938006536074

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS], mtd=[testInvalidEncoding|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.0204239163111302

[ " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ],1.0206759088755444

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ],1.020935221862627

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testIsCaverphoneEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ],1.0222439237017087

[ " PUM ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], mtd=[getLanguages|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[getNextChar|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], fld=[PRIMARY_INDEX|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], mtd=[testDoubleMetaphonePrimary|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ],1.0220334025540239

[ " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[PREFIX|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], fld=[DEFAULT_CHARSET_NAME|EXISTS]} ,  , feasible : true } ],1.0215523302950296

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ],1.0214906029411317

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ],1.021201209265864

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=BinaryEncoderAbstractTest]|EXISTS], mtd=[testEncodeNull|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], fld=[PRIMARY_INDEX|EXISTS]} ,  , feasible : true } ],1.0223216862177256

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ],1.0222649151098597

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], src=[TypeDeclaration [name=PhoneticEngine]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[doubleMetaphoneEqualTest|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[isMetaphoneEqual|EXISTS]} ,  , feasible : true } ],1.0211930088831864

[ " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[setEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=NysiisTest]|EXISTS], fld=[fullNysiis|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=NysiisTest]|EXISTS], mtd=[testSpecialBranches|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], fld=[DIGITS_UPPER|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[PREFIX|EXISTS]} ,  , feasible : true } ],1.02150843289882

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], mtd=[testB64from24bit|EXISTS]} ,  , feasible : true } ],1.0193219202393455

[ " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[differenceEncoded|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.TGTtoCharset]|NEW], src=[TypeDeclaration [name=Charsets]|EXISTS], mtd=[toCharset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Languages.TGTgetLanguages]|NEW], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], mtd=[getLanguages|EXISTS]} ,  , feasible : true } ],1.0187754854581386

[ " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[differenceEncoded|EXISTS]} ,  , feasible : true } ],1.0188596571705046

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptWithoutSalt|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[mark|EXISTS]} ,  , feasible : true } ],1.01863378487393

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.0162123414050768

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.0162123414050768

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ],1.0189972730805381

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS], fld=[serialVersionUID|EXISTS]} ,  , feasible : true } ],1.0178899673610833

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], src=[TypeDeclaration [name=RuleTest]|EXISTS], mtd=[testPhonemeComparedToSelfIsZero|EXISTS]} ,  , feasible : true } ],1.0184560422197417

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ],1.0186717956469065

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ],1.0204649443824987

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ],1.0203887519298325

[ " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=PhonemeList]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ],1.0238715678574746

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ],1.0238715678574746

[ " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testCodec130|EXISTS]} ,  , feasible : true } ],1.0251462749154152

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ],1.0298351058183948

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Caverphone2Test]|EXISTS], src=[TypeDeclaration [name=NysiisTest]|EXISTS], mtd=[testOthers|EXISTS]} ,  , feasible : true } ],1.0279192950821752

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytes|EXISTS]} ,  , feasible : true } ],1.0279813357320242

[ " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ],1.029121685850327

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], src=[TypeDeclaration [name=RPattern]|EXISTS], mtd=[isMatch|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ],1.0295215608143857

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.0229164104738762

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ],1.0240340847420721

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.027994422271255

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ],1.0285610033991752

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptWithoutSalt|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Base32Test]|EXISTS], mtd=[testRandomBytesChunked|EXISTS]} ,  , feasible : true } ],1.024945761924234

[ " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ],1.0245790320378239

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BaseNCodecTest]|EXISTS], src=[TypeDeclaration [name=Base32TestData]|EXISTS], fld=[BASE32_FIXTURE|EXISTS]} ,  , feasible : true } ],1.0251777526216013

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.0271837641706207

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], src=[TypeDeclaration [name=RPattern]|EXISTS], mtd=[isMatch|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0269775765829867

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[doubleMetaphoneEqualTest|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ],1.0273307094503226

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], src=[TypeDeclaration [name=RPattern]|EXISTS], mtd=[isMatch|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.026784489692371

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], src=[TypeDeclaration [name=RPattern]|EXISTS], mtd=[isMatch|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0227738562096615

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], src=[TypeDeclaration [name=Charsets]|EXISTS], mtd=[toCharset|EXISTS]} ,  , feasible : true } ],1.0226480564148819

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[differenceEncoded|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[getEncoding|EXISTS]} ,  , feasible : true } ],1.022319183348471

[ " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncoding|EXISTS]} ,  , feasible : true } ],1.022486832816647

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptWithoutSalt|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ],1.0231720037056895

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.0222995125875078

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD_DEFAULT|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[unencodedBlockSize|EXISTS]} ,  , feasible : true } ],1.021261744444917

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RulesApplication]|EXISTS], src=[TypeDeclaration [name=ResourceConstants]|EXISTS], fld=[EXT_CMT_START|EXISTS]} ,  , feasible : true } ],1.0248406056245543

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiBytes|EXISTS]} ,  , feasible : true } ],1.0244719701192238

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ],1.0243185297618127

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeWithInvalidObject|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeNull|EXISTS]} ,  , feasible : true } ],1.0230042377364867

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[available|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeClassCastException|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[UNDERSCORE|EXISTS]} ,  , feasible : true } ],1.0222267858719398

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[decodeText|EXISTS]} ,  , feasible : true } ],1.0210182875074068

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=HexTest]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[STRING_FIXTURE|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=EncoderException]|EXISTS], fld=[serialVersionUID|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.019361681635577

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=EncoderException]|EXISTS], src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[parseRules|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[mark|EXISTS]} ,  , feasible : true } ],1.02160124419448

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ],1.0274575223552578

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[encodeHexString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[available|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CharEncoding]|EXISTS], src=[TypeDeclaration [name=RefinedSoundexTest]|EXISTS], mtd=[testNewInstance|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=PhoneticEngine]|EXISTS], mtd=[getNameType|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ],1.024437565868571

[ " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Caverphone2Test]|EXISTS], src=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS], mtd=[testBase32EmptyOutputStream|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ],1.022875246923454

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[markSupported|EXISTS]} ,  , feasible : true } ],1.0242670359669563

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ],1.02443734841921

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ],1.0277067030618805

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ],1.0242775115904603

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_6|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=Base32Test]|EXISTS], fld=[BASE32_TEST_CASES_CHUNKED|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS]} ,  , feasible : true } ],1.0253044180886477

[ " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], fld=[ROUNDS_MAX|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], mtd=[sha2Crypt|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_3|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32TestData]|EXISTS], fld=[STRING_FIXTURE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32TestData]|EXISTS], mtd=[bytesContain|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0256698709042016

[ " RDI ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], mtd=[setNameType|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testDecodeObjects|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING_STRING|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[FIXTURE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testCCedilla|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0259969770116808

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[doubleMetaphoneEqualTest|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[leftToRightThenRightToLeftProcessing|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[SPACE|EXISTS]} ,  , feasible : true } ],1.0256811236224046

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], src=[TypeDeclaration [name=RPattern]|EXISTS], mtd=[isMatch|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0255400751234334

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptWithoutSalt|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ],1.0246663820335826

[ " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testLocaleIndependence|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Caverphone2Test]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testSafeCharEncodeDecode|EXISTS]} ,  , feasible : true } ],1.0277829438661448

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[differenceEncoded|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], fld=[maxLength|EXISTS]} ,  , feasible : true } ],1.0276917557659848

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ],1.0249440054636108

[ " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptWithoutSalt|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[mark|EXISTS]} ,  , feasible : true } ],1.0245306527343048

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.021720405965532

[ " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodec]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=EncoderException]|EXISTS], fld=[serialVersionUID|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DigestUtils]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[maxCodeLen|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[DEFAULT_BUFFER_SIZE|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CharsetsTest]|EXISTS], src=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], fld=[MD5|EXISTS]} ,  , feasible : true } ],1.0202635400982472

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Md5Crypt]|EXISTS], src=[TypeDeclaration [name=RPattern]|EXISTS], mtd=[isMatch|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], src=[TypeDeclaration [name=CryptTest]|EXISTS], mtd=[testCrypt|EXISTS]} ,  , feasible : true } ],1.0201743788246176

[ " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ],1.0214635443914966

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptWithoutSalt|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ],1.0216396175589457

[ " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=LanguageSet]|EXISTS], mtd=[from|EXISTS]} ,  , feasible : true } ],1.020562218186684

[ " IM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[mark|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TGTtestEncodeUrlWithNullBitSet]|NEW], src=[TypeDeclaration [name=URLCodecTest]|EXISTS], mtd=[testEncodeUrlWithNullBitSet|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ],1.0215564403980915

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ],1.021171363432084

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS], mtd=[testSolrASHKENAZI|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS], fld=[PAT_K|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ],1.0227646061023663

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getDefaultBufferSize|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[maxLength|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=Soundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_2|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[PREFIX|EXISTS]} ,  , feasible : true } ],1.0232810321136463

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[encodedBlockSize|EXISTS]} ,  , feasible : true } ],1.0268373905160328

[ " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharsetName|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[SEP|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base64InputStream]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTencode]|NEW], src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS], mtd=[encode|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.PhoneticEngine.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.PhoneticEngine.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUsAscii|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ],1.028617825269337

[ " RDI ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Hex]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleR|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CharEncodingTest]|EXISTS], mtd=[testUtf8|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[FIXTURE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualBasic|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.029208160918859

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ],1.0235456470560182

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], src=[TypeDeclaration [name=RPattern]|EXISTS], mtd=[isMatch|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0247263043699568

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ],1.024258469720707

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptStrings|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=RuleTest]|EXISTS], mtd=[makePhonemes|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ],1.0248228462961098

[ " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ],1.0260960153063785

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Rule]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[MD5_PREFIX|EXISTS]} ,  , feasible : true } ],1.0247783633934664

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptWithoutSalt|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testLocaleIndependence|EXISTS]} ,  , feasible : true } ],1.0276191597217121

[ " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ],1.0299969377117328

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[setEncodeBlanks|EXISTS]} ,  , feasible : true } ],1.0298129083566065

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[doubleMetaphoneEqualTest|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[encodeText|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.027902498335419

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], src=[TypeDeclaration [name=RPattern]|EXISTS], mtd=[isMatch|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_2|EXISTS]} ,  , feasible : true } ],1.0282106896201084

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ],1.0245938194151643

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[encodeHex|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodecTest]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], fld=[testData|EXISTS]} ,  , feasible : true } ],1.025538072682473

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[differenceEncoded|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[SEP|EXISTS]} ,  , feasible : true } ],1.0261713873080496

[ " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptWithoutSalt|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=ColognePhonetic]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[doubleMetaphoneNotEqualTest|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ],1.028273409310519

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[VOWELS|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=StringDecoder]|EXISTS]} ,  , feasible : true } ],1.0265951349510647

[ " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS, TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[maxCodeLen|EXISTS]} ,  , feasible : true } ],1.0248812554815303

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ],1.0249703250365356

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[available|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=LanguageSet]|EXISTS], mtd=[from|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BaseNCodecTest]|EXISTS], src=[TypeDeclaration [name=LangRule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ],1.0223941853736662

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UtilsTest]|EXISTS], src=[TypeDeclaration [name=RulesApplication]|EXISTS], mtd=[getPhonemeBuilder|EXISTS]} ,  , feasible : true } ],1.0211244149599592

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[encodeText|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ],1.0241573094618996

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], fld=[URL_SAFE_ENCODE_TABLE|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[available|EXISTS]} ,  , feasible : true } ],1.0238608205395974

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ],1.0205679993294203

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.0245674414744588

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[resizeBuffer|EXISTS]} ,  , feasible : true } ],1.025533981585643

[ " IM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringUtils]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Charsets]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[write|EXISTS]} ,  , feasible : true } ],1.024964400836443

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.0241893851112502

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[SEP|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], mtd=[sha512Crypt|EXISTS]} ,  , feasible : true } ],1.024686732902331

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[FIXTURE|EXISTS]} ,  , feasible : true } ],1.020826523473272

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringUtils]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS]} ,  , feasible : true } ],1.020775593997461

[ " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32TestData]|EXISTS], src=[TypeDeclaration [name=Charsets]|EXISTS], mtd=[toCharset|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BCodecTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleCC|EXISTS]} ,  , feasible : true } ],1.0198956410059339

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[PRINTABLE_CHARS|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[markSupported|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStream]|EXISTS]} ,  , feasible : true } ],1.0215424124487822

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[write|EXISTS]} ,  , feasible : true } ],1.0212634837039625

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.0213607265770621

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS], mtd=[testSolrASHKENAZI|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=PhonemeList]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Encoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[SPACE|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CharsetsTest]|EXISTS], mtd=[testUtf8|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=StringDecoder]|EXISTS]} ,  , feasible : true } ],1.0224751416011748

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryCodec]|EXISTS], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ],1.0224322862770014

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[hasData|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32TestData]|EXISTS], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ],1.0215518025157422

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ],1.0230320326655464

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ],1.024184667129277

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[doubleMetaphoneEqualTest|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ],1.0239955238137044

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testInvalidEncoding|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], fld=[EOF|EXISTS]} ,  , feasible : true } ],1.0248547585887808

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[differenceEncoded|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testCompare_BURNS_BOURNE_SuccessfullyMatched|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone2Test]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ],1.0247343107977678

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=RuleTest]|EXISTS], mtd=[makePhonemes|EXISTS]} ,  , feasible : true } ],1.0241927529813226

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[differenceEncoded|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorString|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTisConcat]|NEW], src=[TypeDeclaration [name=PhoneticEngine]|EXISTS], mtd=[isConcat|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS], mtd=[transcodeRemaining|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS], fld=[PAT_PH_PF|EXISTS]} ,  , feasible : true } ],1.027791050558903

[ " RID ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeList]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[available|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], mtd=[testAllChars|EXISTS]} ,  , feasible : true } ],1.020811691353058

[ " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleAEIOUY|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testHyphen|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ],1.020670397706938

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.0221629963585226

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeWithInvalidObject|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getDefaultBufferSize|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=Caverphone]|EXISTS], fld=[encoder|EXISTS]} ,  , feasible : true } ],1.0232561558806699

[ " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS], src=[TypeDeclaration [name=RuleTest]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=PhonemeList]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64Test]|EXISTS], mtd=[testB64T|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[getNextPos|EXISTS]} ,  , feasible : true } ],1.0223079878211183

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS]} ,  , feasible : true } ],1.0224734474911539

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[length|EXISTS]} ,  , feasible : true } ],1.0214111134792612

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ],1.0218266401111256

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], fld=[DIGITS_LOWER|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ],1.0216829313479827

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ],1.0224332454270315

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.019933530271848

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.0188907275612336

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=CharsetsTest]|EXISTS], mtd=[testUtf8|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base32]|EXISTS], fld=[HEX_ENCODE_TABLE|EXISTS]} ,  , feasible : true } ],1.0174971673101616

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32TestData]|EXISTS], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ],1.0207673082189874

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ],1.0229679419779694

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncodingVariations|EXISTS]} ,  , feasible : true } ],1.0245483432765268

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptWithoutSalt|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ],1.0227703012439764

[ " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ],1.0228125819319118

[ " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Nysiis]|EXISTS], mtd=[nysiis|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], fld=[LOOP|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ],1.021331497179627

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[instance|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=EncoderException]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], fld=[primary|EXISTS]} ,  , feasible : true } ],1.021581283294542

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=PhoneticEngine]|EXISTS], fld=[DEFAULT_MAX_PHONEMES|EXISTS]} ,  , feasible : true } ],1.0220049527694555

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DigestUtils]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toByteArray|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ],1.022161533058321

[ " IM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[doubleMetaphoneEqualTest|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], fld=[TWO|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[encodeBlanks|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[PREFIX|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32TestData]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UtilsTest]|EXISTS], mtd=[testConstructor|EXISTS]} ,  , feasible : true } ],1.0228551604177578

[ " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[EOF|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[decodeUrl|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTtestCaverphoneRevisitedCommonCodeAT1111]|NEW], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testCaverphoneRevisitedCommonCodeAT1111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=DecoderExceptionTest]|EXISTS], mtd=[testConstructorStringThrowable|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[hasData|EXISTS]} ,  , feasible : true } ],1.02290124252237

[ " MM ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testEdgeCases|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecTest]|EXISTS], fld=[codec|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecTest]|EXISTS], mtd=[testIsInAlphabetByteArrayBoolean|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], mtd=[testMd2Length|EXISTS]} ,  , feasible : true } ],1.0239933160376853

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[removeAccents|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=URLCodecTest]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ],1.0246958330274192

[ " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptWithoutSalt|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[encodeText|EXISTS]} ,  , feasible : true } ],1.0213784351064517

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], mtd=[testMd5HexLength|EXISTS]} ,  , feasible : true } ],1.0195364883220706

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], fld=[PRIMARY_INDEX|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BCodecTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS], mtd=[testUtf8|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ],1.019566572961291

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=ResourceConstants]|EXISTS], src=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS], mtd=[testWriteToNullCoverage|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[append|EXISTS]} ,  , feasible : true } ],1.0202843219704425

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ],1.0197614874522478

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], fld=[RADIX|EXISTS]} ,  , feasible : true } ],1.0190515588862594

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[unencodedBlockSize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=RPattern]|EXISTS], mtd=[isMatch|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testDoubleMetaphone|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0197556161359542

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0198881682737848

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[newStringUtf16|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], fld=[COV2CHAR.|EXISTS]} ,  , feasible : true } ],1.0216416862559068

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], fld=[STRING_FIXTURE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testRead0|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[PREFIX|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS], mtd=[isStrict|EXISTS]} ,  , feasible : true } ],1.0258173503006303

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32TestData]|EXISTS], src=[TypeDeclaration [name=LanguageGuessingTest]|EXISTS], fld=[EXACT|EXISTS]} ,  , feasible : true } ],1.0209760557916143

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD_DEFAULT|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_3|EXISTS]} ,  , feasible : true } ],1.0210972354638463

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Charsets]|EXISTS], mtd=[toCharset|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[isBase64|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=URLCodecTest]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharsetName|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ],1.0210524964380616

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ],1.021088118817859

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ],1.0197139771931776

[ " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Lang]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.TGTtestConstructorThrowable]|NEW], src=[TypeDeclaration [name=DecoderExceptionTest]|EXISTS], mtd=[testConstructorThrowable|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=URLCodecTest]|EXISTS], mtd=[constructString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[assertDoubleMetaphone|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=DigestUtils]|EXISTS], mtd=[sha256Hex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ],1.0218178711528556

[ " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[chunkSeparatorLength|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[phoneticExpected|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=BCodec]|EXISTS]} ,  , feasible : true } ],1.0200531654243994

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], mtd=[setMaxPhonemes|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=EncoderException]|EXISTS], fld=[serialVersionUID|EXISTS]} ,  , feasible : true } ],1.020170108850383

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ],1.0209115531021333

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[decodeText|EXISTS]} ,  , feasible : true } ],1.021458613046534

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[doubleMetaphoneEqualTest|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ResourceConstants]|EXISTS], src=[TypeDeclaration [name=Context]|EXISTS], fld=[ibitWorkArea|EXISTS]} ,  , feasible : true } ],1.0213904545971693

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=URLCodecTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testGetEncoding_One_Letter_to_Nothing|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], fld=[GKQ|EXISTS]} ,  , feasible : true } ],1.0232585405306394

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[doubleMetaphoneEqualTest|EXISTS]} ,  , feasible : true } ],1.022511766849102

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], src=[TypeDeclaration [name=Base32Test]|EXISTS], fld=[BASE32HEX_TEST_CASES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BCodecTest]|EXISTS], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testHugeLineSeparator|EXISTS]} ,  , feasible : true } ],1.022272077370162

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ],1.0231945310287254

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testCompare_STEVEN_STEFAN_SuccessfullyMatched|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], src=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], fld=[LOOP|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=BaseNCodecTest]|EXISTS], mtd=[testIsInAlphabetByte|EXISTS]} ,  , feasible : true } ],1.0241034201497659

[ " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptWithoutSalt|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[resizeBuffer|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ],1.0240615851142774

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=RefinedSoundexTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ],1.02289629422884

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ],1.0246689418279933

[ " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=LanguageGuessingTest]|EXISTS], src=[TypeDeclaration [name=MetaphoneTest]|EXISTS], mtd=[testWordsWithCIA|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], src=[TypeDeclaration [name=CryptTest]|EXISTS], mtd=[testCryptWithBytes|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getDefaultBufferSize|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.0250634130260845

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Utils]|EXISTS], src=[TypeDeclaration [name=MetaphoneTest]|EXISTS], mtd=[testMetaphone|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CharsetsTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], fld=[FOUR|EXISTS]} ,  , feasible : true } ],1.0254577729941952

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[mark|EXISTS]} ,  , feasible : true } ],1.0265272133395693

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], src=[TypeDeclaration [name=BCodecTest]|EXISTS], fld=[SWISS_GERMAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ],1.024761721315575

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncoding|EXISTS]} ,  , feasible : true } ],1.0241547597841643

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0241878306937553

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.BaseNCodec.TgtClassEC]|NEW], src=[TypeDeclaration [name=Context]|EXISTS], fld=[eof|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.BaseNCodec.TgtClassEC]|NEW], src=[TypeDeclaration [name=Context]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CharsetsTest]|EXISTS], mtd=[testUsAscii|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=BinaryEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[unencodedBlockSize|EXISTS]} ,  , feasible : true } ],1.0256316385012596

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptWithoutSalt|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[encodeText|EXISTS]} ,  , feasible : true } ],1.0281000535796632

[ " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.0281000535796632

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ],1.0285670380429028

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Charsets]|EXISTS], mtd=[toCharset|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], fld=[DEFAULT_CHARSET|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RefinedSoundex]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS]} ,  , feasible : true } ],1.0229596977482232

[ " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ],1.0207332633998774

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], src=[TypeDeclaration [name=CryptTest]|EXISTS], mtd=[testCryptWithBytes|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], fld=[DEFAULT_CHARSET|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[write|EXISTS]} ,  , feasible : true } ],1.0206188991490512

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[apr1Crypt|EXISTS]} ,  , feasible : true } ],1.0215548107917256

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[decodeText|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CharEncoding]|EXISTS], src=[TypeDeclaration [name=BinaryEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ],1.0228669933191195

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.024162886881739

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ],1.022593151309971

[ " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTclean]|NEW], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[clean|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[append|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=BaseNCodecTest]|EXISTS], fld=[codec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ],1.0235429522847346

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=DigestUtils]|EXISTS], mtd=[digest|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS], mtd=[testNewInstance|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS], fld=[serialVersionUID|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=LangRule]|EXISTS], src=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], mtd=[describeTo|EXISTS]} ,  , feasible : true } ],1.024513444186687

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[EMPTY_CHAR_ARRAY|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ],1.0238663073041914

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0258715201006845

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[doubleMetaphoneEqualTest|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[encodeQuotedPrintable|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32Test]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ],1.027877553166193

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.0264720286119422

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], fld=[WWW_FORM_URL|EXISTS]} ,  , feasible : true } ],1.0267908033958855

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ],1.0250573827856833

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeList]|EXISTS], src=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], mtd=[testMd5HexLength|EXISTS]} ,  , feasible : true } ],1.0285119974507224

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_6|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiBytes|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toByteArray|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=CryptTest]|EXISTS], mtd=[testDefaultCryptVariant|EXISTS]} ,  , feasible : true } ],1.0283821527839754

[ " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptWithoutSalt|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[write|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.TGTtestIso8859_1]|NEW], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS], mtd=[testIso8859_1|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncoding|EXISTS]} ,  , feasible : true } ],1.0288248262222048

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.0295260966425939

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], src=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], fld=[testData|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DigestUtils]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], fld=[encodeTable|EXISTS]} ,  , feasible : true } ],1.0289380729318955

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[doubleMetaphoneEqualTest|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testFromAsciiCharArray|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ],1.0260535034858063

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[isBase64|EXISTS]} ,  , feasible : true } ],1.0234283379059712

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=RulesApplication]|EXISTS], fld=[found|EXISTS]} ,  , feasible : true } ],1.0234639733745043

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexTest]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[ROUNDS|EXISTS]} ,  , feasible : true } ],1.0233006986561985

[ " RMMO ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ],1.0238435290520214

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], fld=[countdown|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[available|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[PRINTABLE_CHARS|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorString|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], fld=[testData|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], mtd=[testShaUpdateWithString|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ],1.0247496320299385

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ],1.0246959086110563

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.0194657521996295

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], mtd=[testB64from24bit|EXISTS]} ,  , feasible : true } ],1.0276670696147003

[ " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], src=[TypeDeclaration [name=LanguageGuessingTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=URLCodecTest]|EXISTS], mtd=[constructString|EXISTS]} ,  , feasible : true } ],1.0257741633576902

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32Test]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[SPACE|EXISTS]} ,  , feasible : true } ],1.0214061384991622

[ " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], mtd=[getRuleType|EXISTS]} ,  , feasible : true } ],1.0228338465246432

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[join|EXISTS]} ,  , feasible : true } ],1.0244175746754525

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], fld=[EOF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS], mtd=[testUnixCryptNullData|EXISTS]} ,  , feasible : true } ],1.0239984901868548

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], mtd=[isConcat|EXISTS]} ,  , feasible : true } ],1.024247132001547

[ " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[chunkSeparatorLength|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], src=[TypeDeclaration [name=Base32TestData]|EXISTS], fld=[LAST_READ_KEY|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[PREFIX|EXISTS]} ,  , feasible : true } ],1.024834764768097

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Crypt]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[STRING_FIXTURE|EXISTS]} ,  , feasible : true } ],1.0247693814748573

[ " MF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=DecoderExceptionTest]|EXISTS], mtd=[testConstructor0|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], fld=[DIGITS_LOWER|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodecTest]|EXISTS], src=[TypeDeclaration [name=Caverphone]|EXISTS], fld=[encoder|EXISTS]} ,  , feasible : true } ],1.0259529466128823

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[doubleMetaphoneEqualTest|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[decodeHex|EXISTS]} ,  , feasible : true } ],1.0254504294282312

[ " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=Utils]|EXISTS], mtd=[digit16|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testBase64EmptyInputStream|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=Lang]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.0260536884933333

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha2CryptRounds|EXISTS]} ,  , feasible : true } ],1.0253732571490581

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], mtd=[testBase64OutputStreamByChunk|EXISTS]} ,  , feasible : true } ],1.0249071977860416

[ " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DecoderExceptionTest]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[lContext|EXISTS]} ,  , feasible : true } ],1.025389902825153

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DigestUtils]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], fld=[BITS_PER_ENCODED_BYTE|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[getEncoding|EXISTS]} ,  , feasible : true } ],1.0254623100089468

[ " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[length|EXISTS]} ,  , feasible : true } ],1.0260136249889011

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptWithoutSalt|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ],1.0262253731090838

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ],1.0262253731090838

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.023373318159809

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Lang]|EXISTS], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[newIllegalStateException|EXISTS]} ,  , feasible : true } ],1.0227778424516751

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Encoder]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ],1.022771430635494

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ],1.0233650632930975

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], fld=[PRIMARY_INDEX|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], mtd=[testInvalidLangIllegalStateException|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], fld=[LOOP|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testMd5CryptBytes|EXISTS]} ,  , feasible : true } ],1.0230109751353937

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Sha2Crypt]|EXISTS], src=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], fld=[LOOP|EXISTS]} ,  , feasible : true } ],1.02260939280039

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[length|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ],1.022742418802396

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=Nysiis]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], fld=[SPACE|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_1|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toByteArray|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTstreamToBytes]|NEW], src=[TypeDeclaration [name=Base32TestData]|EXISTS], mtd=[streamToBytes|EXISTS]} ,  , feasible : true } ],1.022833087282185

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.0227051076394669

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], mtd=[testInvalidLanguageIllegalArgumentException|EXISTS]} ,  , feasible : true } ],1.0260172159299503

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ],1.0219557417046534

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], src=[TypeDeclaration [name=LanguageGuessingTest]|EXISTS], mtd=[testLanguageGuessing|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_1|EXISTS]} ,  , feasible : true } ],1.021923512070324

[ " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UtilsTest]|EXISTS], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testStringToByteVariations|EXISTS]} ,  , feasible : true } ],1.0235033894804648

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ],1.0236425707407144

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeWithInvalidObject|EXISTS]} ,  , feasible : true } ],1.0267285495446028

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ],1.026075170703238

[ " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[getPhoneme|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[FIXTURE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualExtended3|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesIso8859_1|EXISTS]} ,  , feasible : true } ],1.026592896993431

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_0|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], fld=[testData|EXISTS]} ,  , feasible : true } ],1.0258057073904028

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncodings|EXISTS]} ,  , feasible : true } ],1.026121826778565

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[isArrayByteBase64|EXISTS]} ,  , feasible : true } ],1.026086889052932

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[doubleMetaphoneEqualTest|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeWithInvalidObject|EXISTS]} ,  , feasible : true } ],1.024245609575465

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], src=[TypeDeclaration [name=RPattern]|EXISTS], mtd=[isMatch|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[DEFAULT_BUFFER_RESIZE_FACTOR|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=LanguageGuessingTest]|EXISTS], fld=[lang|EXISTS]} ,  , feasible : true } ],1.0236330373471734

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ],1.0218820636235317

[ " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[dEncrypt|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[LANGUAGES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Languages]|EXISTS], mtd=[getInstance|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], mtd=[testDoubleMetaphoneAlternate|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=Nysiis]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], fld=[SPACE|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ],1.0228053857037047

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testLocaleIndependence|EXISTS]} ,  , feasible : true } ],1.026747344221824

[ " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptWithoutSalt|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeWithInvalidObject|EXISTS]} ,  , feasible : true } ],1.0281985524215012

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[encodeQuotedPrintable|EXISTS]} ,  , feasible : true } ],1.0297551651597838

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DigestUtils]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ],1.0307452961173724

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], fld=[CHUNK_SEPARATOR|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryEncoderAbstractTest]|EXISTS], mtd=[makeEncoder|EXISTS]} ,  , feasible : true } ],1.0283420954466074

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ],1.025985975503486

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[encodeText|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhonemeList]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[MSG|EXISTS]} ,  , feasible : true } ],1.0264045216626352

[ " MM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[decodeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[lineLength|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ],1.0247788489564513

[ " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RulesApplication]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testGetBytesUncheckedBadName|EXISTS]} ,  , feasible : true } ],1.025851504728384

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[lineLength|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[write|EXISTS]} ,  , feasible : true } ],1.023550690411208

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], mtd=[testSpeedCheck2|EXISTS]} ,  , feasible : true } ],1.0206551779708055

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS, TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ],1.0203438876444144

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ],1.0242313064146464

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Base32Test]|EXISTS], mtd=[testBase32Samples|EXISTS]} ,  , feasible : true } ],1.0244689914928455

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=NysiisTest]|EXISTS], fld=[fullNysiis|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base32]|EXISTS], fld=[ENCODE_TABLE|EXISTS]} ,  , feasible : true } ],1.0193098181351756

[ " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ],1.0196725884318971

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=EncoderException]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ],1.0214560892316231

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ],1.0227541129072615

[ " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Crypt]|EXISTS], src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[phonemeText|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=RPattern]|EXISTS], mtd=[isMatch|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], fld=[engine|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], mtd=[getNameType|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.022296093811907

[ " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], fld=[DEFAULT_CHARSET_NAME|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32Test]|EXISTS], fld=[BASE32_TEST_CASES_CHUNKED|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32Test]|EXISTS], mtd=[testBase32Chunked|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=DecoderExceptionTest]|EXISTS], fld=[MSG|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[test|EXISTS]} ,  , feasible : true } ],1.0196795109179166

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=Context]|EXISTS], fld=[ibitWorkArea|EXISTS]} ,  , feasible : true } ],1.0191200824085094

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0206757781630038

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[doubleMetaphoneEqualTest|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharsetName|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[SPACE|EXISTS]} ,  , feasible : true } ],1.019785338726524

[ " RID ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhonemeList]|EXISTS], src=[TypeDeclaration [name=NysiisTest]|EXISTS], fld=[fullNysiis|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ],1.0203384341928097

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ],1.0205997197001908

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=HexTest]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], mtd=[testCodec98NPE|EXISTS]} ,  , feasible : true } ],1.019107198509636

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ],1.018031691847925

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=EncoderException]|EXISTS], fld=[serialVersionUID|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=RulesApplication]|EXISTS], mtd=[invoke|EXISTS]} ,  , feasible : true } ],1.0172286253066356

[ " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptWithoutSalt|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ],1.0178988849049266

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[decodeQuotedPrintable|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[ANY|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Languages]|EXISTS], mtd=[getLanguages|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ],1.0180716072748361

[ " EM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTcacheSubSequence]|NEW], src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ],1.0192925794960939

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], src=[TypeDeclaration [name=URLCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ],1.0191034386315436

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ],1.0199559601086352

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], src=[TypeDeclaration [name=Charsets]|EXISTS], fld=[UTF_16|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[MSG|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=PhonemeList]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ],1.0196097940706024

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=Base64TestData]|EXISTS], mtd=[randomData|EXISTS]} ,  , feasible : true } ],1.01942189316491

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Charsets]|EXISTS], mtd=[toCharset|EXISTS]} ,  , feasible : true } ],1.0191143003761371

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[encodeText|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[decodeTable|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=LanguageSet]|EXISTS], mtd=[from|EXISTS]} ,  , feasible : true } ],1.0189444894611295

[ " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=RulesApplication]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], fld=[ENCODED_B64|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testSkipPastEnd|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[COMPARATOR|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QCodecTest]|EXISTS], fld=[SWISS_GERMAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QCodecTest]|EXISTS], mtd=[testLetUsMakeCloverHappy|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.TGTtestEncodeNull]|NEW], src=[TypeDeclaration [name=BinaryEncoderAbstractTest]|EXISTS], mtd=[testEncodeNull|EXISTS]} ,  , feasible : true } ],1.0178366902144582

[ " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], mtd=[testSha512CryptExplicitCall|EXISTS]} ,  , feasible : true } ],1.0173733907269362

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptBytes|EXISTS]} ,  , feasible : true } ],1.0216546788879164

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RefinedSoundex]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[getAlternate|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], src=[TypeDeclaration [name=CharEncoding]|EXISTS], fld=[UTF_16|EXISTS]} ,  , feasible : true } ],1.0183240888897656

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS], mtd=[testWriteOutOfBounds|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ],1.0183982190644785

[ " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[PREFIX|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.ColognePhonetic.TGTaddLeft]|NEW], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[addLeft|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[markSupported|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.0184988423048114

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ],1.018235969041488

[ " RID ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.BaseNCodec.TGTtoString]|NEW], src=[TypeDeclaration [name=Context]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=PhonemeList]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Lang]|EXISTS], src=[TypeDeclaration [name=Base64TestData]|EXISTS], fld=[CODEC_98_NPE_DECODED|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[encodeTable|EXISTS]} ,  , feasible : true } ],1.0206391448229173

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " RID ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=Base32TestData]|EXISTS], fld=[LAST_READ_KEY|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=EncoderException]|EXISTS], src=[TypeDeclaration [name=CharsetsTest]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Rule]|EXISTS], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1LongSalt|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.TGTmakeEncoder]|NEW], src=[TypeDeclaration [name=BinaryEncoderAbstractTest]|EXISTS], mtd=[makeEncoder|EXISTS]} ,  , feasible : true } ],1.0200664387544658

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0221668914830184

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptWithoutSalt|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeWithInvalidObject|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[isWhiteSpace|EXISTS]} ,  , feasible : true } ],1.02491087394597

[ " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[doubleMetaphoneEqualTest|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=Lang]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.0257693949965125

[ " MM ":{ {tgt=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], src=[TypeDeclaration [name=RPattern]|EXISTS], mtd=[isMatch|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LangRule]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], fld=[maxLength|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RefinedSoundex]|EXISTS], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], fld=[SZ|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[preprocess|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0263139348082992

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=UtilsTest]|EXISTS], mtd=[testConstructor|EXISTS]} ,  , feasible : true } ],1.0244271802727112

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS], fld=[VOWELS|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Crypt]|EXISTS], src=[TypeDeclaration [name=BaseNCodecTest]|EXISTS], mtd=[testIsInAlphabetByteArrayBoolean|EXISTS]} ,  , feasible : true } ],1.0236397933322525

[ " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=LanguageSet]|EXISTS], mtd=[from|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], mtd=[describeTo|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ],1.022684908330165

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[encodedBlockSize|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[getMappingCode|EXISTS]} ,  , feasible : true } ],1.0229387368455651

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS], fld=[B64T|EXISTS]} ,  , feasible : true } ],1.0223766193015014

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], fld=[countdown|EXISTS]} ,  , feasible : true } ],1.0204700085295915

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], fld=[ROUNDS_PREFIX|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[PREFIX|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Charsets]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testDecodeInvalid|EXISTS]} ,  , feasible : true } ],1.0203041894087332

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ],1.0235649051725568

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodec]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[SWISS_GERMAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ],1.0237306980042555

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], fld=[testData|EXISTS]} ,  , feasible : true } ],1.0231685469462142

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncodings|EXISTS]} ,  , feasible : true } ],1.0248782953833786

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ],1.0244917251344163

[ " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCryptTest]|EXISTS], mtd=[testUnixCryptWithEmptySalt|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=NysiisTest]|EXISTS], mtd=[testDropBy|EXISTS]} ,  , feasible : true } ],1.0247713730991714

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=Utils]|EXISTS], mtd=[digit16|EXISTS]} ,  , feasible : true } ],1.0257054033594442

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedCommonCodeAT11111111|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], fld=[WWW_FORM_URL|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64]|EXISTS], fld=[decodeSize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64Chunked|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0236895246278024

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[BITS_PER_ENCODED_BYTE|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[markSupported|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[DEFAULT_BUFFER_RESIZE_FACTOR|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=ResourceConstants]|EXISTS], fld=[CMT|EXISTS]} ,  , feasible : true } ],1.0226943163273026

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[BLANK|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ],1.0192358115951976

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ],1.020689366378443

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], fld=[STANDARD_ENCODE_TABLE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=MetaphoneTest]|EXISTS], mtd=[testIsMetaphoneEqualGary|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[SWISS_GERMAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testInvalidEncoding|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0193091646241814

[ " RID ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS], fld=[VOWELS|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=CryptTest]|EXISTS], mtd=[testCrypt|EXISTS]} ,  , feasible : true } ],1.0180352928161267

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ],1.017665172453398

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ],1.0182059031805681

[ " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguages]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[SEP|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleT|EXISTS]} ,  , feasible : true } ],1.0166321214471798

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.016002405970822

[ " PDF ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[isBase64|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Caverphone]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[test|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS], fld=[VARSON|EXISTS]} ,  , feasible : true } ],1.019265929229816

[ " RMMO ":{ {tgt=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], src=[TypeDeclaration [name=RPattern]|EXISTS], mtd=[isMatch|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.TgtClassEC]|NEW], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.TgtClassEC]|NEW], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncoding|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[available|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodecTest]|EXISTS], src=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], fld=[LOOP|EXISTS]} ,  , feasible : true } ],1.019664562588331

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncoding|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=Metaphone]|EXISTS], fld=[maxCodeLen|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[metaphone|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BCodecTest]|EXISTS], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptWithInvalidSalt|EXISTS]} ,  , feasible : true } ],1.0224991127798462

[ " MM ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=MetaphoneTest]|EXISTS], mtd=[testIsMetaphoneEqualAero|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTtestIsDoubleMetaphoneEqualBasic]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualBasic|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS], src=[TypeDeclaration [name=PhonemeList]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[fromAscii|EXISTS]} ,  , feasible : true } ],1.0246359077858216

[ " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=EncoderException]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[encodeHexString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncodingVariations|EXISTS]} ,  , feasible : true } ],1.0255879197834619

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=BinaryEncoderAbstractTest]|EXISTS], mtd=[makeEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=RefinedSoundexTest]|EXISTS], mtd=[testNewInstance3|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[length|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ],1.0235536487596693

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], src=[TypeDeclaration [name=Base32TestData]|EXISTS], fld=[SIZE_KEY|EXISTS]} ,  , feasible : true } ],1.0234234214695108

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ],1.0221841395129605

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ],1.0215586258260467

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ],1.0214705103306028

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[length|EXISTS]} ,  , feasible : true } ],1.0211152621945203

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ],1.017372547410896

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS, TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[VOWELS|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ],1.0170331423630856

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[setEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testToAsciiChars|EXISTS]} ,  , feasible : true } ],1.019545060923069

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=BCodec]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ],1.0249210935407767

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[available|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringBadEnc|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ],1.0225656264475647

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeList]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[setMaxCodeLen|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ],1.021981334115943

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], src=[TypeDeclaration [name=RPattern]|EXISTS], mtd=[isMatch|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=Context]|EXISTS], fld=[pos|EXISTS]} ,  , feasible : true } ],1.0210413750993446

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.020169836573222

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[write|EXISTS]} ,  , feasible : true } ],1.0210063631116653

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0212833281250508

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ],1.019317564793924

[ " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=QCodecTest]|EXISTS], mtd=[testDecodeObjects|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=NysiisTest]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS], mtd=[testSolrGENERIC|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testCodec130|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.TGTtestUtf16]|NEW], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS], mtd=[testUtf16|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD_DEFAULT|EXISTS]} ,  , feasible : true } ],1.0194413811103853

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[write|EXISTS]} ,  , feasible : true } ],1.0191341289048985

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ],1.018599259566068

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ],1.018599259566068

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0186274706928606

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[encodeUrl|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], src=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecTest]|EXISTS], fld=[codec|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecTest]|EXISTS], mtd=[testIsWhiteSpace|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.019822192863394

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testCodeInteger1|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=Base64TestData]|EXISTS], fld=[SIZE_KEY|EXISTS]} ,  , feasible : true } ],1.020952870785374

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ],1.0203716617135339

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], fld=[BYTES_PER_UNENCODED_BLOCK|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32Test]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], mtd=[testSha512CryptNullData|EXISTS]} ,  , feasible : true } ],1.0180980188116868

[ " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS, TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS], mtd=[testConstructor|EXISTS]} ,  , feasible : true } ],1.0169844827425536

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ],1.0180011439879473

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[DEFAULT_BUFFER_SIZE|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DecoderExceptionTest]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[ruleType|EXISTS]} ,  , feasible : true } ],1.017577815522918

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], src=[TypeDeclaration [name=DecoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ],1.018285955727142

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DecoderExceptionTest]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS], fld=[CHARS_SSS|EXISTS]} ,  , feasible : true } ],1.0187363149469255

[ " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ],1.0180029399892467

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[decodeText|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], fld=[testData|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testEncodeZeroes|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Utils]|EXISTS], mtd=[digit16|EXISTS]} ,  , feasible : true } ],1.018421316417667

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS], src=[TypeDeclaration [name=DigestUtilsTest]|EXISTS]} ,  , feasible : true } ],1.0193585585610032

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[decodeSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ],1.0180432035052

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.0169558454864533

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64Chunked|EXISTS]} ,  , feasible : true } ],1.0177235729714678

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Base32Test]|EXISTS], mtd=[testBase32Samples|EXISTS]} ,  , feasible : true } ],1.0217167173215407

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone2Test]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], fld=[EOF|EXISTS]} ,  , feasible : true } ],1.0173495914024646

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ],1.0180124161259172

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[resizeBuffer|EXISTS]} ,  , feasible : true } ],1.016967790378195

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[markSupported|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ],1.0167536072970906

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ],1.0174455928154396

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_1|EXISTS]} ,  , feasible : true } ],1.0185692226190752

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ],1.0179887205809368

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], fld=[ENCODED_B64|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testHyphen|EXISTS]} ,  , feasible : true } ],1.0180293500463404

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Encoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[encodeBlanks|EXISTS]} ,  , feasible : true } ],1.0187807582474135

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0184373492859249

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[decodeBase64|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ],1.018325142352023

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[doubleMetaphoneEqualTest|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_2|EXISTS]} ,  , feasible : true } ],1.0182309828351905

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0192981166805544

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=LangRule]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ],1.0188739733253553

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[available|EXISTS]} ,  , feasible : true } ],1.0181955538154743

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ],1.0187903318417895

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[SEP|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithDoubleMetaphone|EXISTS]} ,  , feasible : true } ],1.017360691723456

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTinstance]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[instance|EXISTS]} ,  , feasible : true } ],1.0156513985932754

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ],1.0175048197012841

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ],1.0183807919542491

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=Context]|EXISTS], fld=[eof|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ],1.0186666137411362

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testUTF8RoundTrip|EXISTS]} ,  , feasible : true } ],1.0190869788310941

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ],1.0195107453373713

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS], fld=[PAT_KN|EXISTS]} ,  , feasible : true } ],1.0202770045380731

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[hasData|EXISTS]} ,  , feasible : true } ],1.0181867800563378

[ " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=BCodecTest]|EXISTS], fld=[SWISS_GERMAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=LanguageGuessingTest]|EXISTS], fld=[language|EXISTS]} ,  , feasible : true } ],1.0191592694188112

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=LangRule]|EXISTS], src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[constructString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testCustomCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.018495530845457

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[encodeUrl|EXISTS]} ,  , feasible : true } ],1.022323428347247

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncoding]|EXISTS], fld=[UTF_8|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CharEncodingTest]|EXISTS], mtd=[testUtf16Le|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Caverphone2Test]|EXISTS], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32InputStreamByChunk|EXISTS]} ,  , feasible : true } ],1.0222442885991678

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[EOF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ],1.0213960241838127

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testLocaleIndependence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=CharEncoding]|EXISTS], fld=[UTF_16|EXISTS]} ,  , feasible : true } ],1.0256736859140638

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Crypt]|EXISTS], src=[TypeDeclaration [name=BinaryEncoderAbstractTest]|EXISTS], mtd=[testEncodeNull|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ],1.0229686805996487

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[encodeText|EXISTS]} ,  , feasible : true } ],1.0221356724339272

[ " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[phonemeText|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTtestDad]|NEW], src=[TypeDeclaration [name=NysiisTest]|EXISTS], mtd=[testDad|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=CharsetsTest]|EXISTS], mtd=[testUtf8|EXISTS]} ,  , feasible : true } ],1.0211341377292587

[ " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], fld=[UNICODE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[getFirst3Last3|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ],1.02048574963586

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf16Le|EXISTS]} ,  , feasible : true } ],1.0221235282324412

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.018256001615037

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[doubleMetaphoneEqualTest|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testByChunk|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], fld=[LOOP|EXISTS]} ,  , feasible : true } ],1.018666777327125

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ],1.0185948212548641

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[unencodedBlockSize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Md5CryptTest]|EXISTS], src=[TypeDeclaration [name=Base32TestData]|EXISTS], mtd=[fill|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.018811653156177

[ " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=RFC1522TestCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestSha256LargetThanBlocksize]|NEW], src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ],1.0172414517598583

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTencodeAsString]|NEW], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeAsString|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.ColognePhonetic.TgtClassEC]|NEW], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.ColognePhonetic.TgtClassEC]|NEW], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=LanguageSet]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[getNextChar|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTtestNewInstance]|NEW], src=[TypeDeclaration [name=RefinedSoundexTest]|EXISTS], mtd=[testNewInstance|EXISTS]} ,  , feasible : true } ],1.0186059326172228

[ " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[markSupported|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], fld=[engine|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], src=[TypeDeclaration [name=Base32Test]|EXISTS]} ,  , feasible : true } ],1.0224920904383423

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.021708654433459

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Base64TestData]|EXISTS], fld=[SIZE_KEY|EXISTS]} ,  , feasible : true } ],1.021212417336689

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[BLANK|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[markSupported|EXISTS]} ,  , feasible : true } ],1.0201390211492203

[ " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testCompare_STEPHEN_STEVEN_SuccessfullyMatched|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringUtils]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[ANY_LANGUAGE|EXISTS]} ,  , feasible : true } ],1.0205509909110084

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Languages]|EXISTS], mtd=[getLanguages|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[encodeQuotedPrintable|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=Metaphone]|EXISTS], fld=[maxCodeLen|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[getMaxCodeLen|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_0|EXISTS]} ,  , feasible : true } ],1.019521094395765

[ " IM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeNull|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[lineLength|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], fld=[DECODE_TABLE|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64Test]|EXISTS], mtd=[testB64from24bit|EXISTS]} ,  , feasible : true } ],1.017828760469506

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testLocaleIndependence|EXISTS]} ,  , feasible : true } ],1.019702235193555

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=Caverphone]|EXISTS], mtd=[isCaverphoneEqual|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS], fld=[CHARS_A|EXISTS]} ,  , feasible : true } ],1.0206862751148262

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.0203898326708134

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ],1.0238477446065062

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ],1.0187019885746933

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[doubleMetaphoneNotEqualTest|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[unencodedBlockSize|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[chunkSeparatorLength|EXISTS]} ,  , feasible : true } ],1.0182672463637275

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testCustomCharsetToString|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[SEP|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTtestCaverphoneRevisitedCommonCodeAT1111]|NEW], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testCaverphoneRevisitedCommonCodeAT1111|EXISTS]} ,  , feasible : true } ],1.0178412751448456

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[doubleMetaphoneEqualTest|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[phonemeText|EXISTS]} ,  , feasible : true } ],1.0157557991990356

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ],1.0153466168370953

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], mtd=[testSetRuleTypeExact|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], src=[TypeDeclaration [name=BCodecTest]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=ResourceConstants]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], mtd=[testStaticEncodeChunked|EXISTS]} ,  , feasible : true } ],1.016320299003562

[ " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], fld=[engine|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[COMPARATOR|EXISTS]} ,  , feasible : true } ],1.0159734677847323

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ],1.016766182240984

[ " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testCompare_BRIAN_BRYAN_SuccessfullyMatched|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS], src=[TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0174965701785572

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], src=[TypeDeclaration [name=Lang]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], fld=[alternate|EXISTS]} ,  , feasible : true } ],1.0176649131837834

[ " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ],1.0180951268003247

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[doubleMetaphoneEqualTest|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], mtd=[testDoubleMetaphoneAlternate|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[lContext|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ],1.019029228055975

[ " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], src=[TypeDeclaration [name=DigestUtils]|EXISTS], mtd=[sha512|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[SEP|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=LangRule]|EXISTS], src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithDoubleMetaphoneAndInvalidInput|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[SPACE|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=NysiisTest]|EXISTS], fld=[fullNysiis|EXISTS]} ,  , feasible : true } ],1.0197217666969935

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0189267106163018

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ],1.0199330687780293

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Rule]|EXISTS], src=[TypeDeclaration [name=NysiisTest]|EXISTS], fld=[fullNysiis|EXISTS]} ,  , feasible : true } ],1.0194285554311604

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryCodec]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.0164487448393695

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTinstance]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[instance|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Hex]|EXISTS], fld=[DIGITS_UPPER|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharsetName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0179793551381093

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=QCodecTest]|EXISTS], src=[TypeDeclaration [name=Base64TestData]|EXISTS], mtd=[bytesContain|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ],1.0180638474230645

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.0181009884116945

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTpreprocess]|NEW], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[preprocess|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], fld=[SPTRANS.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[desSetKey|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0190094497228475

[ " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[decodeHex|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=DecoderExceptionTest]|EXISTS], fld=[MSG|EXISTS]} ,  , feasible : true } ],1.0198868022870127

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ],1.0174747588927509

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ],1.0168699938923356

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[resizeBuffer|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ],1.0195822104077856

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[rContext|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncodingVariations|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ],1.0200575502668061

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ],1.019591641345116

[ " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RefinedSoundex]|EXISTS], src=[TypeDeclaration [name=Base32Test]|EXISTS], fld=[BASE32_TEST_CASES_CHUNKED|EXISTS]} ,  , feasible : true } ],1.0192553237200201

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=LanguageSet]|EXISTS], mtd=[from|EXISTS]} ,  , feasible : true } ],1.0243290512118515

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=Context]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ],1.0234495258790395

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhonemeList]|EXISTS], src=[TypeDeclaration [name=RulesApplication]|EXISTS], fld=[found|EXISTS]} ,  , feasible : true } ],1.019342312440634

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryCodec]|EXISTS], src=[TypeDeclaration [name=Crypt]|EXISTS], mtd=[crypt|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS], src=[TypeDeclaration [name=Base32Test]|EXISTS], fld=[BASE32_TEST_CASES|EXISTS]} ,  , feasible : true } ],1.0180522169388333

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.018702631664353

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ],1.0173078469863872

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[encodeBlanks|EXISTS]} ,  , feasible : true } ],1.0186366748903852

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=DecoderExceptionTest]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], fld=[SALT_PATTERN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], mtd=[sha512Crypt|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[nameType|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTlangResourceName]|NEW], src=[TypeDeclaration [name=Languages]|EXISTS], mtd=[langResourceName|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=PhoneticEngine]|EXISTS], mtd=[getMaxPhonemes|EXISTS]} ,  , feasible : true } ],1.0188137377356667

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], fld=[ROUNDS_PREFIX|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], fld=[STRING_FIXTURE|EXISTS]} ,  , feasible : true } ],1.0177780593916947

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=Caverphone]|EXISTS], fld=[encoder|EXISTS]} ,  , feasible : true } ],1.0169667405944434

[ " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=CryptTest]|EXISTS], mtd=[testCryptWithEmptySalt|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], src=[TypeDeclaration [name=Base32TestData]|EXISTS], fld=[SIZE_KEY|EXISTS]} ,  , feasible : true } ],1.0180779696263418

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorString|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[FIXTURE|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Utils]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS]} ,  , feasible : true } ],1.0196115667868684

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Sha2Crypt]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ],1.0200815919539585

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[doubleMetaphoneEqualTest|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64Chunked|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], src=[TypeDeclaration [name=LanguageGuessingTest]|EXISTS], fld=[exactness|EXISTS]} ,  , feasible : true } ],1.019070540713221

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Rule]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testEncodeIgnoreApostrophes|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RulesApplication]|EXISTS], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], mtd=[testSha2CryptWrongSalt|EXISTS]} ,  , feasible : true } ],1.0184908235443875

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testLocaleIndependence|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[join|EXISTS]} ,  , feasible : true } ],1.021534017428144

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ],1.0210389747154558

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryCodec]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], src=[TypeDeclaration [name=LangRule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ],1.0188924583892616

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTinstance]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[instance|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=URLCodecTest]|EXISTS], fld=[SWISS_GERMAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=URLCodecTest]|EXISTS], mtd=[testEncodeObjects|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ],1.0183883553923838

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.018888478828848

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[doubleMetaphoneEqualTest|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MIME_CHUNK_SIZE|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Sha2Crypt]|EXISTS], src=[TypeDeclaration [name=Base32]|EXISTS], fld=[DECODE_TABLE|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhonemeList]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ],1.0202116659906375

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testisEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse|EXISTS]} ,  , feasible : true } ],1.0217591784908668

[ " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DigestUtils]|EXISTS], src=[TypeDeclaration [name=Base32TestData]|EXISTS], mtd=[fill|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UtilsTest]|EXISTS], mtd=[testConstructor|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecTest]|EXISTS], fld=[codec|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecTest]|EXISTS], mtd=[testIsInAlphabetByteArrayBoolean|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CryptTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], fld=[maxLength|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[getNextChar|EXISTS]} ,  , feasible : true } ],1.02239024665433

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], fld=[FOUR|EXISTS]} ,  , feasible : true } ],1.0224096862946224

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[available|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], mtd=[testB64from24bit|EXISTS]} ,  , feasible : true } ],1.0190366506585269

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], mtd=[getLanguages|EXISTS]} ,  , feasible : true } ],1.023869242348464

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[phonemeText|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ],1.022931231551198

[ " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], mtd=[testMd5HexLength|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ],1.0228394751214136

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.0228394751214136

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.0228394751214136

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=RefinedSoundexTest]|EXISTS], mtd=[testDifference|EXISTS]} ,  , feasible : true } ],1.025424176545742

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32TestData]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualExtended2|EXISTS]} ,  , feasible : true } ],1.0208641138255123

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=EncoderException]|EXISTS], fld=[serialVersionUID|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], src=[TypeDeclaration [name=PhonemeList]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ],1.0205815060904986

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryCodec]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], mtd=[testMd2Hex|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[PREFIX|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.020939808023502

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ],1.017228798655874

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ],1.0200927424537627

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TGTtestDecodeStringWithNull]|NEW], src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testDecodeStringWithNull|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], fld=[RADIX|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=LanguageSet]|EXISTS], mtd=[from|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], mtd=[assertExpectedDecoderException|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_3|EXISTS]} ,  , feasible : true } ],1.0195693240185513

[ " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTtestAaclan]|NEW], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testAaclan|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeHexOddCharacters3|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CharEncoding]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ],1.0233644059631835

[ " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryCodec]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[differenceEncoded|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS], fld=[PAT_PH_PF|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Encoder]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ],1.023646233336072

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ],1.0248315811794568

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0237294729074522

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getLanguages|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Phoneme]|EXISTS], src=[TypeDeclaration [name=NysiisTest]|EXISTS], fld=[fullNysiis|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=NysiisTest]|EXISTS], mtd=[testSnad|EXISTS]} ,  , feasible : true } ],1.0212769392117147

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[SEP|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256CryptExplicitCall|EXISTS]} ,  , feasible : true } ],1.0223927978072396

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=HexTest]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], fld=[EOF|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ],1.0224747883209226

[ " RID ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testNTilde|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTencodeHex]|NEW], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[encodeHex|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ],1.0231380305716542

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ],1.020066591802832

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryCodec]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], fld=[MD5|EXISTS]} ,  , feasible : true } ],1.0179955018215723

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[length|EXISTS]} ,  , feasible : true } ],1.0196019050744005

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTinstance]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[instance|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[PREFIX|EXISTS]} ,  , feasible : true } ],1.0226956112711856

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS], mtd=[testEncodeDecodeNull|EXISTS]} ,  , feasible : true } ],1.0234487780635126

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.0232535650175922

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[mark|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Lang]|EXISTS], fld=[LANGUAGE_RULES_RN|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ],1.0238877496552334

[ " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=RulesApplication]|EXISTS], mtd=[getPhonemeBuilder|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=Context]|EXISTS], fld=[modulus|EXISTS]} ,  , feasible : true } ],1.023118258386647

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ],1.0204248033498788

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Crypt]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0188773118901324

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ],1.0212642869436064

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[decodeText|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], mtd=[testDoubleMetaphoneAlternate|EXISTS]} ,  , feasible : true } ],1.0229895670190412

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=RefinedSoundexTest]|EXISTS], mtd=[testNewInstance3|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=LanguageSet]|EXISTS], mtd=[from|EXISTS]} ,  , feasible : true } ],1.0207526012931503

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.020011724212051

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=EncoderException]|EXISTS], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptNullData|EXISTS]} ,  , feasible : true } ],1.0261695824110333

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " RID ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], fld=[testData|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], mtd=[testShaUpdateWithString|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=NysiisTest]|EXISTS], fld=[fullNysiis|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base64Test]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testMsSqlServer3|EXISTS]} ,  , feasible : true } ],1.0202470913072776

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[readResults|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ],1.0202029891940148

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], mtd=[testSpeedCheck|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=URLCodecTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[SWISS_GERMAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ],1.0199411187823957

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ],1.021237586696014

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[write|EXISTS]} ,  , feasible : true } ],1.0229723799804145

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PEM_CHUNK_SIZE|EXISTS]} ,  , feasible : true } ],1.0215980712217894

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], src=[TypeDeclaration [name=BaseNCodecTest]|EXISTS], fld=[codec|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ],1.0223988819691225

[ " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorStringThrowable|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Utils]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ],1.0223588261757321

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.0230025066073616

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[encodeUrl|EXISTS]} ,  , feasible : true } ],1.0233785457270645

[ " RID ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=StringDecoder]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTgetMd5Digest]|NEW], src=[TypeDeclaration [name=DigestUtils]|EXISTS], mtd=[getMd5Digest|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BaseNCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[phonemeText|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[write|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=RuleTest]|EXISTS], mtd=[makePhonemes|EXISTS]} ,  , feasible : true } ],1.0238324683182216

[ " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MIME_CHUNK_SIZE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], mtd=[setMaxPhonemes|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ],1.023012897943953

[ " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodecTest]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiBytes|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0236316315570102

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LangRule]|EXISTS], src=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], fld=[SHA_1|EXISTS]} ,  , feasible : true } ],1.0246308906867942

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryCodec]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[decodeUrl|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RulesApplication]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=Charsets]|EXISTS], fld=[UTF_16BE|EXISTS]} ,  , feasible : true } ],1.0226911303012653

[ " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTinstance]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[instance|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeWithInvalidObject|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0240315299794007

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.0263486780754218

[ " MF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], fld=[EOF|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS], mtd=[encode|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=BinaryEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ],1.0271883715413115

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS], mtd=[testUTF8RoundTrip|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=URLCodecTest]|EXISTS], fld=[SWISS_GERMAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ],1.0252754517180456

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[PREFIX|EXISTS]} ,  , feasible : true } ],1.0263611786340616

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ],1.0262704371327436

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Utils]|EXISTS], mtd=[digit16|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhonemeList]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_4|EXISTS]} ,  , feasible : true } ],1.0257248800587029

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTN11111111|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.0235735984595025

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[mark|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testEndMb|EXISTS]} ,  , feasible : true } ],1.0219110742294357

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ],1.022781651407157

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.0222523767511236

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.0222523767511236

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTinstance]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[instance|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ],1.0232710270615974

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS], src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testMd5CryptNullData|EXISTS]} ,  , feasible : true } ],1.0258965594287097

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[BLANK|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[setEncodeBlanks|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], mtd=[compare|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testEncodeDecodeRandom|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[difference|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[encodeUrl|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS]} ,  , feasible : true } ],1.028193614118953

[ " RID ":{ {tgt=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], src=[TypeDeclaration [name=URLCodecTest]|EXISTS], mtd=[testConstructorStringThrowable|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD_DEFAULT|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ],1.0282841785499115

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], fld=[STRING_FIXTURE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], src=[TypeDeclaration [name=MetaphoneTest]|EXISTS], mtd=[testTranslateOfSCHAndCH|EXISTS]} ,  , feasible : true } ],1.0262170777468032

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[addLeft|EXISTS]} ,  , feasible : true } ],1.0268056775667416

[ " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CharEncoding]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[decodeUrl|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS], mtd=[getRandomSalt|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[ANY_LANGUAGE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Languages]|EXISTS], mtd=[getLanguages|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0281808803863997

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], fld=[BYTES_PER_UNENCODED_BLOCK|EXISTS]} ,  , feasible : true } ],1.0285821266491224

[ " RDI ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[getPhoneme|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=LanguageSet]|EXISTS], mtd=[from|EXISTS]} ,  , feasible : true } ],1.0282275820918236

[ " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[COMPARATOR|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ],1.029094670602279

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[decodeUrl|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Md5CryptTest]|EXISTS], src=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], fld=[MD2|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone2Test]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS], fld=[B64T|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryCodec]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ],1.0312962096684564

[ " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=NysiisTest]|EXISTS], fld=[fullNysiis|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[getLContext|EXISTS]} ,  , feasible : true } ],1.0311015797184557

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.0305126990576872

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ],1.028690605730497

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryCodec]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=RuleTest]|EXISTS], mtd=[makePhonemes|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[SPACE|EXISTS]} ,  , feasible : true } ],1.0276344217080222

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=DigestUtils]|EXISTS], mtd=[digest|EXISTS]} ,  , feasible : true } ],1.0250517022413128

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTinstance]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[instance|EXISTS]} ,  , feasible : true } ],1.025688525306805

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.0270297105174353

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=HexTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[PRINTABLE_CHARS|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BaseNCodecTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], fld=[TEST_DATA|EXISTS]} ,  , feasible : true } ],1.0266275588042808

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ],1.029260858198589

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[getMappingCode|EXISTS]} ,  , feasible : true } ],1.0287416381332164

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ],1.0294908775971456

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[FIXTURE|EXISTS]} ,  , feasible : true } ],1.026793727541331

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RefinedSoundex]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], fld=[engine|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], mtd=[isConcat|EXISTS]} ,  , feasible : true } ],1.0301564229716118

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[decodeBase64|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_7|EXISTS]} ,  , feasible : true } ],1.0307034578879788

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Base32TestData]|EXISTS], mtd=[randomData|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeDecodeNull|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ],1.0311566953707358

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], src=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], mtd=[assertExpectedDecoderException|EXISTS]} ,  , feasible : true } ],1.030944832234718

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ],1.031537769856972

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=RPattern]|EXISTS], mtd=[isMatch|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CharsetsTest]|EXISTS], mtd=[testToCharset|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.TGTtestEncodeWithInvalidObject]|NEW], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeWithInvalidObject|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ],1.0296728344129618

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryCodec]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64Test]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_7|EXISTS]} ,  , feasible : true } ],1.0232973544282769

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UtilsTest]|EXISTS], src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[PRINTABLE_CHARS|EXISTS]} ,  , feasible : true } ],1.0244919567313806

[ " MM ":{ {tgt=[TypeDeclaration [name=URLCodecTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorStringThrowable|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[unencodedBlockSize|EXISTS]} ,  , feasible : true } ],1.0250115257045347

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ],1.0268387534546364

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MetaphoneTest]|EXISTS], mtd=[testWhy|EXISTS]} ,  , feasible : true } ],1.0276518983808698

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Lang]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], fld=[EOF|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LangRule]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH_MAPPING_STRING|EXISTS]} ,  , feasible : true } ],1.028392795464633

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[difference|EXISTS]} ,  , feasible : true } ],1.028280873809875

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], src=[TypeDeclaration [name=CharEncoding]|EXISTS], fld=[UTF_16|EXISTS]} ,  , feasible : true } ],1.0285172473581818

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0290913577194667

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTcheckDoubleMetaphone]|NEW], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], mtd=[checkDoubleMetaphone|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS], src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256CryptNullData|EXISTS]} ,  , feasible : true } ],1.0297676925808112

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithDoubleMetaphoneAndInvalidInput|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.0285469835557581

[ " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RefinedSoundex]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiBytes|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=EncoderException]|EXISTS], fld=[serialVersionUID|EXISTS]} ,  , feasible : true } ],1.0282328138657553

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ],1.0273434331415754

[ " MF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[PRINTABLE_CHARS|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], mtd=[sha2Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64OutputStream]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Base64TestData]|EXISTS], fld=[CODEC_98_NPE_DECODED|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[available|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[CHUNKED_STRINGS|EXISTS]} ,  , feasible : true } ],1.0234054938915225

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTinstance]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[instance|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ],1.0227374874527868

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " IM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[PREFIX|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Base64TestData]|EXISTS], mtd=[resizeArray|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MetaphoneTest]|EXISTS], mtd=[testIsMetaphoneEqual1|EXISTS]} ,  , feasible : true } ],1.0244089595361814

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[SEP|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=URLCodecTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_3|EXISTS]} ,  , feasible : true } ],1.0228642785238835

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testInputStreamReader|EXISTS]} ,  , feasible : true } ],1.0239978402294572

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[SWISS_GERMAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ],1.021455217899043

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncoding|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Phoneme]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ],1.0214077341147254

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], src=[TypeDeclaration [name=CharsetsTest]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testLocaleIndependence|EXISTS]} ,  , feasible : true } ],1.0232521782595083

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.0237294591546269

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=UtilsTest]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[COMPARATOR|EXISTS]} ,  , feasible : true } ],1.0304625852453775

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[PREFIX|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ],1.0289523758313956

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], mtd=[testBase64EmptyOutputStreamPemChunkSize|EXISTS]} ,  , feasible : true } ],1.0254298285140182

[ " MM ":{ {tgt=[TypeDeclaration [name=URLCodecTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorStringThrowable|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.0253692579146396

[ " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[isArrayByteBase64|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[readResults|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], mtd=[testSpeedCheck2|EXISTS]} ,  , feasible : true } ],1.026585552600996

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[hasData|EXISTS]} ,  , feasible : true } ],1.0265622763994495

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ],1.0265995187628785

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Rule]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32TestData]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], fld=[ALTERNATE_INDEX|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ResourceConstants]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], fld=[URL_SAFE_ENCODE_TABLE|EXISTS]} ,  , feasible : true } ],1.0284423081247296

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.0294383499304849

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithDoubleMetaphoneAndInvalidInput|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LangRule]|EXISTS], src=[TypeDeclaration [name=BCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ],1.0301502953613917

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0303976653973022

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], mtd=[getLanguages|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], fld=[testData|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testBase64InputStreamByteByByte|EXISTS]} ,  , feasible : true } ],1.0280790340897126

[ " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS], src=[TypeDeclaration [name=CharsetsTest]|EXISTS], mtd=[testUsAscii|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone2Test]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[chunkSeparatorLength|EXISTS]} ,  , feasible : true } ],1.0281192460749704

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.026665513938324

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ],1.025569546552265

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ],1.0224888649974948

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryCodec]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Md5Crypt]|EXISTS], src=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], fld=[LOOP|EXISTS]} ,  , feasible : true } ],1.0227030907724832

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ],1.0216735016614782

[ " MM ":{ {tgt=[TypeDeclaration [name=URLCodecTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorStringThrowable|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTinstance]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[instance|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.0206169066421031

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ],1.0239112034463635

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Rule]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ],1.025384420608401

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[SEP|EXISTS]} ,  , feasible : true } ],1.0316478028060652

[ " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=Base32Test]|EXISTS], mtd=[testBase32Samples|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], mtd=[sha512Crypt|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.DoubleMetaphone.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], fld=[alternate|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.DoubleMetaphone.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[isComplete|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0332980470438136

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], fld=[TEST_DATA|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Base64TestData]|EXISTS], mtd=[streamToBytes|EXISTS]} ,  , feasible : true } ],1.033218893477194

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[SEP|EXISTS]} ,  , feasible : true } ],1.0336584548003604

[ " IM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], mtd=[getMaxLength|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ],1.0313955084517574

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[MSG|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.TgtClassEC]|NEW], src=[TypeDeclaration [name=Charsets]|EXISTS], fld=[UTF_16BE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.TgtClassEC]|NEW], src=[TypeDeclaration [name=Charsets]|EXISTS], mtd=[toCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[length|EXISTS]} ,  , feasible : true } ],1.0303465155194247

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], fld=[DIGITS_UPPER|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=Base64TestData]|EXISTS], fld=[CODEC_101_MULTIPLE_OF_3|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Caverphone]|EXISTS], mtd=[isCaverphoneEqual|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestMd5CryptBytes]|NEW], src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testMd5CryptBytes|EXISTS]} ,  , feasible : true } ],1.028442050003142

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ],1.028442050003142

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MIME_CHUNK_SIZE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ],1.0290009258910768

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RuleTest]|EXISTS], mtd=[testPhonemeComparedToLaterIsNegative|EXISTS]} ,  , feasible : true } ],1.0233694112076481

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ],1.0233694112076481

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[decodeUrl|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ],1.0220789154879228

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ],1.0237896872324046

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Rule]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.0217044638988733

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ],1.0210407080737034

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[COMPARATOR|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[PREFIX|EXISTS]} ,  , feasible : true } ],1.022952118795812

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTread]|NEW], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithDoubleMetaphoneAndInvalidInput|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], fld=[MD2|EXISTS]} ,  , feasible : true } ],1.0211509733057598

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiBytes|EXISTS]} ,  , feasible : true } ],1.022815899069122

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0222245544558952

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryCodec]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[decodeUrl|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], fld=[PREPROCESS_MAP|EXISTS]} ,  , feasible : true } ],1.026040900857951

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ResourceConstants]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ],1.0244773232368436

[ " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[encodeUrl|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], fld=[FOUR|EXISTS]} ,  , feasible : true } ],1.0241024072656681

[ " IM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[test|EXISTS]} ,  , feasible : true } ],1.0233848333400997

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryCodec]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=Context]|EXISTS], fld=[ibitWorkArea|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=EncoderException]|EXISTS], fld=[serialVersionUID|EXISTS]} ,  , feasible : true } ],1.0223478987912111

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTinstance]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[instance|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTencodeHex]|NEW], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[encodeHex|EXISTS]} ,  , feasible : true } ],1.0217900539138816

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ],1.0214445203961002

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[UNDERSCORE|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=PhonemeList]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=URLCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ],1.0222049046996458

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ],1.0192430538149366

[ " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=LanguageGuessingTest]|EXISTS], mtd=[testLanguageGuessing|EXISTS]} ,  , feasible : true } ],1.021148677887105

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], src=[TypeDeclaration [name=BaseNCodecTest]|EXISTS], mtd=[testContainsAlphabetOrPad|EXISTS]} ,  , feasible : true } ],1.0216884638425447

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522TestCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testAaclan|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ],1.0219893265602182

[ " EM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], src=[TypeDeclaration [name=PhonemeList]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Lang]|EXISTS], src=[TypeDeclaration [name=Base64InputStream]|EXISTS]} ,  , feasible : true } ],1.0214870164146381

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[SILENT_START|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], src=[TypeDeclaration [name=Context]|EXISTS], fld=[buffer|EXISTS]} ,  , feasible : true } ],1.0205323525597936

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testLocaleIndependence|EXISTS]} ,  , feasible : true } ],1.0228239934826755

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ],1.0231688280154119

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Lang]|EXISTS], src=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ],1.0266973192300715

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[append|EXISTS]} ,  , feasible : true } ],1.0327960273378218

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ],1.0274562924423913

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Caverphone2Test]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ],1.0281418054326874

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=LanguageGuessingTest]|EXISTS], src=[TypeDeclaration [name=PhoneticEngine]|EXISTS], mtd=[applyFinalRules|EXISTS]} ,  , feasible : true } ],1.0306650443676408

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_7|EXISTS]} ,  , feasible : true } ],1.031426261942529

[ " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=ResourceConstants]|EXISTS], src=[TypeDeclaration [name=MetaphoneTest]|EXISTS], mtd=[assertIsMetaphoneEqual|EXISTS]} ,  , feasible : true } ],1.0289616954056915

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.DoubleMetaphone.TGTisComplete]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[isComplete|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiBytes|EXISTS]} ,  , feasible : true } ],1.0288624285804178

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[PRINTABLE_CHARS|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[encodeBlanks|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Caverphone]|EXISTS], mtd=[isCaverphoneEqual|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_1|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Encoder]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS, TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[setMaxCodeLen|EXISTS]} ,  , feasible : true } ],1.024140603644911

[ " MM ":{ {tgt=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testCodeInteger1|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[SEP|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[BITS_PER_ENCODED_BYTE|EXISTS]} ,  , feasible : true } ],1.0258447287878356

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], fld=[TWELVE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DecoderExceptionTest]|EXISTS], src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testEncodeDecodeNull|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ],1.0258251541964751

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[colognePhonetic|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DecoderExceptionTest]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testEncodeClassCastException|EXISTS]} ,  , feasible : true } ],1.0308704973744987

[ " RID ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=CryptTest]|EXISTS], mtd=[testCryptWithEmptySalt|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[EOF|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiBytes|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.0317910988896692

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testLocaleIndependence|EXISTS]} ,  , feasible : true } ],1.0310012054536795

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryCodec]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ],1.0241425055034445

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryCodec]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32TestData]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ],1.0246761505283073

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisStrict]|NEW], src=[TypeDeclaration [name=Nysiis]|EXISTS], mtd=[isStrict|EXISTS]} ,  , feasible : true } ],1.0250106379177575

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTinstance]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[instance|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[SEP|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], fld=[engine|EXISTS]} ,  , feasible : true } ],1.0229330163555714

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], fld=[DIGITS_UPPER|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ],1.0219071094994248

[ " RDI ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[PREFIX|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], fld=[DIGITS_LOWER|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base64InputStream]|EXISTS]} ,  , feasible : true } ],1.022332457091306

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Encoder]|EXISTS], src=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[EOF|EXISTS]} ,  , feasible : true } ],1.0242899836277186

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testSpecificationExamples|EXISTS]} ,  , feasible : true } ],1.0255071250661048

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[DOUBLE_QUOTE|EXISTS]} ,  , feasible : true } ],1.025637074063921

[ " MM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone]|EXISTS], fld=[encoder|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[write|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], src=[TypeDeclaration [name=DigestUtils]|EXISTS], fld=[STREAM_BUFFER_LENGTH|EXISTS]} ,  , feasible : true } ],1.0263248018676585

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=PhoneticEngine]|EXISTS], mtd=[getMaxPhonemes|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[instance|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testFromAsciiCharArray|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0200321521590427

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.0208937582221345

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ],1.0249919549021533

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[decodeText|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getDefaultBufferSize|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=NysiisTest]|EXISTS], mtd=[encodeAll|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=URLCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ],1.0226505354090938

[ " RMMO ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeWithInvalidObject|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryCodec]|EXISTS], src=[TypeDeclaration [name=MetaphoneTest]|EXISTS], mtd=[assertIsMetaphoneEqual|EXISTS]} ,  , feasible : true } ],1.0213848103546135

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTinstance]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[instance|EXISTS]} ,  , feasible : true } ],1.0197359421001435

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTdifferenceEncoded]|NEW], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[differenceEncoded|EXISTS]} ,  , feasible : true } ],1.0186827712929991

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[getEncoding|EXISTS]} ,  , feasible : true } ],1.0192995734309274

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_0|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[available|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTtestIsDoubleMetaphoneEqualBasic]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualBasic|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Crypt]|EXISTS], src=[TypeDeclaration [name=PhonemeList]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ],1.0221415199567412

[ " RDI ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=Base32Test]|EXISTS], mtd=[testBase32Samples|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=RuleTest]|EXISTS], mtd=[testSubSequenceWorks|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], src=[TypeDeclaration [name=Lang]|EXISTS], fld=[rules|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ],1.0223497306704368

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=Base64TestData]|EXISTS], mtd=[bytesContain|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ],1.0225842388018402

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[ensureBufferSize|EXISTS]} ,  , feasible : true } ],1.0237624586653498

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], fld=[ONE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleCC|EXISTS]} ,  , feasible : true } ],1.0239148354431171

[ " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ],1.0225263925784496

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone2Test]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_2|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], mtd=[testNullInput|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.024224588665193

[ " RID ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestOOM]|NEW], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], mtd=[testOOM|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ],1.0253506608270178

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[readResults|EXISTS]} ,  , feasible : true } ],1.025875284759134

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryCodec]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=DecoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], fld=[ALTERNATE_INDEX|EXISTS]} ,  , feasible : true } ],1.0252060571524442

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTinstance]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[instance|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TGTtestEncodeNull]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeNull|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ],1.024110094338252

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ],1.0222945634812997

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeWithInvalidObject|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Phoneme]|EXISTS], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testEncodeDecodeRandom|EXISTS]} ,  , feasible : true } ],1.0216041787907286

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ],1.0212845168224631

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTinstance]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[instance|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS], mtd=[getRandomSalt|EXISTS]} ,  , feasible : true } ],1.0228510635082269

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.TGTtestUsAscii]|NEW], src=[TypeDeclaration [name=CharsetsTest]|EXISTS], mtd=[testUsAscii|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[SEP|EXISTS]} ,  , feasible : true } ],1.0245520705048319

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[STRING_FIXTURE|EXISTS]} ,  , feasible : true } ],1.0238603556330637

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ],1.0307662947457223

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[readResults|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Rule]|EXISTS], src=[TypeDeclaration [name=CryptTest]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], mtd=[getLanguages|EXISTS]} ,  , feasible : true } ],1.0311093568973224

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS], mtd=[testIso8859_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha2Crypt]|EXISTS], src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=RPattern]|EXISTS], mtd=[isMatch|EXISTS]} ,  , feasible : true } ],1.0281496985617398

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ],1.0281982842533273

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], src=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], fld=[LOOP|EXISTS]} ,  , feasible : true } ],1.028686987158253

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[markSupported|EXISTS]} ,  , feasible : true } ],1.0313332709453158

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ],1.0271847353709838

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], mtd=[testSha512CryptNullSalt|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestKnownEncodings]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testKnownEncodings|EXISTS]} ,  , feasible : true } ],1.023099454421385

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[EOF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedCommonCodeAT11111111|EXISTS]} ,  , feasible : true } ],1.0227188156474671

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[encodeText|EXISTS]} ,  , feasible : true } ],1.022662574286001

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ],1.0214433644771417

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTinstance]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[instance|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ],1.0207679563316019

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtest]|NEW], src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[test|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ],1.0213161681215568

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Crypt]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], fld=[DIGITS_LOWER|EXISTS]} ,  , feasible : true } ],1.0226923173880638

[ " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[PRINTABLE_CHARS|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], fld=[encodeTable|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ],1.0219718500546235

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BaseNCodecTest]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[resizeBuffer|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[FIXTURE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testSetMaxCodeLength|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectNull|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=LangRule]|EXISTS], fld=[acceptOnMatch|EXISTS]} ,  , feasible : true } ],1.0223611157985641

[ " RID ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleT|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=RefinedSoundexTest]|EXISTS], mtd=[testNewInstance|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RulesApplication]|EXISTS], src=[TypeDeclaration [name=CharEncoding]|EXISTS], fld=[UTF_16|EXISTS]} ,  , feasible : true } ],1.0232469862406914

[ " MF ":{ {tgt=[TypeDeclaration [name=BaseNCodecTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], fld=[engine|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=Caverphone]|EXISTS], fld=[encoder|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=Caverphone]|EXISTS], mtd=[caverphone|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodec]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[SWISS_GERMAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[CHUNKED_STRINGS|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], mtd=[testCodec98NPE|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=NysiisTest]|EXISTS], fld=[fullNysiis|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CharEncoding]|EXISTS], src=[TypeDeclaration [name=Charsets]|EXISTS], mtd=[toCharset|EXISTS]} ,  , feasible : true } ],1.0220569508154784

[ " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[decodeQuotedPrintable|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Md5CryptTest]|EXISTS], src=[TypeDeclaration [name=LanguageGuessingTest]|EXISTS], mtd=[testLanguageGuessing|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.021284195364992

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryCodec]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodecTest]|EXISTS], src=[TypeDeclaration [name=Base32TestData]|EXISTS], fld=[BASE32_FIXTURE|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ],1.020841808208435

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[mark|EXISTS]} ,  , feasible : true } ],1.0209151968339107

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryCodec]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhonemeList]|EXISTS], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ],1.0203920485683386

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTinstance]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[instance|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestSpeedCheck2]|NEW], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], mtd=[testSpeedCheck2|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ],1.021730526918759

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ],1.023371851706639

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isEncodeEquals|EXISTS]} ,  , feasible : true } ],1.0265123950105017

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[getNextPos|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ],1.0242573538288

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], mtd=[sha256Crypt|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Base32TestData]|EXISTS], fld=[STRING_FIXTURE|EXISTS]} ,  , feasible : true } ],1.0257228293540006

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS], fld=[serialVersionUID|EXISTS]} ,  , feasible : true } ],1.0243711178595034

[ " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testCaverphoneRevisitedCommonCodeAT1111|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=Nysiis]|EXISTS], fld=[strict|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=Nysiis]|EXISTS], mtd=[isStrict|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.024580659305615

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncodings|EXISTS]} ,  , feasible : true } ],1.0249473977257997

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Md5Crypt]|EXISTS], src=[TypeDeclaration [name=Lang]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.0254927579396529

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.0254927579396529

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.0269847452444414

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[hasData|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], mtd=[getLanguages|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], fld=[CON_SALT.|EXISTS]} ,  , feasible : true } ],1.022590252955501

[ " RDI ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS], mtd=[testUnicCryptInvalidSalt|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ],1.025573835268597

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ],1.0217207809479352

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[isArrayByteBase64|EXISTS]} ,  , feasible : true } ],1.0213879642306003

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTinstance]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[instance|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], fld=[RADIX|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ],1.0223209357116663

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTassertEncodings]|NEW], src=[TypeDeclaration [name=NysiisTest]|EXISTS], mtd=[assertEncodings|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64Test]|EXISTS], src=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], fld=[MD2|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], fld=[RADIX|EXISTS]} ,  , feasible : true } ],1.0211830792994745

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTtestCaverphoneRevisitedRandomNameTTA1111111]|NEW], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=PhonemeList]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ],1.0203551160768365

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.019897952815413

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Utils]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS], fld=[PAT_K|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], src=[TypeDeclaration [name=PhoneticEngine]|EXISTS], mtd=[getRuleType|EXISTS]} ,  , feasible : true } ],1.0200243513872311

[ " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptStrings|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS], fld=[PAT_PH_PF|EXISTS]} ,  , feasible : true } ],1.0204740695849526

[ " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[EMPTY_BYTE_ARRAY|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[encodeUrl|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0204665159841322

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ],1.0215386789396028

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryCodec]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS], src=[TypeDeclaration [name=Lang]|EXISTS], fld=[LANGUAGE_RULES_RN|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS], fld=[B64T|EXISTS]} ,  , feasible : true } ],1.0235637169233733

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CryptTest]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.022455708659911

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTinstance]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[instance|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ],1.0208869485615717

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.0214863866252222

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], src=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.02192580839707

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ],1.0211639988520598

[ " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], mtd=[testDoubleMetaphoneAlternate|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH_MAPPING_STRING|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=Soundex]|EXISTS], mtd=[map|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BITS|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringUtils]|EXISTS], src=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS], mtd=[testBase32EmptyOutputStreamPemChunkSize|EXISTS]} ,  , feasible : true } ],1.021199881696435

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[PRINTABLE_CHARS|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[unencodedBlockSize|EXISTS]} ,  , feasible : true } ],1.0217098215863072

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[write|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64URLSafe|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=Soundex]|EXISTS], mtd=[setMaxLength|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0221687703360782

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ],1.0207872389414425

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ],1.0209647272008915

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ],1.0210768123872898

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=EncoderException]|EXISTS], fld=[serialVersionUID|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[phonemeText|EXISTS]} ,  , feasible : true } ],1.0220365222168857

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.0268501759019038

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncoding|EXISTS]} ,  , feasible : true } ],1.0262580046248346

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ],1.025611985028018

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getDefaultBufferSize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[encodeHex|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ],1.021922696884053

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[leftToRightThenRightToLeftProcessing|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[getEncoding|EXISTS]} ,  , feasible : true } ],1.022255272880791

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RefinedSoundex]|EXISTS], src=[TypeDeclaration [name=PhoneticEngine]|EXISTS], mtd=[getRuleType|EXISTS]} ,  , feasible : true } ],1.0195328533458907

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ],1.0195509817113257

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryCodec]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], fld=[TEST_DATA|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[SWISS_GERMAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ],1.0198319136447191

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[toDigit|EXISTS]} ,  , feasible : true } ],1.0196214498689302

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ],1.019510167586732

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[COMPARATOR|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhonemeList]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ],1.0198882420089246

[ " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], src=[TypeDeclaration [name=DecoderExceptionTest]|EXISTS], mtd=[testConstructorThrowable|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], fld=[testData|EXISTS]} ,  , feasible : true } ],1.0202500433868482

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], fld=[RADIX|EXISTS]} ,  , feasible : true } ],1.0208773389797756

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[instance|EXISTS]} ,  , feasible : true } ],1.0217035294873487

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DecoderExceptionTest]|EXISTS], src=[TypeDeclaration [name=DigestUtils]|EXISTS], mtd=[getSha384Digest|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[encodeTable|EXISTS]} ,  , feasible : true } ],1.0205404969243075

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[write|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Md5CryptTest]|EXISTS], src=[TypeDeclaration [name=RuleTest]|EXISTS], mtd=[testSubSequenceWorks|EXISTS]} ,  , feasible : true } ],1.0189347196980223

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[SPACE|EXISTS]} ,  , feasible : true } ],1.0179462099409

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryCodec]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexTest]|EXISTS], src=[TypeDeclaration [name=Caverphone]|EXISTS], fld=[encoder|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ],1.0191214776770832

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTinstance]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[instance|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTnewString]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[newString|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ],1.01993462519717

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ],1.01993462519717

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], fld=[DIGITS_LOWER|EXISTS]} ,  , feasible : true } ],1.0200851728488494

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[ALL_STRINGS_RMATCHER|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[ANY_LANGUAGE|EXISTS]} ,  , feasible : true } ],1.0198604474775297

[ " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testToAsciiChars|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], fld=[engine|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[encodeText|EXISTS]} ,  , feasible : true } ],1.0197047320974082

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], fld=[SHA_1|EXISTS]} ,  , feasible : true } ],1.0180365170159524

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=LanguageGuessingTest]|EXISTS], src=[TypeDeclaration [name=RuleTest]|EXISTS], mtd=[testPhonemeComparedToLaterIsNegative|EXISTS]} ,  , feasible : true } ],1.0181507080925734

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=PhonemeList]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ],1.018318628482858

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[encodeText|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[append|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ],1.0184248505293858

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ],1.0180764043592976

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], fld=[engine|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], mtd=[setNameType|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ],1.019944839455511

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[decodeHex|EXISTS]} ,  , feasible : true } ],1.0189099319460269

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.0195612625165074

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[SEP|EXISTS]} ,  , feasible : true } ],1.0244122678944219

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testGetMinRating_7_Return4_Successfully|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ],1.0197584072002104

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=NysiisTest]|EXISTS], fld=[fullNysiis|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ],1.0185851650646494

[ " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Soundex]|EXISTS], mtd=[getMappingCode|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS], mtd=[testSolrGENERIC|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Base64TestData]|EXISTS], mtd=[streamToBytes|EXISTS]} ,  , feasible : true } ],1.019055513072905

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ],1.019754031647525

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[decodeInteger|EXISTS]} ,  , feasible : true } ],1.020710367454681

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=URLCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=URLCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], fld=[PREPROCESS_MAP|EXISTS]} ,  , feasible : true } ],1.0203570516584357

[ " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=HexTest]|EXISTS], src=[TypeDeclaration [name=Base64TestData]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RefinedSoundex]|EXISTS], src=[TypeDeclaration [name=MetaphoneTest]|EXISTS], mtd=[testIsMetaphoneEqualPeter|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ],1.0235823417514378

[ " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeWithInvalidObject|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[EOF|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ],1.025627854180703

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[doubleMetaphoneEqualTest|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[toDigit|EXISTS]} ,  , feasible : true } ],1.0247706306356337

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[doubleMetaphoneEqualTest|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Caverphone]|EXISTS], mtd=[caverphone|EXISTS]} ,  , feasible : true } ],1.0235760716315876

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getDefaultBufferSize|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], fld=[DIGITS_LOWER|EXISTS]} ,  , feasible : true } ],1.0242687466136282

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[encodeText|EXISTS]} ,  , feasible : true } ],1.023871090386051

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryCodec]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CharEncoding]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Base32Test]|EXISTS], fld=[BASE32_TEST_CASES_CHUNKED|EXISTS]} ,  , feasible : true } ],1.0248097772976879

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTinstance]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[instance|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTdifference]|NEW], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[difference|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ],1.023349972796771

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.021791546469445

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=EncoderException]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], fld=[DECODE_TABLE|EXISTS]} ,  , feasible : true } ],1.0217356274757095

[ " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=PhoneticEngine]|EXISTS], mtd=[isConcat|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Rule]|EXISTS], src=[TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], src=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], fld=[LOOP|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[ANY|EXISTS]} ,  , feasible : true } ],1.0206560861289016

[ " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncodings|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[maxCodeLen|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BITS|EXISTS]} ,  , feasible : true } ],1.0208907231906652

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodec]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ],1.0226009964570086

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[isArrayByteBase64|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[encodeBlanks|EXISTS]} ,  , feasible : true } ],1.0216728112465083

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringUtils]|EXISTS], src=[TypeDeclaration [name=URLCodecTest]|EXISTS], fld=[SWISS_GERMAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[encodeTable|EXISTS]} ,  , feasible : true } ],1.021932747298314

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256CryptBytes|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.PhoneticEngine.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.PhoneticEngine.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[getPhonemes|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0231577956013587

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTinstance]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[instance|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.0213465316237869

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.DoubleMetaphone.TGTgetPrimary]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[getPrimary|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[write|EXISTS]} ,  , feasible : true } ],1.0190438749885016

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.0205089661979074

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ],1.0255340653359555

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ],1.025077394099287

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeList]|EXISTS], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ],1.0224593977893064

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=DecoderExceptionTest]|EXISTS], mtd=[testConstructorThrowable|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[DEFAULT_BUFFER_RESIZE_FACTOR|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=RefinedSoundexTest]|EXISTS], mtd=[testNewInstance3|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[available|EXISTS]} ,  , feasible : true } ],1.0231843243719325

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ],1.0221024340849714

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ],1.0170646469575373

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestSetNameTypeAsh]|NEW], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], mtd=[testSetNameTypeAsh|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ],1.0183875688620725

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BaseNCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[LANGUAGES|EXISTS]} ,  , feasible : true } ],1.0188074835657857

[ " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=B64]|EXISTS], fld=[B64T|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=B64]|EXISTS], mtd=[getRandomSalt|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BaseNCodecTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], mtd=[getLanguages|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.TgtClassEC]|NEW], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.TgtClassEC]|NEW], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeNull|EXISTS]} ,  , feasible : true } ],1.0199557101438288

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeList]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[difference|EXISTS]} ,  , feasible : true } ],1.0176915891703637

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Sha2Crypt]|EXISTS], src=[TypeDeclaration [name=MetaphoneTest]|EXISTS], mtd=[testWordsWithCIA|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], fld=[DIGITS_UPPER|EXISTS]} ,  , feasible : true } ],1.0192829258508023

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeInteger|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamMimeChuckSize|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0177111736322475

[ " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncodings|EXISTS]} ,  , feasible : true } ],1.0178560942187693

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[differenceEncoded|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ],1.0160618553819778

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ],1.014270933985829

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], fld=[SHA256_BLOCKSIZE|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS]} ,  , feasible : true } ],1.0133894935635874

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS]} ,  , feasible : true } ],1.0132456379755121

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS, TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[VOWELS|EXISTS]} ,  , feasible : true } ],1.0139130218310093

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=UtilsTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_3|EXISTS]} ,  , feasible : true } ],1.0157111926293685

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], fld=[CKQ|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[PRINTABLE_CHARS|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderExceptionTest]|EXISTS], fld=[MSG|EXISTS]} ,  , feasible : true } ],1.0159171522327872

[ " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Base32TestData]|EXISTS], mtd=[randomData|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS], fld=[serialVersionUID|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], mtd=[testDoubleMetaphonePrimary|EXISTS]} ,  , feasible : true } ],1.0183139940658337

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], fld=[AHOUKQX|EXISTS]} ,  , feasible : true } ],1.0164632835014153

[ " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[lContext|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[endsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Caverphone2Test]|EXISTS], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=CharEncoding]|EXISTS], fld=[ISO_8859_1|EXISTS]} ,  , feasible : true } ],1.0155050310106066

[ " IM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTresizeArray]|NEW], src=[TypeDeclaration [name=Base64TestData]|EXISTS], mtd=[resizeArray|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS], mtd=[nysiis|EXISTS]} ,  , feasible : true } ],1.0218868181324727

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getLanguages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeWithInvalidObject|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ],1.023725520596722

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[cleanName|EXISTS]} ,  , feasible : true } ],1.0224030693852544

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Encoder]|EXISTS], src=[TypeDeclaration [name=Crypt]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[decodeInteger|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.0226426547636094

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[getMappingCode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[BLOCKSIZE|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[COMPARATOR|EXISTS]} ,  , feasible : true } ],1.0230111278520018

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], fld=[SHA256_BLOCKSIZE|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeInteger|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[DEFAULT_BUFFER_RESIZE_FACTOR|EXISTS]} ,  , feasible : true } ],1.0224473216701775

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=Crypt]|EXISTS], mtd=[crypt|EXISTS]} ,  , feasible : true } ],1.0214191101652539

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS, TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[VOWELS|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], mtd=[testSpeedCheck|EXISTS]} ,  , feasible : true } ],1.0226699306353602

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[length|EXISTS]} ,  , feasible : true } ],1.0221158870811708

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.PhoneticEngine.TgtClassEC]|NEW], src=[TypeDeclaration [name=RulesApplication]|EXISTS], fld=[finalRules|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.PhoneticEngine.TgtClassEC]|NEW], src=[TypeDeclaration [name=RulesApplication]|EXISTS], mtd=[isFound|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Hex]|EXISTS], src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256CryptNullData|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[encodeHex|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ],1.021284359326996

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[SPACE|EXISTS]} ,  , feasible : true } ],1.0209157771058575

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], fld=[SHA512_PREFIX|EXISTS]} ,  , feasible : true } ],1.0225281086635665

[ " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=PhonemeList]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], fld=[decodeTable|EXISTS]} ,  , feasible : true } ],1.0250780016426926

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ],1.0248942253545255

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS], src=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], fld=[testData|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ],1.0243809157256785

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeInteger|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamMimeChuckSize|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.0254823966128672

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[differenceEncoded|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ],1.023264692893455

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncodingVariations|EXISTS]} ,  , feasible : true } ],1.0228427567800407

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ],1.0216159713979873

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], fld=[SHA256_BLOCKSIZE|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS]} ,  , feasible : true } ],1.0196833699781314

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS]} ,  , feasible : true } ],1.0195000195597355

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS, TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[VOWELS|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ],1.0224106706634735

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], src=[TypeDeclaration [name=Charsets]|EXISTS], mtd=[toCharset|EXISTS]} ,  , feasible : true } ],1.0220973680234897

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Encoder]|EXISTS], src=[TypeDeclaration [name=BinaryEncoderAbstractTest]|EXISTS], mtd=[makeEncoder|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Rule]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ],1.0222823075611174

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=LangRule]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ],1.0229946951954032

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodecTest]|EXISTS], fld=[codec|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], fld=[LOOP|EXISTS]} ,  , feasible : true } ],1.0253985243306782

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], fld=[LOOP|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[SPACE|EXISTS]} ,  , feasible : true } ],1.0261327844949615

[ " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[length|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[decodeUrl|EXISTS]} ,  , feasible : true } ],1.0257105705596663

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ],1.0266004536371274

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], fld=[alternate|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD_DEFAULT|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[COMPARATOR|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ],1.0268366237287687

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[DEFAULT_BUFFER_RESIZE_FACTOR|EXISTS]} ,  , feasible : true } ],1.0337380829740364

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=SoundexTest]|EXISTS], src=[TypeDeclaration [name=Utils]|EXISTS], mtd=[digit16|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[phoneticExpected|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.029916731669977

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS], mtd=[testUtf16Le|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexTest]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS], fld=[PAT_DT_ETC|EXISTS]} ,  , feasible : true } ],1.029735576093468

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha2CryptRounds|EXISTS]} ,  , feasible : true } ],1.0298983051659656

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[lineLength|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodec]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[decodeHex|EXISTS]} ,  , feasible : true } ],1.028215889693954

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestSetConcat]|NEW], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], mtd=[testSetConcat|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhonetic]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], fld=[DEFAULT_CHARSET|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[join|EXISTS]} ,  , feasible : true } ],1.0233398935086315

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[FIXTURE|EXISTS]} ,  , feasible : true } ],1.0236247475902946

[ " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], mtd=[testMd2Hex|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=ResourceConstants]|EXISTS], fld=[CMT|EXISTS]} ,  , feasible : true } ],1.022644578398378

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[intToFourBytes|EXISTS]} ,  , feasible : true } ],1.021818266278939

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Utils]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], mtd=[sha256Crypt|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[encodedBlockSize|EXISTS]} ,  , feasible : true } ],1.0224385430700698

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamMimeChuckSize|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.022604410101827

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[differenceEncoded|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ],1.021895639918364

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ],1.0205671066842417

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], fld=[SHA256_BLOCKSIZE|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ],1.019034166810832

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ],1.0206546821806093

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], mtd=[getLanguages|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Caverphone]|EXISTS], fld=[encoder|EXISTS]} ,  , feasible : true } ],1.0216158638901958

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[differenceEncoded|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[LANGUAGES|EXISTS]} ,  , feasible : true } ],1.0238554634086436

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32Test]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.0211638775911924

[ " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS], src=[TypeDeclaration [name=RuleTest]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RulesApplication]|EXISTS], fld=[found|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32TestData]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_1|EXISTS]} ,  , feasible : true } ],1.019884939759683

[ " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTtestCaverphoneRevisitedRandomNameTN11111111]|NEW], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTN11111111|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testLocaleIndependence|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngine]|EXISTS], fld=[maxPhonemes|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngine]|EXISTS], mtd=[getLang|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ],1.0203391555492447

[ " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " RID ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[encodeUrl|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[SPACE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[decodeQuotedPrintable|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0225358077675288

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodec]|EXISTS], src=[TypeDeclaration [name=CharEncoding]|EXISTS]} ,  , feasible : true } ],1.0218170794360997

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.TGTtestUtf8]|NEW], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS], mtd=[testUtf8|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[SEP|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ],1.0239673620459477

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.0271005634890014

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS], mtd=[testUtf16Le|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ],1.0228155124554963

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[differenceEncoded|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_1|EXISTS]} ,  , feasible : true } ],1.0230797055087164

[ " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RID ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=EncoderException]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[encodeQuotedPrintable|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=CharEncoding]|EXISTS], fld=[UTF_8|EXISTS]} ,  , feasible : true } ],1.0252483969291497

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ],1.0259623156080064

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[decodeInteger|EXISTS]} ,  , feasible : true } ],1.025754620025357

[ " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=CryptTest]|EXISTS], mtd=[testCryptWithEmptySalt|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=BCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], mtd=[testSetRuleTypeToRulesIllegalArgumentException|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BaseNCodecTest]|EXISTS], mtd=[testIsInAlphabetByteArrayBoolean|EXISTS]} ,  , feasible : true } ],1.026464066609867

[ " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructor0|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RefinedSoundex]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS], fld=[VOWELS|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], fld=[countdown|EXISTS]} ,  , feasible : true } ],1.026077609518902

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[differenceEncoded|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ],1.0260963520301483

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_2|EXISTS]} ,  , feasible : true } ],1.0241597784192893

[ " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeInteger|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamMimeChuckSize|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RefinedSoundex]|EXISTS], src=[TypeDeclaration [name=EncoderException]|EXISTS], fld=[serialVersionUID|EXISTS]} ,  , feasible : true } ],1.0234719429872003

[ " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[differenceEncoded|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=PhoneticEngine]|EXISTS], mtd=[applyFinalRules|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[encodeUrl|EXISTS]} ,  , feasible : true } ],1.0260988893609546

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Base64TestData]|EXISTS], mtd=[resizeArray|EXISTS]} ,  , feasible : true } ],1.024205072968786

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[decodeTable|EXISTS]} ,  , feasible : true } ],1.0233125736803028

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], fld=[SHA256_BLOCKSIZE|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ],1.0239055964397732

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base64InputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS]} ,  , feasible : true } ],1.0222273204407575

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING_STRING|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ],1.0223623130374873

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhonemeList]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=RulesApplication]|EXISTS], fld=[maxPhonemes|EXISTS]} ,  , feasible : true } ],1.0233100285728902

[ " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Base32Test]|EXISTS], fld=[BASE32_TEST_CASES|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[markSupported|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.0204413176175675

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], fld=[WWW_FORM_URL|EXISTS]} ,  , feasible : true } ],1.0205987944199906

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestCtor]|NEW], src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ],1.0205320543344178

[ " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithDoubleMetaphoneAndInvalidInput|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[isUrlSafe|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeWithInvalidObject|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncodingVariations|EXISTS]} ,  , feasible : true } ],1.0228106737624343

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_3|EXISTS]} ,  , feasible : true } ],1.0213226570009406

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MetaphoneTest]|EXISTS], mtd=[testIsMetaphoneEqual1|EXISTS]} ,  , feasible : true } ],1.0210485617507923

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ],1.0269702763808026

[ " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=LanguageSet]|EXISTS], mtd=[from|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Charsets]|EXISTS], mtd=[toCharset|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], fld=[testData|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Lang]|EXISTS], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStream|EXISTS]} ,  , feasible : true } ],1.0278353796280384

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=RuleTest]|EXISTS], mtd=[testSubSequenceWorks|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ],1.0286531344728294

[ " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64Chunked|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Encoder]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS], mtd=[nysiis|EXISTS]} ,  , feasible : true } ],1.0300177464422557

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[test|EXISTS]} ,  , feasible : true } ],1.0262526407851382

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS, TypeDeclaration [name=DoubleMetaphone]|EXISTS, TypeDeclaration [name=Nysiis]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ],1.027490832052576

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ],1.0247181010712318

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=PhonemeList]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ],1.0263072984041923

[ " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RulesApplication]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiChars|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone]|EXISTS], mtd=[isCaverphoneEqual|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Hex]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS], fld=[B64T|EXISTS]} ,  , feasible : true } ],1.0246264474445481

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ],1.024932375904478

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[encodeTable|EXISTS]} ,  , feasible : true } ],1.0247294670101625

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeInteger|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=QCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.TgtClassEC]|NEW], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.TgtClassEC]|NEW], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeWithInvalidObject|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64TestData]|EXISTS], fld=[SIZE_KEY|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64TestData]|EXISTS], mtd=[bytesContain|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base64InputStream]|EXISTS]} ,  , feasible : true } ],1.0260344432460649

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[hasData|EXISTS]} ,  , feasible : true } ],1.0263853559708338

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[differenceEncoded|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ],1.0258574271937952

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=CharEncodingTest]|EXISTS], mtd=[testUtf16Le|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTgetRuleType]|NEW], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], mtd=[getRuleType|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MIME_CHUNK_SIZE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[isWhiteSpace|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0249097946761188

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TGTdigit16]|NEW], src=[TypeDeclaration [name=Utils]|EXISTS], mtd=[digit16|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], src=[TypeDeclaration [name=NysiisTest]|EXISTS], mtd=[testDan|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], mtd=[map|EXISTS]} ,  , feasible : true } ],1.0254988187209937

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ],1.0265222380904349

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base64InputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS]} ,  , feasible : true } ],1.0256170584079947

[ " MF ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RID ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=Base64TestData]|EXISTS], fld=[ENCODED_76_CHARS_PER_LINE|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CharsetsTest]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[DEFAULT_BUFFER_SIZE|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=Base64TestData]|EXISTS], fld=[LAST_READ_KEY|EXISTS]} ,  , feasible : true } ],1.022442779404665

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CharEncoding]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[maxCodeLen|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[isLastChar|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[COMPARATOR|EXISTS]} ,  , feasible : true } ],1.0223560400136444

[ " RDI ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[assertDecodeObject|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Sha2Crypt]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], fld=[SHA256_BLOCKSIZE|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CryptTest]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS], fld=[B64T|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=Metaphone]|EXISTS], fld=[maxCodeLen|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[getMaxCodeLen|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=MetaphoneTest]|EXISTS], mtd=[testIsMetaphoneEqualAlbert|EXISTS]} ,  , feasible : true } ],1.0233829295841523

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS], fld=[CHARS_G|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=LanguageGuessingTest]|EXISTS], fld=[EXACT|EXISTS]} ,  , feasible : true } ],1.025324796952371

[ " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base64InputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testSoundexUtilsNullBehaviour|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[available|EXISTS]} ,  , feasible : true } ],1.0275353370048594

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[isUrlSafe|EXISTS]} ,  , feasible : true } ],1.0278846768141314

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64]|EXISTS], fld=[BYTES_PER_ENCODED_BLOCK|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[isArrayByteBase64|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeAsString|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=Base64TestData]|EXISTS], fld=[CODEC_98_NPE_DECODED|EXISTS]} ,  , feasible : true } ],1.027189273208601

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[getNextChar|EXISTS]} ,  , feasible : true } ],1.0286011032093714

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testEncodeBatch2|EXISTS]} ,  , feasible : true } ],1.0248535381240678

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ],1.0271788832397757

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTtestTranan]|NEW], src=[TypeDeclaration [name=NysiisTest]|EXISTS], mtd=[testTranan|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeWithInvalidObject|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeNull|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[SEP|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Md5Crypt]|EXISTS], src=[TypeDeclaration [name=BaseNCodecTest]|EXISTS], fld=[codec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched|EXISTS]} ,  , feasible : true } ],1.024397352428498

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], mtd=[testWriteOutOfBounds|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Crypt]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], mtd=[testSha512CryptExplicitCall|EXISTS]} ,  , feasible : true } ],1.0230171216936166

[ " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[decodeBase64|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[decodeText|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Caverphone]|EXISTS], mtd=[caverphone|EXISTS]} ,  , feasible : true } ],1.0233616313378218

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base64InputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ],1.0265575973516858

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ],1.0209575720328605

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleT|EXISTS]} ,  , feasible : true } ],1.020370249524518

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[conditionC0|EXISTS]} ,  , feasible : true } ],1.0220615560855393

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=PhonemeList]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ],1.022914817906045

[ " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DigestUtils]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], mtd=[getInstance|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Md5CryptTest]|EXISTS], src=[TypeDeclaration [name=CharEncoding]|EXISTS], fld=[UTF_16|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=LanguageGuessingTest]|EXISTS], fld=[ONE_OF|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=Base32Test]|EXISTS], fld=[BASE32HEX_TEST_CASES|EXISTS]} ,  , feasible : true } ],1.0235558899204473

[ " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=Charsets]|EXISTS], mtd=[toCharset|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ],1.0253959587662778

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[SILENT_START|EXISTS]} ,  , feasible : true } ],1.024918255981408

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeInteger|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ],1.0245627462832017

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamMimeChuckSize|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.028333614418514

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructor0|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[encodeBlanks|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[EMPTY_BYTE_ARRAY|EXISTS]} ,  , feasible : true } ],1.0281855597066023

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[differenceEncoded|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ],1.0237177520708993

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ],1.0236012388453837

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], fld=[SHA256_BLOCKSIZE|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=PhoneticEngine]|EXISTS], mtd=[applyFinalRules|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TGTassertExpectedDecoderException]|NEW], src=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], mtd=[assertExpectedDecoderException|EXISTS]} ,  , feasible : true } ],1.021266241404258

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DecoderExceptionTest]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[ruleType|EXISTS]} ,  , feasible : true } ],1.022215143837736

[ " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base64InputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=PhoneticEngine]|EXISTS], mtd=[isConcat|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.0227474381543633

[ " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=Caverphone]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], fld=[LOOP|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], mtd=[test|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.PhoneticEngine.TGTinvoke]|NEW], src=[TypeDeclaration [name=RulesApplication]|EXISTS], mtd=[invoke|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0237766066124208

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[getNextChar|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64|EXISTS]} ,  , feasible : true } ],1.0267935012153044

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ],1.0239995363273147

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[append|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ],1.0224182669343653

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=Base32TestData]|EXISTS], fld=[STRING_FIXTURE|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Utils]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ],1.022876128169777

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=LanguageGuessingTest]|EXISTS], fld=[language|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], fld=[primary|EXISTS]} ,  , feasible : true } ],1.0232791390796878

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[unencodedBlockSize|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone2Test]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ],1.0250708722739221

[ " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[addLeft|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeWithInvalidObject|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[PREFIX|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MIME_CHUNK_SIZE|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[EOF|EXISTS]} ,  , feasible : true } ],1.0264274199200099

[ " RID ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Caverphone]|EXISTS]} ,  , feasible : true } ],1.0266071008612678

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=RPattern]|EXISTS], mtd=[isMatch|EXISTS]} ,  , feasible : true } ],1.0260245636448904

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ],1.0260856349245076

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ],1.0315480247319697

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=PhoneticEngine]|EXISTS], mtd=[getMaxPhonemes|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Crypt]|EXISTS], src=[TypeDeclaration [name=Base32Test]|EXISTS], mtd=[testBase32HexSamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_3|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.0323592342163026

[ " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS], mtd=[testEncodeDecodeNull|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=Crypt]|EXISTS], mtd=[crypt|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS], mtd=[testBase32OutputStreamByChunk|EXISTS]} ,  , feasible : true } ],1.0293989982051976

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=PhonemeList]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ],1.0291523403904155

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ],1.0263528252410805

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64URLSafe|EXISTS]} ,  , feasible : true } ],1.0267790969627881

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[BYTES_PER_ENCODED_BLOCK|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ],1.0270239010613558

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ],1.027207534639145

[ " RDI ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64URLSafeString|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testBase64|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ],1.0246770914008303

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[unencodedBlockSize|EXISTS]} ,  , feasible : true } ],1.0255841454644408

[ " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeInteger|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS], mtd=[testWriteToNullCoverage|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[decodeQuotedPrintable|EXISTS]} ,  , feasible : true } ],1.0265567332391579

[ " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[differenceEncoded|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], mtd=[testNegativeIndexForRuleMatchIndexOutOfBoundsException|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[apr1Crypt|EXISTS]} ,  , feasible : true } ],1.0267498924346945

[ " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.PhoneticEngine.TgtClassEC]|NEW], src=[TypeDeclaration [name=RulesApplication]|EXISTS], fld=[found|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.PhoneticEngine.TgtClassEC]|NEW], src=[TypeDeclaration [name=RulesApplication]|EXISTS], mtd=[getI|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[encodeHexString|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[COMPARATOR|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], fld=[DECODE_TABLE|EXISTS]} ,  , feasible : true } ],1.0284681163207365

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], fld=[SHA256_BLOCKSIZE|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ],1.0268881025108831

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[differenceEncoded|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ],1.0245011451254036

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DecoderExceptionTest]|EXISTS], mtd=[testConstructorThrowable|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=URLCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=Base64InputStream]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=RefinedSoundexTest]|EXISTS], mtd=[testNewInstance|EXISTS]} ,  , feasible : true } ],1.0253918816584482

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[decodeHex|EXISTS]} ,  , feasible : true } ],1.0260863705405698

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[doubleMetaphoneEqualTest|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], src=[TypeDeclaration [name=Base64TestData]|EXISTS], fld=[SIZE_KEY|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS, TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[maxCodeLen|EXISTS]} ,  , feasible : true } ],1.0259077044492744

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodecTest]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS], fld=[B64T|EXISTS]} ,  , feasible : true } ],1.0256431954479859

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[length|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS], mtd=[isStrict|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=UtilsTest]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS], fld=[CHARS_C|EXISTS]} ,  , feasible : true } ],1.025877737564841

[ " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testMd5CryptBytes|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS], fld=[serialVersionUID|EXISTS]} ,  , feasible : true } ],1.0269292675767658

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD_DEFAULT|EXISTS]} ,  , feasible : true } ],1.0277060668661133

[ " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[PRINTABLE_CHARS|EXISTS]} ,  , feasible : true } ],1.0261430351098437

[ " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64URLSafe|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[markSupported|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ],1.0261730131626134

[ " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testCaverphoneRevisitedCommonCodeAT1111|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[markSupported|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[addLeft|EXISTS]} ,  , feasible : true } ],1.0258698796278203

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ],1.026010169963009

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeAsString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ],1.026258050219034

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32Test]|EXISTS], src=[TypeDeclaration [name=Lang]|EXISTS], fld=[rules|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], src=[TypeDeclaration [name=BaseNCodecTest]|EXISTS], fld=[codec|EXISTS]} ,  , feasible : true } ],1.0270510209555375

[ " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], mtd=[testSha512CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[SEP|EXISTS]} ,  , feasible : true } ],1.026587759943758

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[encodeText|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testToAsciiChars|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone2Test]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[phoneticExpected|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], fld=[WWW_FORM_URL|EXISTS]} ,  , feasible : true } ],1.0262069863912961

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[MD5_PREFIX|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ],1.0278566270789353

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[resizeBuffer|EXISTS]} ,  , feasible : true } ],1.025262732550979

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[SPACE|EXISTS]} ,  , feasible : true } ],1.023740625706564

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ],1.0232403838858117

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[decodeQuotedPrintable|EXISTS]} ,  , feasible : true } ],1.0240473208764131

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], fld=[DEFAULT_CHARSET_NAME|EXISTS]} ,  , feasible : true } ],1.0240364872263679

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=QCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], mtd=[getInstance|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[SEP|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], src=[TypeDeclaration [name=Utils]|EXISTS], mtd=[digit16|EXISTS]} ,  , feasible : true } ],1.0233845119732379

[ " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[differenceEncoded|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeList]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS], mtd=[isStrict|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ],1.0232358993705464

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=URLCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ],1.0222163450943376

[ " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64URLSafe|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[fromAscii|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase64InputStreamByteByByte]|NEW], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testBase64InputStreamByteByByte|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ],1.0209917493988323

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeInteger|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Charsets]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[PRINTABLE_CHARS|EXISTS]} ,  , feasible : true } ],1.0245336971268026

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamMimeChuckSize|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeAsString|EXISTS]} ,  , feasible : true } ],1.0237767456960976

[ " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[differenceEncoded|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.0245451621931654

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[encodedBlockSize|EXISTS]} ,  , feasible : true } ],1.0237717230602932

[ " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Rule]|EXISTS], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptNullData|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=ResourceConstants]|EXISTS], fld=[EXT_CMT_END|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], fld=[AHOUKQX|EXISTS]} ,  , feasible : true } ],1.0253860019757852

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], fld=[SHA256_BLOCKSIZE|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS]} ,  , feasible : true } ],1.02388326222505

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base64InputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ],1.0253850185365547

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[differenceEncoded|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS]} ,  , feasible : true } ],1.022725050392853

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], mtd=[getLanguages|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], fld=[SKB.|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], fld=[DEFAULT_CHARSET_NAME|EXISTS]} ,  , feasible : true } ],1.0214663805865793

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[SEP|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS], fld=[VOWELS|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], mtd=[setConcat|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ],1.0218957831097562

[ " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeInteger|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamMimeChuckSize|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectEncodeWithValidParameter|EXISTS]} ,  , feasible : true } ],1.0225834946401964

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS], fld=[FRONTV|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Utils]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], fld=[ROUNDS_PREFIX|EXISTS]} ,  , feasible : true } ],1.0238649446709187

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CryptTest]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ],1.0239168506188134

[ " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base64InputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], mtd=[getLanguages|EXISTS]} ,  , feasible : true } ],1.0239564716843477

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncodingVariations|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], mtd=[assertNotEmpty|EXISTS]} ,  , feasible : true } ],1.0246849993832108

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[encodeUrl|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BaseNCodecTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], fld=[PRIMARY_INDEX|EXISTS]} ,  , feasible : true } ],1.0259749069836628

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ],1.0264802620864069

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[encodeQuotedPrintable|EXISTS]} ,  , feasible : true } ],1.026477323883221

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], fld=[DEFAULT_CHARSET_NAME|EXISTS]} ,  , feasible : true } ],1.025349096603321

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[DEFAULT_BUFFER_SIZE|EXISTS]} ,  , feasible : true } ],1.0264161831315832

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[mark|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], src=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], fld=[LOOP|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ],1.0281919682559866

[ " MM ":{ {tgt=[TypeDeclaration [name=URLCodecTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorStringThrowable|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[DEFAULT_BUFFER_RESIZE_FACTOR|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], src=[TypeDeclaration [name=LanguageGuessingTest]|EXISTS], mtd=[testLanguageGuessing|EXISTS]} ,  , feasible : true } ],1.0265839523832996

[ " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeNull|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[DEFAULT_BUFFER_SIZE|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UtilsTest]|EXISTS], mtd=[testConstructor|EXISTS]} ,  , feasible : true } ],1.0263228130521636

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ],1.027356590023078

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ],1.028072783900913

[ " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], src=[TypeDeclaration [name=RPattern]|EXISTS], mtd=[isMatch|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=EncoderException]|EXISTS], fld=[serialVersionUID|EXISTS]} ,  , feasible : true } ],1.027493020829203

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[BYTES_PER_ENCODED_BLOCK|EXISTS]} ,  , feasible : true } ],1.027335335624294

[ " RDI ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeInteger|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Encoder]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ],1.0271631128625374

[ " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[differenceEncoded|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncoding|EXISTS]} ,  , feasible : true } ],1.0267072058903082

[ " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[decodeSize|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PEM_CHUNK_SIZE|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTmark]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[mark|EXISTS]} ,  , feasible : true } ],1.0260859929965456

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], fld=[SHA256_BLOCKSIZE|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testHelloWorldUpperCaseHex|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=ResourceConstants]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[clean|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DigestUtils]|EXISTS], mtd=[getMd2Digest|EXISTS]} ,  , feasible : true } ],1.0249515470762103

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base64InputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS]} ,  , feasible : true } ],1.0247786796198182

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[encodeQuotedPrintable|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Charsets]|EXISTS], fld=[UTF_16BE|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodecTest]|EXISTS], src=[TypeDeclaration [name=LangRule]|EXISTS], fld=[acceptOnMatch|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ],1.0256330812761512

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=EncoderException]|EXISTS], fld=[serialVersionUID|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Caverphone]|EXISTS], mtd=[caverphone|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ResourceConstants]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ],1.0256246902694701

[ " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=BCodecTest]|EXISTS], fld=[SWISS_GERMAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CharsetsTest]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[SEP|EXISTS]} ,  , feasible : true } ],1.0258079432690868

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS, TypeDeclaration [name=DoubleMetaphone]|EXISTS, TypeDeclaration [name=Nysiis]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=LanguageGuessingTest]|EXISTS], fld=[ONE_OF|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[decodeTable|EXISTS]} ,  , feasible : true } ],1.0245184897014323

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ],1.0255303400114042

[ " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MetaphoneTest]|EXISTS], mtd=[testIsMetaphoneEqualPeter|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncodingVariations|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS], mtd=[transcodeRemaining|EXISTS]} ,  , feasible : true } ],1.0259057183525875

[ " MM ":{ {tgt=[TypeDeclaration [name=URLCodecTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorStringThrowable|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ],1.025477746448859

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testLocaleIndependence|EXISTS]} ,  , feasible : true } ],1.0257139121698118

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[colognePhonetic|EXISTS]} ,  , feasible : true } ],1.0301929874574403

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], src=[TypeDeclaration [name=CharsetsTest]|EXISTS], mtd=[testUtf16|EXISTS]} ,  , feasible : true } ],1.0310720715374024

[ " MM ":{ {tgt=[TypeDeclaration [name=URLCodecTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorStringThrowable|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ],1.0304688806172115

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], fld=[SHA256_BLOCKSIZE|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS, TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ],1.0281562825800556

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[decodeTable|EXISTS]} ,  , feasible : true } ],1.024187337892495

[ " MM ":{ {tgt=[TypeDeclaration [name=URLCodecTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorStringThrowable|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithDoubleMetaphoneAndInvalidInput|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodecTest]|EXISTS], fld=[codec|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[encodeBlanks|EXISTS]} ,  , feasible : true } ],1.0241930002073325

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ],1.0234778400817888

[ " MM ":{ {tgt=[TypeDeclaration [name=URLCodecTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorStringThrowable|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base64Test]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ],1.0231648274790526

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ],1.023734931042873

[ " RID ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=StringDecoder]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=QCodecTest]|EXISTS], mtd=[testUTF8RoundTrip|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Base32TestData]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeWithInvalidObject|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[markSupported|EXISTS]} ,  , feasible : true } ],1.0241103259716808

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[append|EXISTS]} ,  , feasible : true } ],1.0264314054239445

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ],1.0275639127590332

[ " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Encoder]|EXISTS], src=[TypeDeclaration [name=Caverphone]|EXISTS], mtd=[isCaverphoneEqual|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=B64]|EXISTS], fld=[B64T|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=B64]|EXISTS], mtd=[getRandomSalt|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testEncodeIgnoreTrimmable|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], src=[TypeDeclaration [name=Charsets]|EXISTS], fld=[UTF_8|EXISTS]} ,  , feasible : true } ],1.0273892813414955

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testEndMb|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ],1.027479099622065

[ " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeInteger|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS], mtd=[testByteByByte|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[constructString|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], fld=[ENCODED_B64|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testBase64EmptyInputStreamMimeChuckSize|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Crypt]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[contains|EXISTS]} ,  , feasible : true } ],1.0254912781867873

[ " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[differenceEncoded|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[chunkSeparatorLength|EXISTS]} ,  , feasible : true } ],1.0255033526159416

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ],1.0257089476023846

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], fld=[SHA256_BLOCKSIZE|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], mtd=[test|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ],1.0236956744747383

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base64InputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Md5Crypt]|EXISTS], src=[TypeDeclaration [name=Lang]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=RuleTest]|EXISTS], mtd=[testPhonemeComparedToSelfIsZero|EXISTS]} ,  , feasible : true } ],1.0253039381397533

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[isWhiteSpace|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], mtd=[checkDoubleMetaphone|EXISTS]} ,  , feasible : true } ],1.0274826697519985

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[BYTES_PER_ENCODED_BLOCK|EXISTS]} ,  , feasible : true } ],1.0280629734265634

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[phonemeText|EXISTS]} ,  , feasible : true } ],1.0275267560528025

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], fld=[PRIMARY_INDEX|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[append|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DigestUtils]|EXISTS], src=[TypeDeclaration [name=Charsets]|EXISTS], fld=[UTF_16BE|EXISTS]} ,  , feasible : true } ],1.0249851231904945

[ " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=DigestUtils]|EXISTS], mtd=[sha512Hex|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=NysiisTest]|EXISTS], fld=[fullNysiis|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], src=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ],1.0238561602902372

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DecoderExceptionTest]|EXISTS], src=[TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ],1.0252052070002367

[ " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[decodeInteger|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ],1.025167498792511

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeNull|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ],1.024936953408444

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeNull|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], fld=[TEST_DATA|EXISTS]} ,  , feasible : true } ],1.0251556745752457

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], mtd=[checkDoubleMetaphone|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[addLeft|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[available|EXISTS]} ,  , feasible : true } ],1.0251311208208174

[ " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], mtd=[langResourceName|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], src=[TypeDeclaration [name=LanguageGuessingTest]|EXISTS], fld=[ONE_OF|EXISTS]} ,  , feasible : true } ],1.0241099405601022

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ],1.0245351487754615

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], fld=[WWW_FORM_URL|EXISTS]} ,  , feasible : true } ],1.024640367250443

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Hex]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[SWISS_GERMAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[encodeBlanks|EXISTS]} ,  , feasible : true } ],1.0256220871988715

[ " MM ":{ {tgt=[TypeDeclaration [name=URLCodecTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorStringThrowable|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.0278387639740503

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ],1.0269586146467804

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ],1.027033188904044

[ " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], fld=[LOOP|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], mtd=[test|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], mtd=[describeTo|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ],1.0259006543751754

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ],1.0259006543751754

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ],1.0259006543751754

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=Base32]|EXISTS], fld=[DECODE_TABLE|EXISTS]} ,  , feasible : true } ],1.0250680423961829

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], mtd=[sha512Crypt|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=PhoneticEngine]|EXISTS], mtd=[join|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ],1.0250046677447795

[ " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeInteger|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamMimeChuckSize|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=RefinedSoundexTest]|EXISTS], mtd=[testNewInstance2|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testUTF8RoundTrip|EXISTS]} ,  , feasible : true } ],1.0249553843612305

[ " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[differenceEncoded|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ],1.0248468909750175

[ " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], fld=[SPTRANS.|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS, TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[maxCodeLen|EXISTS]} ,  , feasible : true } ],1.0254456470662379

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], fld=[SHA256_BLOCKSIZE|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Charsets]|EXISTS], src=[TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTtestIsDoubleMetaphoneEqualExtended1]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualExtended1|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], fld=[SALT_CHARS.|EXISTS]} ,  , feasible : true } ],1.0267058954721255

[ " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base64InputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncodings|EXISTS]} ,  , feasible : true } ],1.0265241382512706

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[encodeUrl|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32TestData]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], fld=[WWW_FORM_URL|EXISTS]} ,  , feasible : true } ],1.026985257309026

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ],1.0270490103309102

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=DecoderExceptionTest]|EXISTS], fld=[MSG|EXISTS]} ,  , feasible : true } ],1.0281200592545066

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ],1.0255798233383229

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[available|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[available|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BCodecTest]|EXISTS], src=[TypeDeclaration [name=URLCodecTest]|EXISTS], fld=[SWISS_GERMAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=Base32Test]|EXISTS], mtd=[testRandomBytesHex|EXISTS]} ,  , feasible : true } ],1.0250871326035376

[ " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[getNextChar|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[markSupported|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ],1.0237491988670187

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0256533455912216

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptWithInvalidSalt|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], mtd=[testDoubleMetaphonePrimary|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTisArrayByteBase64]|NEW], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[isArrayByteBase64|EXISTS]} ,  , feasible : true } ],1.0264137389835795

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.0298943507078024

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testgetMinRating_6_Returns4_Successfully|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS], fld=[SWISS_GERMAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0309786913787131

[ " MM ":{ {tgt=[TypeDeclaration [name=URLCodecTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorStringThrowable|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[lineLength|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testDecodeByteArray|EXISTS]} ,  , feasible : true } ],1.0300628539442147

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ],1.0284033978833262

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PEM_CHUNK_SIZE|EXISTS]} ,  , feasible : true } ],1.026111110110131

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getLanguages|EXISTS]} ,  , feasible : true } ],1.0267937626530372

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse|EXISTS]} ,  , feasible : true } ],1.0239691863918874

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], src=[TypeDeclaration [name=PhoneticEngine]|EXISTS], fld=[ruleType|EXISTS]} ,  , feasible : true } ],1.023677192246752

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[differenceEncoded|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ],1.02456747450858

[ " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Sha2Crypt]|EXISTS], src=[TypeDeclaration [name=DecoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ],1.0238080419035431

[ " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], mtd=[testShaUpdateWithByteArray|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundexTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[length|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_4|EXISTS]} ,  , feasible : true } ],1.0220294301684767

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], mtd=[getLanguages|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[MSG|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.0223666693426163

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeInteger|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamMimeChuckSize|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0220551107666218

[ " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[length|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MetaphoneTest]|EXISTS], mtd=[testTranslateToJOfDGEOrDGIOrDGY|EXISTS]} ,  , feasible : true } ],1.0226665433372417

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[differenceEncoded|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ],1.0226665433372417

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ],1.0219284144522218

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[STRING_FIXTURE|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiChars|EXISTS]} ,  , feasible : true } ],1.0221625176923117

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], fld=[SHA256_BLOCKSIZE|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS]} ,  , feasible : true } ],1.0207258525388092

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=RuleTest]|EXISTS], mtd=[makePhonemes|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ],1.0205136336256146

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS, TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[VOWELS|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ],1.020973300533126

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[phonemeText|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], mtd=[compare|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[length|EXISTS]} ,  , feasible : true } ],1.0204856269607432

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.0205456989162098

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], fld=[WWW_FORM_URL|EXISTS]} ,  , feasible : true } ],1.020317750797223

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=NysiisTest]|EXISTS], fld=[fullNysiis|EXISTS]} ,  , feasible : true } ],1.0200706737916658

[ " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[differenceEncoded|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[available|EXISTS]} ,  , feasible : true } ],1.0204891599576977

[ " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ],1.0217977066421646

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getDefaultBufferSize|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.021370187627287

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ],1.0211102873505373

[ " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhonetic]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[phonemeText|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ],1.0213686945056508

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base64InputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS]} ,  , feasible : true } ],1.0228311608098735

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PEM_CHUNK_SIZE|EXISTS]} ,  , feasible : true } ],1.0230643837635385

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32TestData]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], fld=[engine|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0236240141684023

[ " MM ":{ {tgt=[TypeDeclaration [name=URLCodecTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorStringThrowable|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_0|EXISTS]} ,  , feasible : true } ],1.0237173918928286

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS], mtd=[testDecodeStringWithNull|EXISTS]} ,  , feasible : true } ],1.0214510959104157

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ],1.0206396109649798

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=NysiisTest]|EXISTS], fld=[fullNysiis|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTappend]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[append|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], mtd=[checkDoubleMetaphone|EXISTS]} ,  , feasible : true } ],1.0213766113825546

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ],1.0218592465364704

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base64InputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS]} ,  , feasible : true } ],1.0215454697136046

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ],1.0216897315756166

[ " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeObjects|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[encodeText|EXISTS]} ,  , feasible : true } ],1.0225787769614294

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamMimeChuckSize|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ],1.022851363553886

[ " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamMimeChuckSize|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS, TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], mtd=[isConcat|EXISTS]} ,  , feasible : true } ],1.0220097017304748

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[differenceEncoded|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ],1.0206567128608166

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PEM_CHUNK_SIZE|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.PhoneticEngine.TGTempty]|NEW], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[empty|EXISTS]} ,  , feasible : true } ],1.0206144981292002

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " RID ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ],1.0199260069945597

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testEmpty|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=QCodecTest]|EXISTS], src=[TypeDeclaration [name=CryptTest]|EXISTS], mtd=[testCrypt|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], mtd=[getRuleType|EXISTS]} ,  , feasible : true } ],1.018828917062825

[ " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[differenceEncoded|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[mark|EXISTS]} ,  , feasible : true } ],1.0188789276852166

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS, TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[VOWELS|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LangRule]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.0197772243570562

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Rule]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], fld=[BYTES_PER_ENCODED_BLOCK|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[append|EXISTS]} ,  , feasible : true } ],1.019688368006828

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ],1.021933072194614

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DigestUtils]|EXISTS], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[ALL|EXISTS]} ,  , feasible : true } ],1.0201882737736643

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], src=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], fld=[LOOP|EXISTS]} ,  , feasible : true } ],1.0185418407401634

[ " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getDefaultBufferSize|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ],1.0176589619623977

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ],1.0176388550765527

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " IM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], src=[TypeDeclaration [name=Charsets]|EXISTS], fld=[ISO_8859_1|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.PhoneticEngine.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.PhoneticEngine.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DigestUtils]|EXISTS], src=[TypeDeclaration [name=UtilsTest]|EXISTS], mtd=[testConstructor|EXISTS]} ,  , feasible : true } ],1.0196015985613707

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ],1.0200695790260768

[ " MM ":{ {tgt=[TypeDeclaration [name=URLCodecTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorStringThrowable|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DecoderExceptionTest]|EXISTS], src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], mtd=[setMaxLength|EXISTS]} ,  , feasible : true } ],1.0199834938587393

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ],1.0243633530471337

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ],1.0221166467632585

[ " MM ":{ {tgt=[TypeDeclaration [name=URLCodecTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorStringThrowable|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ],1.0230072498188785

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ],1.022973695625554

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ],1.0222245519612028

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], mtd=[difference|EXISTS]} ,  , feasible : true } ],1.02268907113989

[ " MM ":{ {tgt=[TypeDeclaration [name=URLCodecTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorStringThrowable|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getLanguages|EXISTS]} ,  , feasible : true } ],1.0215457500233398

[ " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=UtilsTest]|EXISTS], mtd=[testConstructor|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestCtor]|NEW], src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.TgtClassEC]|NEW], src=[TypeDeclaration [name=Charsets]|EXISTS], fld=[UTF_16LE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.TgtClassEC]|NEW], src=[TypeDeclaration [name=Charsets]|EXISTS], mtd=[toCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0238741915033476

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ],1.023262974064787

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], src=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], fld=[LOOP|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[join|EXISTS]} ,  , feasible : true } ],1.0242883588647618

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[DECODE_TABLE|EXISTS]} ,  , feasible : true } ],1.0228803608884296

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ],1.0218707352148286

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamMimeChuckSize|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[decodeUrl|EXISTS]} ,  , feasible : true } ],1.022918601382787

[ " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[differenceEncoded|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[PREFIX|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=LanguageGuessingTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32Test]|EXISTS], fld=[BASE32_TEST_CASES_CHUNKED|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32Test]|EXISTS], mtd=[testBase32HexSamples|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0233458453190545

[ " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[length|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS, TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[VOWELS|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[encodeText|EXISTS]} ,  , feasible : true } ],1.023468117249514

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=NysiisTest]|EXISTS], mtd=[testSpecialBranches|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], fld=[testData|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], mtd=[testMd2Hex|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testMd5CryptStrings|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[available|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[decodeText|EXISTS]} ,  , feasible : true } ],1.0219289017325155

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ],1.023122725270505

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base64InputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS]} ,  , feasible : true } ],1.0246279745973466

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ],1.0246420109814016

[ " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS, TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[VOWELS|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[encodeText|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[markSupported|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testEmpty|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ],1.024992304782334

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ],1.0236316477704055

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ],1.0226654074264503

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ],1.0220230607330771

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Hex]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16BE|EXISTS]} ,  , feasible : true } ],1.0226192312195683

[ " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[encodeUrl|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ],1.0265588299385606

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ],1.0275648358078724

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[mark|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.0276947666281342

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testCaverphoneRevisitedCommonCodeAT1111|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleT|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.DoubleMetaphone.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], fld=[alternate|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.DoubleMetaphone.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendPrimary|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], fld=[LOOP|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], mtd=[setNameType|EXISTS]} ,  , feasible : true } ],1.024625409760143

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ],1.0279905420447863

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_3|EXISTS]} ,  , feasible : true } ],1.0227134256436434

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[phonemeText|EXISTS]} ,  , feasible : true } ],1.02220520626783

[ " MM ":{ {tgt=[TypeDeclaration [name=URLCodecTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorStringThrowable|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=DecoderExceptionTest]|EXISTS], mtd=[testConstructor0|EXISTS]} ,  , feasible : true } ],1.0222681666520157

[ " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[ensureBufferSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[markSupported|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[encodeQuotedPrintable|EXISTS]} ,  , feasible : true } ],1.0245251617997277

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.023880349228839

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ],1.0233278060057236

[ " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[DEFAULT_BUFFER_SIZE|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[DECODE_TABLE|EXISTS]} ,  , feasible : true } ],1.0222496751089276

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamMimeChuckSize|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0214611106352802

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharsetName|EXISTS]} ,  , feasible : true } ],1.0229851270521533

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhonetic]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ],1.0225514138685994

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ],1.021993859623571

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[rContext|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[phonemeText|EXISTS]} ,  , feasible : true } ],1.0198521278375359

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base64InputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS]} ,  , feasible : true } ],1.0226879394050064

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamMimeChuckSize|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testEmpty|EXISTS]} ,  , feasible : true } ],1.0217860699475594

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ],1.0217677300313561

[ " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[differenceEncoded|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ],1.02154194618847

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.0221505710099439

[ " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[length|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BCodecTest]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], fld=[SZ|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=DecoderExceptionTest]|EXISTS], fld=[MSG|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[name|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeWithInvalidObject|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringUtils]|EXISTS], src=[TypeDeclaration [name=LanguageGuessingTest]|EXISTS], mtd=[testLanguageGuessing|EXISTS]} ,  , feasible : true } ],1.024140467047342

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base64InputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ],1.0238738195627952

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[length|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=EncoderException]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[PREFIX|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[write|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestSubSequenceWorks]|NEW], src=[TypeDeclaration [name=RuleTest]|EXISTS], mtd=[testSubSequenceWorks|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=EncoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS], mtd=[testUnixCryptWithHalfSalt|EXISTS]} ,  , feasible : true } ],1.0262185669085488

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], fld=[EMPTY|EXISTS]} ,  , feasible : true } ],1.0241502964362406

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], fld=[EOF|EXISTS]} ,  , feasible : true } ],1.0242891126242848

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64Test]|EXISTS], src=[TypeDeclaration [name=URLCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=Lang]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.0240695336917685

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ],1.0270755818533104

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32TestData]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ],1.0278901634032107

[ " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64URLSafeString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testAabjoe|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[PRINTABLE_CHARS|EXISTS]} ,  , feasible : true } ],1.0298348835587692

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base64InputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[decodeText|EXISTS]} ,  , feasible : true } ],1.0271158405191427

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.023894627337471

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PEM_CHUNK_SIZE|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[getEncoding|EXISTS]} ,  , feasible : true } ],1.0225396738860493

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], fld=[DEFAULT_CHARSET|EXISTS]} ,  , feasible : true } ],1.0262005672891144

[ " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ],1.0269533177473646

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], fld=[SHA256_BLOCKSIZE|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS]} ,  , feasible : true } ],1.0209976839797523

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], fld=[EIGHT|EXISTS]} ,  , feasible : true } ],1.0195264522403111

[ " MM ":{ {tgt=[TypeDeclaration [name=URLCodecTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorStringThrowable|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ],1.0203622081704367

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ],1.0203084923203163

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamMimeChuckSize|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0190056536399044

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ],1.0203284337993608

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Base64TestData]|EXISTS], mtd=[streamToBytes|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[resizeBuffer|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[encodeUrl|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], mtd=[testSpeedCheck2|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ],1.02190739363329

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=NysiisTest]|EXISTS], fld=[fullNysiis|EXISTS]} ,  , feasible : true } ],1.0225840206264556

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[instance|EXISTS]} ,  , feasible : true } ],1.0223577874556777

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QCodecTest]|EXISTS], fld=[SWISS_GERMAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.0214623116168475

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], mtd=[langResourceName|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testEdgeCases|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTtestEndMb]|NEW], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testEndMb|EXISTS]} ,  , feasible : true } ],1.0193711313241893

[ " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ],1.0200045609827213

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[differenceEncoded|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ],1.0192622660467423

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTisWhiteSpace]|NEW], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[isWhiteSpace|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ],1.020119210992336

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], fld=[SHA256_BLOCKSIZE|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[decodeHex|EXISTS]} ,  , feasible : true } ],1.0171622340448823

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[SILENT_START|EXISTS]} ,  , feasible : true } ],1.0190235209575542

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Charsets]|EXISTS], src=[TypeDeclaration [name=Caverphone]|EXISTS], fld=[encoder|EXISTS]} ,  , feasible : true } ],1.0175488747902612

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS, TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[VOWELS|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageGuessingTest]|EXISTS], src=[TypeDeclaration [name=Lang]|EXISTS], fld=[LANGUAGE_RULES_RN|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RulesApplication]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ],1.018490701262792

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], fld=[FIVE|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BCodecTest]|EXISTS], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ],1.0197479571479489

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ],1.018097869396283

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], fld=[engine|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[unencodedBlockSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ],1.0177125588314433

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], fld=[WFPV|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testMd5CryptLongInput|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncoding|EXISTS]} ,  , feasible : true } ],1.0186770405043246

[ " RDI ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=NysiisTest]|EXISTS], mtd=[testRule6|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[decodeText|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32TestData]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], fld=[EOF|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[encodeBlanks|EXISTS]} ,  , feasible : true } ],1.0201170831797228

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testCompareNameToSingleLetter_KARL_C_DoesNotMatch|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_4|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiBytes|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0196525427827814

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ],1.019024210793235

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ],1.0220775937715267

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ],1.0220775937715267

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=EncoderException]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], fld=[DIGITS_UPPER|EXISTS]} ,  , feasible : true } ],1.0190085186531062

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], src=[TypeDeclaration [name=Base32]|EXISTS], fld=[encodeSize|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.018908391485841

[ " MM ":{ {tgt=[TypeDeclaration [name=URLCodecTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorStringThrowable|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS], mtd=[testSolrGENERIC|EXISTS]} ,  , feasible : true } ],1.0199242350328563

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ],1.0199303240547373

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ],1.0197857959377201

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ],1.0193517615270125

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[getEncoding|EXISTS]} ,  , feasible : true } ],1.022975328829226

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Caverphone2Test]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[apr1Crypt|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeWithInvalidObject|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DigestUtils]|EXISTS], mtd=[getSha384Digest|EXISTS]} ,  , feasible : true } ],1.023717334515063

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=NysiisTest]|EXISTS], fld=[fullNysiis|EXISTS]} ,  , feasible : true } ],1.0231035290922135

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], src=[TypeDeclaration [name=LangRule]|EXISTS], fld=[acceptOnMatch|EXISTS]} ,  , feasible : true } ],1.0234246496100896

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0230826523628516

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], fld=[SCZ|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[colognePhonetic|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeInteger|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ],1.02495314478294

[ " RDI ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.PhoneticEngine.TgtClassEC]|NEW], src=[TypeDeclaration [name=RulesApplication]|EXISTS], fld=[finalRules|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.PhoneticEngine.TgtClassEC]|NEW], src=[TypeDeclaration [name=RulesApplication]|EXISTS], mtd=[isFound|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS], mtd=[testUsAscii|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ],1.022839652557634

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[resizeBuffer|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.TgtClassEC]|NEW], src=[TypeDeclaration [name=DecoderExceptionTest]|EXISTS], fld=[MSG|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.TgtClassEC]|NEW], src=[TypeDeclaration [name=DecoderExceptionTest]|EXISTS], mtd=[testConstructorString|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[encodeText|EXISTS]} ,  , feasible : true } ],1.021748524192977

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], fld=[SHA256_BLOCKSIZE|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ],1.020307168267042

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ],1.0219131830984065

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS, TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[VOWELS|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getDefaultBufferSize|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CharEncoding]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], fld=[SHA256_PREFIX|EXISTS]} ,  , feasible : true } ],1.0218370471746754

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[decodeSize|EXISTS]} ,  , feasible : true } ],1.0221877831830282

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS], fld=[serialVersionUID|EXISTS]} ,  , feasible : true } ],1.0237712063295523

[ " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PEM_CHUNK_SIZE|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[SPACE|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], src=[TypeDeclaration [name=PhonemeList]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ],1.023709931578037

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DigestUtils]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[BLOCKSIZE|EXISTS]} ,  , feasible : true } ],1.0235566143496595

[ " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleCC|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[length|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[decodeQuotedPrintable|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[decodeTable|EXISTS]} ,  , feasible : true } ],1.0239107657831656

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualExtended2|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[difference|EXISTS]} ,  , feasible : true } ],1.0215083280949477

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ],1.0212904745859372

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], fld=[BYTES_PER_UNENCODED_BLOCK|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ],1.0209088023442991

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ],1.0240025796205234

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncodings|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=PhonemeList]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ],1.0217431830979287

[ " MM ":{ {tgt=[TypeDeclaration [name=URLCodecTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorStringThrowable|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[readResults|EXISTS]} ,  , feasible : true } ],1.0218273728523923

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ],1.0208208023187484

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ],1.0208208023187484

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=NysiisTest]|EXISTS], fld=[fullNysiis|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=NysiisTest]|EXISTS], mtd=[testRule6|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[append|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Base32TestData]|EXISTS], src=[TypeDeclaration [name=LangRule]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], mtd=[testAsciiEncodeNotEmpty2Letters|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[BLANK|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[setEncodeBlanks|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.022175674547355

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS, TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[VOWELS|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS], mtd=[isStrict|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Encoder]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[CHUNKED_STRINGS|EXISTS]} ,  , feasible : true } ],1.0227072183241863

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ],1.0243912370003656

[ " RDI ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[encodeText|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CharEncoding]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[UNDERSCORE|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ],1.0258735252011677

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[phonemeText|EXISTS]} ,  , feasible : true } ],1.0250330420162737

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[hasData|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Caverphone]|EXISTS], fld=[encoder|EXISTS]} ,  , feasible : true } ],1.0234855588096265

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[unencodedBlockSize|EXISTS]} ,  , feasible : true } ],1.0233072561911625

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamMimeChuckSize|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[decodeUrl|EXISTS]} ,  , feasible : true } ],1.0237298425734263

[ " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeWithInvalidObject|EXISTS]} ,  , feasible : true } ],1.0245232345560258

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[differenceEncoded|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ],1.0218036400634503

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Context]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTshaHex]|NEW], src=[TypeDeclaration [name=DigestUtils]|EXISTS], mtd=[shaHex|EXISTS]} ,  , feasible : true } ],1.022400004587615

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=PhonemeList]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ],1.0222904550829002

[ " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], fld=[SHA256_BLOCKSIZE|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], mtd=[testAsciiEncodeNotEmpty2Letters|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeWithInvalidObject|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ],1.0227972639789433

[ " RID ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[length|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncoding]|EXISTS], src=[TypeDeclaration [name=CryptTest]|EXISTS]} ,  , feasible : true } ],1.022798203777154

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS, TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[VOWELS|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64URLSafeString|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Crypt]|EXISTS], src=[TypeDeclaration [name=Charsets]|EXISTS], fld=[UTF_16|EXISTS]} ,  , feasible : true } ],1.0219251611724138

[ " MM ":{ {tgt=[TypeDeclaration [name=LangRule]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], mtd=[testStaticEncode|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CharsetsTest]|EXISTS], mtd=[testUtf16|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Nysiis]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testDecodeObjectException|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodePadMarkerIndex2|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0218029943752829

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=PhoneticEngine]|EXISTS], fld=[lang|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BCodecTest]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS], fld=[VARSON|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Phoneme]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], fld=[CON_SALT.|EXISTS]} ,  , feasible : true } ],1.0218627678743817

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Encoder]|EXISTS], src=[TypeDeclaration [name=Context]|EXISTS], fld=[buffer|EXISTS]} ,  , feasible : true } ],1.0218276614763098

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[ALL_STRINGS_RMATCHER|EXISTS]} ,  , feasible : true } ],1.0219698022611265

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], fld=[testData|EXISTS]} ,  , feasible : true } ],1.022708021882401

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[getNextPos|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=URLCodecTest]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[PREFIX|EXISTS]} ,  , feasible : true } ],1.0235434074520111

[ " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[markSupported|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[getMappingCode|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ],1.024023932925101

[ " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=EncoderException]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedExamples|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTsha256Crypt]|NEW], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], mtd=[sha256Crypt|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[append|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendPrimary|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS], fld=[CHARS_SSS|EXISTS]} ,  , feasible : true } ],1.0255512285834507

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.0255512285834507

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ],1.02529800526542

[ " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=HexTest]|EXISTS], src=[TypeDeclaration [name=DigestUtils]|EXISTS], mtd=[md5|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[SWISS_GERMAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ],1.0237357821733402

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[isComplete|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], fld=[DIGITS_LOWER|EXISTS]} ,  , feasible : true } ],1.023330442915912

[ " MM ":{ {tgt=[TypeDeclaration [name=URLCodecTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorStringThrowable|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], fld=[SHA256_BLOCKSIZE|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS]} ,  , feasible : true } ],1.0230094552842175

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[decodeInteger|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[apr1Crypt|EXISTS]} ,  , feasible : true } ],1.0236171200717161

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ],1.0221688448012336

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[preprocess|EXISTS]} ,  , feasible : true } ],1.020950473333643

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Crypt]|EXISTS], src=[TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.021232215248008

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ],1.0240137896934731

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=RefinedSoundex]|EXISTS], src=[TypeDeclaration [name=RPattern]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ],1.022800539285948

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexTest]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], fld=[encodeTable|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[length|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], fld=[engine|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], mtd=[setMaxPhonemes|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.023501698664338

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], mtd=[getRuleType|EXISTS]} ,  , feasible : true } ],1.0230414201926172

[ " MM ":{ {tgt=[TypeDeclaration [name=URLCodecTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorStringThrowable|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamMimeChuckSize|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ],1.0241559871616033

[ " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CryptTest]|EXISTS], src=[TypeDeclaration [name=RuleTest]|EXISTS], mtd=[testPhonemeComparedToSelfIsZero|EXISTS]} ,  , feasible : true } ],1.0242659775615863

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[available|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ],1.019999806694254

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ],1.0203566159098145

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MetaphoneTest]|EXISTS], mtd=[testIsMetaphoneEqualMary|EXISTS]} ,  , feasible : true } ],1.0195699041151844

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], fld=[SHA256_BLOCKSIZE|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[contains|EXISTS]} ,  , feasible : true } ],1.020228233062599

[ " RID ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=HexTest]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[COMPARATOR|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BaseNCodecTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], fld=[engine|EXISTS]} ,  , feasible : true } ],1.0203641275429465

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[length|EXISTS]} ,  , feasible : true } ],1.0198696434018226

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[encodedBlockSize|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=ResourceConstants]|EXISTS], fld=[EXT_CMT_START|EXISTS]} ,  , feasible : true } ],1.0203508858615498

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ],1.020302771900803

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=RefinedSoundex]|EXISTS], src=[TypeDeclaration [name=RPattern]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS], mtd=[testUnicCryptInvalidSalt|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ],1.0185417749905972

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[maxLength|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Rule]|EXISTS], src=[TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.019734423007271

[ " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[decodeBase64|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=LanguageSet]|EXISTS], mtd=[from|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[getNextChar|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[encodeTable|EXISTS]} ,  , feasible : true } ],1.020616455962806

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testCustomCharsetToString|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTread]|NEW], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], fld=[EOF|EXISTS]} ,  , feasible : true } ],1.019059866840172

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[encodeHexString|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS], mtd=[testSolrASHKENAZI|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], mtd=[testNullInput|EXISTS]} ,  , feasible : true } ],1.0192947708707067

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ],1.0254108218685953

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], mtd=[getLanguages|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=URLCodecTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DigestUtils]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS], mtd=[testSolrASHKENAZI|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_3|EXISTS]} ,  , feasible : true } ],1.0210343327763187

[ " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testEdgeCases|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ],1.0226279121805084

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ],1.0225522805080007

[ " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], mtd=[initCHUNKED_STRINGS|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=URLCodecTest]|EXISTS], mtd=[constructString|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestCtor]|NEW], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=UtilsTest]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[STRINGS|EXISTS]} ,  , feasible : true } ],1.021927625409682

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ],1.0218726013955706

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], fld=[ENCODED_B64|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[setUp|EXISTS]} ,  , feasible : true } ],1.0223337964499029

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[available|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getLanguages|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[PRINTABLE_CHARS|EXISTS]} ,  , feasible : true } ],1.0210347650368592

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualWithMATCHES|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[PRINTABLE_CHARS|EXISTS]} ,  , feasible : true } ],1.0220524070016999

[ " EM ":{ {src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], mtd=[testSha512CryptBytes|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestUnicCryptInvalidSalt]|NEW], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS], mtd=[testUnicCryptInvalidSalt|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MetaphoneTest]|EXISTS], mtd=[testIsMetaphoneEqualPeter|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Nysiis]|EXISTS], mtd=[transcodeRemaining|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[apr1Crypt|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS]} ,  , feasible : true } ],1.0236775601211472

[ " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MIME_CHUNK_SIZE|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Md5CryptTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualExtended2|EXISTS]} ,  , feasible : true } ],1.023814429610648

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ],1.0227478103460146

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ],1.0228523994525973

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], fld=[SHA256_BLOCKSIZE|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ],1.0229241426762

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[encodeSize|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithDoubleMetaphone|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorThrowable|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[encodeBlanks|EXISTS]} ,  , feasible : true } ],1.0209539094810542

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[maxCodeLen|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], fld=[rules|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0220783535234064

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[lineLength|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RefinedSoundex]|EXISTS], src=[TypeDeclaration [name=RulesApplication]|EXISTS], fld=[phonemeBuilder|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[mark|EXISTS]} ,  , feasible : true } ],1.0225106389921814

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CharEncoding]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS], fld=[FRONTV|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ],1.024349259290114

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ],1.0249022084045625

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[setEncodeBlanks|EXISTS]} ,  , feasible : true } ],1.0262504055716668

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[FIXTURE|EXISTS]} ,  , feasible : true } ],1.025687643801165

[ " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toByteArray|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[hasData|EXISTS]} ,  , feasible : true } ],1.0226727786835352

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharsetName|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.0226766467378887

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[readResults|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.0217956880694694

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[PREFIX|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], mtd=[testSpeedCheck|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[getMappingCode|EXISTS]} ,  , feasible : true } ],1.0223934109743147

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ],1.0251078900527133

[ " PUM ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[append|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TGTtestEncodeDecodeBlanks]|NEW], src=[TypeDeclaration [name=QCodecTest]|EXISTS], mtd=[testEncodeDecodeBlanks|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], fld=[maxLength|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS], fld=[VARSON|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ],1.0267350837002927

[ " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Charsets]|EXISTS], src=[TypeDeclaration [name=Crypt]|EXISTS], mtd=[crypt|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ],1.0263054442883837

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[decodeText|EXISTS]} ,  , feasible : true } ],1.0235515862483813

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ],1.0219454204027534

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[encodeText|EXISTS]} ,  , feasible : true } ],1.0225595789971005

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[fromAscii|EXISTS]} ,  , feasible : true } ],1.022729935906049

[ " RID ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testCompare_SMITH_SMYTH_SuccessfullyMatched|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.TGTtestUsAscii]|NEW], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS], mtd=[testUsAscii|EXISTS]} ,  , feasible : true } ],1.0231780273228614

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], fld=[ALTERNATE_INDEX|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testDecodeInvalid|EXISTS]} ,  , feasible : true } ],1.0241289244901934

[ " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[readResults|EXISTS]} ,  , feasible : true } ],1.0228624103514283

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS, TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[VOWELS|EXISTS]} ,  , feasible : true } ],1.0200026103310833

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[encodeQuotedPrintable|EXISTS]} ,  , feasible : true } ],1.022339837766991

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamMimeChuckSize|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0249192546026022

[ " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[PREFIX|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS], mtd=[testBase32EmptyOutputStreamMimeChunkSize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ],1.0257574052326013

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=RuleTest]|EXISTS], mtd=[makePhonemes|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=DigestUtils]|EXISTS], fld=[STREAM_BUFFER_LENGTH|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=DigestUtils]|EXISTS], mtd=[sha|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ],1.0212453557732986

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], fld=[SHA256_BLOCKSIZE|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS]} ,  , feasible : true } ],1.019433739211595

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], fld=[WWW_FORM_URL|EXISTS]} ,  , feasible : true } ],1.0193538375825626

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[encodeText|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[decodeHex|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.0207421263523468

[ " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS, TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[VOWELS|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeAsString|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], fld=[engine|EXISTS]} ,  , feasible : true } ],1.0220222952133964

[ " RID ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[phonemeText|EXISTS]} ,  , feasible : true } ],1.0218358407875852

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ],1.0228058701235638

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BaseNCodecTest]|EXISTS], src=[TypeDeclaration [name=RulesApplication]|EXISTS], fld=[found|EXISTS]} ,  , feasible : true } ],1.0222231606892012

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[length|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.021553793856468

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhonetic]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ],1.022411687497774

[ " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testSpecificationV1Examples|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[decodeUrl|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], fld=[TEST_DATA|EXISTS]} ,  , feasible : true } ],1.023736240022885

[ " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[getNextChar|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[write|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testEncodeIgnoreTrimmable|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=NysiisTest]|EXISTS], fld=[fullNysiis|EXISTS]} ,  , feasible : true } ],1.0248142708476047

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[write|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS], fld=[PAT_EE_IE|EXISTS]} ,  , feasible : true } ],1.026136779215445

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ],1.0249124153967837

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getLanguages|EXISTS]} ,  , feasible : true } ],1.0250151741929459

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ],1.0293506590089923

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncoding|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], fld=[DEFAULT_CHARSET_NAME|EXISTS]} ,  , feasible : true } ],1.0234254998780095

[ " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[readResults|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getDefaultBufferSize|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[COMPARATOR|EXISTS]} ,  , feasible : true } ],1.0241735064492865

[ " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS], mtd=[getRandomSalt|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ],1.0239050202292446

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ],1.0250076777874515

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ],1.0241468716589102

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[decodeText|EXISTS]} ,  , feasible : true } ],1.0227611729096244

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testEndMb|EXISTS]} ,  , feasible : true } ],1.0243542240166321

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ],1.024331494486608

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], fld=[SHA256_BLOCKSIZE|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS]} ,  , feasible : true } ],1.0243127849067624

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ],1.0225853358813115

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ],1.0220838703055746

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamMimeChuckSize|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], fld=[DIGITS_UPPER|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testExamples|EXISTS]} ,  , feasible : true } ],1.0201052060003284

[ " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorThrowable|EXISTS]} ,  , feasible : true } ],1.0212920036576618

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ],1.0208796318696018

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ],1.0201004427925258

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[lineLength|EXISTS]} ,  , feasible : true } ],1.0194076819317046

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[COMPARATOR|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[encodeQuotedPrintable|EXISTS]} ,  , feasible : true } ],1.021616170301783

[ " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS, TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[VOWELS|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS], fld=[serialVersionUID|EXISTS]} ,  , feasible : true } ],1.022221756004327

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[lineLength|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ],1.0218014510561695

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[decodeText|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_2|EXISTS]} ,  , feasible : true } ],1.024041082337632

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ],1.0248267878908552

[ " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[encodeText|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[DEFAULT_BUFFER_SIZE|EXISTS]} ,  , feasible : true } ],1.0266505704793543

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[unencodedBlockSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[mark|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], mtd=[testSetRuleTypeToRulesIllegalArgumentException|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS]} ,  , feasible : true } ],1.0264015766429941

[ " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], mtd=[testDoubleMetaphonePrimary|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.TgtClassEC]|NEW], src=[TypeDeclaration [name=Charsets]|EXISTS], fld=[UTF_16LE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.TgtClassEC]|NEW], src=[TypeDeclaration [name=Charsets]|EXISTS], mtd=[toCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS], fld=[CHARS_S|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[encodeHex|EXISTS]} ,  , feasible : true } ],1.0250555744611844

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeNull|EXISTS]} ,  , feasible : true } ],1.0287614242806848

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ],1.0237026578030533

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[write|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BITS|EXISTS]} ,  , feasible : true } ],1.0237480512821708

[ " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[markSupported|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringUtils]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testMarkSupported|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=CryptTest]|EXISTS], mtd=[testCryptWithBytes|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CryptTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ],1.0237177612923831

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ],1.0241920783845633

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testLocaleIndependence|EXISTS]} ,  , feasible : true } ],1.0293294412914091

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], fld=[SHA_384|EXISTS]} ,  , feasible : true } ],1.027267658908348

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeInteger|EXISTS]} ,  , feasible : true } ],1.024930694226452

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ],1.025637545518873

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CharEncoding]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=NysiisTest]|EXISTS], fld=[fullNysiis|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=NysiisTest]|EXISTS], mtd=[testRule5|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ],1.0271975249654732

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0275923213916822

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=NysiisTest]|EXISTS], fld=[fullNysiis|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=NysiisTest]|EXISTS], mtd=[encodeAll|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[decodeInteger|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PEM_CHUNK_SIZE|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncoding|EXISTS]} ,  , feasible : true } ],1.0283498418415056

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncoding|EXISTS]} ,  , feasible : true } ],1.0222570113069906

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ],1.0220226012808207

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], fld=[BYTES_PER_ENCODED_BLOCK|EXISTS]} ,  , feasible : true } ],1.0211024019177974

[ " RID ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[SPACE|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ],1.02238021392313

[ " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[encodeQuotedPrintable|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[DEFAULT_BUFFER_SIZE|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleT|EXISTS]} ,  , feasible : true } ],1.0238870340537274

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS, TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[VOWELS|EXISTS]} ,  , feasible : true } ],1.0241849367840006

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamMimeChuckSize|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ],1.0230476207067374

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=PhonemeList]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=BCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ],1.0231364559632126

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=BaseNCodecTest]|EXISTS], mtd=[testContainsAlphabetOrPad|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], mtd=[testDoubleMetaphonePrimary|EXISTS]} ,  , feasible : true } ],1.0229594698972733

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=Charsets]|EXISTS], fld=[UTF_16LE|EXISTS]} ,  , feasible : true } ],1.0231794797853406

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=Caverphone]|EXISTS], fld=[encoder|EXISTS]} ,  , feasible : true } ],1.025476562504033

[ " MM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS], src=[TypeDeclaration [name=CharsetsTest]|EXISTS], mtd=[testUtf16Le|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=Base32TestData]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=ColognePhonetic]|EXISTS], src=[TypeDeclaration [name=PhoneticEngine]|EXISTS], mtd=[encode|EXISTS]} ,  , feasible : true } ],1.0243275800616374

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[encodeBlanks|EXISTS]} ,  , feasible : true } ],1.0232331208663434

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[available|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], fld=[SHA256_PREFIX|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], mtd=[sha2Crypt|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[encodeQuotedPrintable|EXISTS]} ,  , feasible : true } ],1.0236900783393665

[ " RID ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[ROUNDS|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0223348997798227

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS, TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[VOWELS|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], src=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], fld=[testData|EXISTS]} ,  , feasible : true } ],1.021737992024649

[ " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MetaphoneTest]|EXISTS], mtd=[testSetMaxLengthWithTruncation|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.0222271314804199

[ " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[removeVowels|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncodings|EXISTS]} ,  , feasible : true } ],1.0238105504205994

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ],1.0222829049082935

[ " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[write|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=ColognePhonetic]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testEncodeBatch4|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[decodeText|EXISTS]} ,  , feasible : true } ],1.0251793822142508

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0252484809666804

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched|EXISTS]} ,  , feasible : true } ],1.026226810405934

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ],1.0267778443005304

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DigestUtils]|EXISTS], mtd=[digest|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[PRINTABLE_CHARS|EXISTS]} ,  , feasible : true } ],1.027575721484303

[ " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTN11111111|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=LanguageSet]|EXISTS], mtd=[from|EXISTS]} ,  , feasible : true } ],1.0242937590719707

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[getNextChar|EXISTS]} ,  , feasible : true } ],1.0248462491527885

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PEM_CHUNK_SIZE|EXISTS]} ,  , feasible : true } ],1.024876759234937

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeInteger|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamMimeChuckSize|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RulesApplication]|EXISTS], src=[TypeDeclaration [name=DigestUtils]|EXISTS], fld=[STREAM_BUFFER_LENGTH|EXISTS]} ,  , feasible : true } ],1.0256123827537176

[ " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ],1.0250153948317449

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=RulesApplication]|EXISTS], mtd=[getPhonemeBuilder|EXISTS]} ,  , feasible : true } ],1.0244174989876598

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTgetMappingCode]|NEW], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[getMappingCode|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Lang]|EXISTS], src=[TypeDeclaration [name=Base64TestData]|EXISTS], fld=[DECODED|EXISTS]} ,  , feasible : true } ],1.024979754760039

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32Test]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[concat|EXISTS]} ,  , feasible : true } ],1.0231337470196002

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], fld=[RADIX|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched|EXISTS]} ,  , feasible : true } ],1.0238866359512835

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ],1.0234181193389134

[ " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64URLSafe|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], fld=[PRIMARY_INDEX|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[SPACE|EXISTS]} ,  , feasible : true } ],1.0237417208599753

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS, TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[VOWELS|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeAsString|EXISTS]} ,  , feasible : true } ],1.0242025562093389

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Sha2Crypt]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ],1.0240376035985035

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ],1.0301424023095826

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ],1.028849112959065

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], src=[TypeDeclaration [name=Base64TestData]|EXISTS], fld=[CODEC_98_NPE|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], src=[TypeDeclaration [name=ResourceConstants]|EXISTS], fld=[CMT|EXISTS]} ,  , feasible : true } ],1.0300877863188813

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[COMPARATOR|EXISTS]} ,  , feasible : true } ],1.0310341015846864

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[available|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ],1.0294623072788278

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.0256302462917821

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=EncoderException]|EXISTS], fld=[serialVersionUID|EXISTS]} ,  , feasible : true } ],1.0250804387080277

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], mtd=[getLanguages|EXISTS]} ,  , feasible : true } ],1.0240559435917278

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ],1.0259945620682234

[ " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[leftToRightThenRightToLeftProcessing|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[encodeText|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Utils]|EXISTS], mtd=[digit16|EXISTS]} ,  , feasible : true } ],1.02720393699286

[ " MF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[differenceEncoded|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS]} ,  , feasible : true } ],1.0281255474763131

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ],1.0221665968716465

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ],1.021674939915301

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ],1.0213839543250065

[ " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testRfc4648Section10EncodeDecode|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[getInstance|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Phoneme]|EXISTS], src=[TypeDeclaration [name=Md5CryptTest]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[SEP|EXISTS]} ,  , feasible : true } ],1.0233710056320744

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base64Test]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[readResults|EXISTS]} ,  , feasible : true } ],1.0242833878763309

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=LanguageSet]|EXISTS], mtd=[from|EXISTS]} ,  , feasible : true } ],1.0236321024066777

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS, TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ],1.0235792735232805

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0223713664023308

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeInteger|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ],1.0239771697356328

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamMimeChuckSize|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0231194184633114

[ " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], mtd=[differenceEncoded|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[addLeft|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[removeVowels|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiBytes|EXISTS]} ,  , feasible : true } ],1.0225806681817244

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], fld=[RADIX|EXISTS]} ,  , feasible : true } ],1.0224314259250833

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[markSupported|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ],1.0230844385322042

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], fld=[ROUNDS_DEFAULT|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], mtd=[sha256Crypt|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DigestUtils]|EXISTS], src=[TypeDeclaration [name=CharEncoding]|EXISTS], fld=[UTF_16LE|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QCodecTest]|EXISTS], mtd=[constructString|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0212744750269858

[ " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[EOF|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], mtd=[testDoubleMetaphoneAlternate|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0217967901640026

[ " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS, TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[VOWELS|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[decodeSize|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameKLN1111111|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Crypt]|EXISTS], src=[TypeDeclaration [name=PhonemeList]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ],1.0202766083222676

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_4|EXISTS]} ,  , feasible : true } ],1.0210596557211773

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageGuessingTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], fld=[SHA512_PREFIX|EXISTS]} ,  , feasible : true } ],1.0233564899706016

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[setMaxCodeLen|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=RFC1522TestCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=HexTest]|EXISTS], src=[TypeDeclaration [name=BCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ],1.0251147089453223

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Base32Test]|EXISTS], mtd=[testBase32Chunked|EXISTS]} ,  , feasible : true } ],1.0253993769820078

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=LanguageSet]|EXISTS], mtd=[from|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[phonemeText|EXISTS]} ,  , feasible : true } ],1.0238610725480677

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[decodeText|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ],1.0219355193083923

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderExceptionTest]|EXISTS], fld=[MSG|EXISTS]} ,  , feasible : true } ],1.0227289216463435

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[encodeQuotedPrintable|EXISTS]} ,  , feasible : true } ],1.0221102019909236

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ],1.0249164718730261

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ],1.0249164718730261

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[BLANK|EXISTS]} ,  , feasible : true } ],1.0218893373548354

[ " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RID ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS], src=[TypeDeclaration [name=BaseNCodecTest]|EXISTS], mtd=[testContainsAlphabetOrPad|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], mtd=[testSha512CryptStrings|EXISTS]} ,  , feasible : true } ],1.021205138074571

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncoding|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ],1.0213725124336164

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RulesApplication]|EXISTS], src=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], mtd=[describeTo|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=DecoderExceptionTest]|EXISTS], mtd=[testConstructor0|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[decodeInteger|EXISTS]} ,  , feasible : true } ],1.0226032723452834

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ],1.0224086948144921

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BCodecTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeWithInvalidObject|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[BYTES_PER_ENCODED_BLOCK|EXISTS]} ,  , feasible : true } ],1.022419060510559

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncodingVariations|EXISTS]} ,  , feasible : true } ],1.0204659263578606

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[getNextChar|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_3|EXISTS]} ,  , feasible : true } ],1.0215842694284545

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeInteger|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamMimeChuckSize|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0220914412832

[ " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[leftToRightThenRightToLeftProcessing|EXISTS]} ,  , feasible : true } ],1.022735278054163

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[append|EXISTS]} ,  , feasible : true } ],1.0219359116009528

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS, TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[VOWELS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[EOF|EXISTS]} ,  , feasible : true } ],1.0200795286050859

[ " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], mtd=[setConcat|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Md5CryptTest]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], fld=[RADIX|EXISTS]} ,  , feasible : true } ],1.020624691502044

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ],1.0193281442665103

[ " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], mtd=[checkDoubleMetaphone|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BCodecTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithDoubleMetaphoneAndInvalidInput|EXISTS]} ,  , feasible : true } ],1.020212248386744

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], mtd=[testInvalidLangIllegalArgumentException|EXISTS]} ,  , feasible : true } ],1.0209050814502358

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS, TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[VOWELS|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testAccentRemoval_NullValue_ReturnNullSuccessfully|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CryptTest]|EXISTS], src=[TypeDeclaration [name=URLCodecTest]|EXISTS], fld=[SWISS_GERMAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ],1.0221781337333813

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RefinedSoundex]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], fld=[engine|EXISTS]} ,  , feasible : true } ],1.024899847342906

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ],1.0273376296807288

[ " RDI ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " RID ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=CharsetsTest]|EXISTS], mtd=[testIso8859_1|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=NysiisTest]|EXISTS], fld=[fullNysiis|EXISTS]} ,  , feasible : true } ],1.0292375813373018

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UtilsTest]|EXISTS], mtd=[testConstructor|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTtestEncodeBatch4]|NEW], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testEncodeBatch4|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], fld=[engine|EXISTS]} ,  , feasible : true } ],1.03092546215132

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[COMPARATOR|EXISTS]} ,  , feasible : true } ],1.029908158002159

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[decodeText|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[SPACE|EXISTS]} ,  , feasible : true } ],1.0296444860580172

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ],1.0289509407670747

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=CharsetsTest]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[length|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD_DEFAULT|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testEncodeIgnoreHyphens|EXISTS]} ,  , feasible : true } ],1.0290615599044823

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testCodeInteger4|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], mtd=[testAsciiEncodeNotEmpty2Letters|EXISTS]} ,  , feasible : true } ],1.0302169327767134

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ],1.026064315319023

[ " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS], mtd=[testUnixCryptWithHalfSalt|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS], mtd=[transcodeRemaining|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Lang]|EXISTS], src=[TypeDeclaration [name=RulesApplication]|EXISTS], fld=[finalRules|EXISTS]} ,  , feasible : true } ],1.0264879885298859

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ],1.0272845024204107

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Languages.TGTgetLanguages]|NEW], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], mtd=[getLanguages|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TGTtestEncodeDecodeNull]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeDecodeNull|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.RuleTest.TGTmatches]|NEW], src=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[write|EXISTS]} ,  , feasible : true } ],1.0266110572445042

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ],1.026407644545967

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32TestData]|EXISTS], src=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], mtd=[assertExpectedDecoderException|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ],1.026846149495886

[ " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[join|EXISTS]} ,  , feasible : true } ],1.0264443812277022

[ " RDI ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], mtd=[testCodec98NPE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Lang]|EXISTS], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[SEP|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=Base32TestData]|EXISTS], mtd=[bytesContain|EXISTS]} ,  , feasible : true } ],1.026232637224315

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], mtd=[getLanguages|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[COMPARATOR|EXISTS]} ,  , feasible : true } ],1.0253746398363195

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0250681579196215

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeInteger|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamMimeChuckSize|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[length|EXISTS]} ,  , feasible : true } ],1.0252034695719037

[ " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[write|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ],1.0247262156711179

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[decodeText|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], fld=[URL_SAFE_ENCODE_TABLE|EXISTS]} ,  , feasible : true } ],1.0256494551520654

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ],1.02409844108242

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[available|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[decodeTable|EXISTS]} ,  , feasible : true } ],1.0221383901683065

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], fld=[RADIX|EXISTS]} ,  , feasible : true } ],1.0207023852029486

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.020372917304842

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], mtd=[testSetNameTypeAsh|EXISTS]} ,  , feasible : true } ],1.0219121950483077

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=LanguageSet]|EXISTS], mtd=[from|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[decodeUrl|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Lang]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUsAscii|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[FIXTURE|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ],1.0217160838439006

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ],1.022940504628913

[ " RDI ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CharEncoding]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[decodeText|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64TestData]|EXISTS], fld=[ENCODED_64_CHARS_PER_LINE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64TestData]|EXISTS], mtd=[randomData|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[encodeUrl|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[BYTES_PER_ENCODED_BLOCK|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeAsString|EXISTS]} ,  , feasible : true } ],1.024439387815887

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[getRandomSalt|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[parsePhonemeExpr|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[SEP|EXISTS]} ,  , feasible : true } ],1.027830984173479

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[available|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[FIXTURE|EXISTS]} ,  , feasible : true } ],1.0281162228903935

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[isWhiteSpace|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], mtd=[map|EXISTS]} ,  , feasible : true } ],1.0268538249159258

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[available|EXISTS]} ,  , feasible : true } ],1.0261988128841697

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ],1.0295888730143197

[ " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.027678957320418

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ],1.0242156734098085

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ],1.0291290540438598

[ " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendPrimary|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=URLCodecTest]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[body|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[differenceEncoded|EXISTS]} ,  , feasible : true } ],1.0267951593284972

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeNull|EXISTS]} ,  , feasible : true } ],1.02346020709701

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ],1.0241395363112262

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[SEP|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ],1.0236497923829582

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=NysiisTest]|EXISTS], fld=[fullNysiis|EXISTS]} ,  , feasible : true } ],1.0221338762480097

[ " RDI ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Rule]|EXISTS], src=[TypeDeclaration [name=PhoneticEngine]|EXISTS], mtd=[isConcat|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64URLSafeString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ],1.024014968420904

[ " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.TgtClassEC]|NEW], src=[TypeDeclaration [name=Charsets]|EXISTS], fld=[UTF_8|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.TgtClassEC]|NEW], src=[TypeDeclaration [name=Charsets]|EXISTS], mtd=[toCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ],1.0257634887166929

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeInteger|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamMimeChuckSize|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhonemeList]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[nameType|EXISTS]} ,  , feasible : true } ],1.027702695320145

[ " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[EOF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CryptTest]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ],1.0306697986250968

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ],1.0300007670838243

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ],1.0254282080299457

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ],1.024494206648596

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Sha2Crypt]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], fld=[primary|EXISTS]} ,  , feasible : true } ],1.0245322285559917

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testMd5CryptNullData|EXISTS]} ,  , feasible : true } ],1.0216847942210239

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualWithMATCHES|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64Test]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], fld=[ALTERNATE_INDEX|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.023679511694605

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Phoneme]|EXISTS], src=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], mtd=[testNullInput|EXISTS]} ,  , feasible : true } ],1.023268800837865

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ],1.0238495102240721

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ],1.027086504964977

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base64Test]|EXISTS], src=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], mtd=[testInternalNoSuchAlgorithmException|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], fld=[alternate|EXISTS]} ,  , feasible : true } ],1.025495670525968

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=Base64TestData]|EXISTS], fld=[LAST_READ_KEY|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.0274128655417643

[ " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=Base32Test]|EXISTS], fld=[BASE32_TEST_CASES|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=Nysiis]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], fld=[SPACE|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamMimeChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamMimeChuckSize|EXISTS]} ,  , feasible : true } ],1.0273061100286396

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[available|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], mtd=[testB64T|EXISTS]} ,  , feasible : true } ],1.0263042572574843

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ],1.0257784387662667

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[PREFIX|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ],1.0262562304118739

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ],1.0261952113650181

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0230513401283368

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ],1.0225866550365952

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=CharsetsTest]|EXISTS], mtd=[testUtf16|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ],1.0229385799273174

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ],1.0232462372634812

[ " MF ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], fld=[COV2CHAR.|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[decodeText|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[parseRules|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0275266930715858

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.0288867064920373

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Utils]|EXISTS], src=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], mtd=[test|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeBadCharacterPos1|EXISTS]} ,  , feasible : true } ],1.0286469961979203

[ " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ],1.029381165644256

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ],1.0286477677933734

[ " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestGetBytesUncheckedNullInput]|NEW], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testGetBytesUncheckedNullInput|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhoneticEngine]|EXISTS], mtd=[getRuleType|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS], fld=[PAT_SCH|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256CryptBytes|EXISTS]} ,  , feasible : true } ],1.0311962446275647

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=Lang]|EXISTS], fld=[rules|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Base32Test]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS]} ,  , feasible : true } ],1.0321388627702377

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PEM_CHUNK_SIZE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ],1.0310193196786182

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ],1.0302229312885998

[ " MM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[encodeHexString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[getRContext|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TGTtestDecodeObjects]|NEW], src=[TypeDeclaration [name=QCodecTest]|EXISTS], mtd=[testDecodeObjects|EXISTS]} ,  , feasible : true } ],1.0269605460625457

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base64InputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS], fld=[FRONTV|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ],1.027496668147249

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=CryptTest]|EXISTS], mtd=[testCryptWithBytes|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[SEP|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DigestUtils]|EXISTS], mtd=[updateDigest|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_1|EXISTS]} ,  , feasible : true } ],1.0278278554356637

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeInteger|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamMimeChuckSize|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[maxCodeLen|EXISTS]} ,  , feasible : true } ],1.0282413706576348

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[PREFIX|EXISTS]} ,  , feasible : true } ],1.0272460986071557

[ " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[getMappingCode|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], mtd=[testDoubleMetaphonePrimary|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], src=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], fld=[LOOP|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ],1.0276022569762733

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CryptTest]|EXISTS], src=[TypeDeclaration [name=Base32]|EXISTS], fld=[BYTES_PER_UNENCODED_BLOCK|EXISTS]} ,  , feasible : true } ],1.028312654725223

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ],1.0286867655238106

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[length|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[encodedBlockSize|EXISTS]} ,  , feasible : true } ],1.025787519334808

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[write|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.0280173495577556

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ],1.0254107085396387

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Phoneme]|EXISTS], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[contains|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[BYTES_PER_ENCODED_BLOCK|EXISTS]} ,  , feasible : true } ],1.0254047866358467

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ],1.0237255380705508

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ],1.0254832950677648

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ],1.021875031550004

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.0228231573160391

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=ColognePhonetic]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Lang]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[setUp|EXISTS]} ,  , feasible : true } ],1.022021319574286

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[write|EXISTS]} ,  , feasible : true } ],1.0257385956648384

[ " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Charsets]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testCompare_Forenames_SEAN_JOHN_MatchExpected|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=RulesApplication]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[addLeft|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ],1.0255307005345211

[ " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], fld=[RADIX|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.TGTtoCharset]|NEW], src=[TypeDeclaration [name=Charsets]|EXISTS], mtd=[toCharset|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[isBase64|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD_DEFAULT|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[hasData|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=NysiisTest]|EXISTS], mtd=[testRule7|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ],1.0261917823033604

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamMimeChuckSize|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], src=[TypeDeclaration [name=Base64TestData]|EXISTS], mtd=[streamToBytes|EXISTS]} ,  , feasible : true } ],1.0260761351710992

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeInteger|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=NysiisTest]|EXISTS], fld=[fullNysiis|EXISTS]} ,  , feasible : true } ],1.0268764239597752

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0276720889161035

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeInteger|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestReadOutOfBounds]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTtestRule5]|NEW], src=[TypeDeclaration [name=NysiisTest]|EXISTS], mtd=[testRule5|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiChars|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=LanguageGuessingTest]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getLanguages|EXISTS]} ,  , feasible : true } ],1.0266650024635444

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS], fld=[serialVersionUID|EXISTS]} ,  , feasible : true } ],1.023587515094395

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], mtd=[test|EXISTS]} ,  , feasible : true } ],1.0231678967719358

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[mark|EXISTS]} ,  , feasible : true } ],1.0220873418574639

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ],1.023031399248671

[ " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[length|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], src=[TypeDeclaration [name=Base32OutputStream]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeNull|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BCodecTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toByteArray|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DigestUtils]|EXISTS], mtd=[getDigest|EXISTS]} ,  , feasible : true } ],1.0230144944491533

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base64InputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], fld=[DIGITS_UPPER|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[join|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ],1.0250086000040606

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS]} ,  , feasible : true } ],1.0239776842699606

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MetaphoneTest]|EXISTS], mtd=[testIsMetaphoneEqualJohn|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=Nysiis]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], fld=[SPACE|EXISTS]} ,  , feasible : true } ],1.0231366297662916

[ " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[BYTES_PER_ENCODED_BLOCK|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ],1.0241669347938196

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ],1.0234722849126934

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DecoderExceptionTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], fld=[COV2CHAR.|EXISTS]} ,  , feasible : true } ],1.02294450829227

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BCodecTest]|EXISTS], src=[TypeDeclaration [name=CharEncoding]|EXISTS], fld=[UTF_16|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS], fld=[maxCodeLen|EXISTS]} ,  , feasible : true } ],1.0243640889707992

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeWithInvalidObject|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[SPACE|EXISTS]} ,  , feasible : true } ],1.0267811846343609

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[getNextChar|EXISTS]} ,  , feasible : true } ],1.0250477235527726

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0244347857732707

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[encodeUrl|EXISTS]} ,  , feasible : true } ],1.0258186073646287

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], mtd=[test|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ],1.0315076214400247

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], fld=[BITS_PER_ENCODED_BYTE|EXISTS]} ,  , feasible : true } ],1.0256808265067487

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testMsSqlServer2|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[PREFIX|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=URLCodecTest]|EXISTS], src=[TypeDeclaration [name=DigestUtils]|EXISTS], mtd=[digest|EXISTS]} ,  , feasible : true } ],1.0237034148118551

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ],1.0261977865194831

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], mtd=[testDoubleMetaphoneAlternate|EXISTS]} ,  , feasible : true } ],1.0259431271248667

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ],1.0268604777161658

[ " RDI ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.DoubleMetaphone.TGTappendPrimary]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendPrimary|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_0|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=URLCodec]|EXISTS], fld=[WWW_FORM_URL|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[BYTES_PER_UNENCODED_BLOCK|EXISTS]} ,  , feasible : true } ],1.02685842403753

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[decodeText|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], fld=[FOUR|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], src=[TypeDeclaration [name=Utils]|EXISTS]} ,  , feasible : true } ],1.0280105494534408

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeInteger|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ],1.027577305279256

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamMimeChuckSize|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeBadCharacterPos1|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DecoderExceptionTest]|EXISTS], src=[TypeDeclaration [name=Utils]|EXISTS], mtd=[digit16|EXISTS]} ,  , feasible : true } ],1.0277391245267853

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[preprocess|EXISTS]} ,  , feasible : true } ],1.0240691910648183

[ " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=BCodec]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[decodeQuotedPrintable|EXISTS]} ,  , feasible : true } ],1.0242362769165225

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ],1.0227609758559106

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " IM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_4|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PEM_CHUNK_SIZE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0228363947872883

[ " RID ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[STRING_FIXTURE|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[mark|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Md5CryptTest]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ],1.021147387255802

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleZ|EXISTS]} ,  , feasible : true } ],1.0215609682903295

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ],1.0215891226000495

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.020526146588436

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ],1.0203610079144494

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testDecodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testSoundexUtilsConstructable|EXISTS]} ,  , feasible : true } ],1.0198811044327063

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], mtd=[testBase64EmptyOutputStreamMimeChunkSize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256CryptNullData|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], mtd=[testEncodeGna|EXISTS]} ,  , feasible : true } ],1.0212407002606783

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[resizeBuffer|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[CHUNK_SEPARATOR|EXISTS]} ,  , feasible : true } ],1.021157010821976

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.0216174493018166

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " IM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ],1.0213795805347687

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ],1.0212241954300603

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[ALL|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[parsePhoneme|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.026146820331498

[ " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[STRING_FIXTURE|EXISTS]} ,  , feasible : true } ],1.0247262859403299

[ " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=NysiisTest]|EXISTS], mtd=[testRule2|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[lineLength|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.026270009614532

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], mtd=[getInstance|EXISTS]} ,  , feasible : true } ],1.0245422012918577

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ],1.0247433971469055

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[length|EXISTS]} ,  , feasible : true } ],1.0205239896352925

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Md5Crypt]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=NysiisTest]|EXISTS], mtd=[testDan|EXISTS]} ,  , feasible : true } ],1.020792590022364

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_3|EXISTS]} ,  , feasible : true } ],1.021147349186697

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ],1.02180333816403

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeInteger|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamMimeChuckSize|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ],1.022829516436804

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructor0|EXISTS]} ,  , feasible : true } ],1.0230403123165202

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ],1.0215907453470272

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ],1.0219081370239522

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeInteger|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base32Test]|EXISTS], fld=[BASE32_TEST_CASES|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testIsCaverphoneEquals|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[resizeBuffer|EXISTS]} ,  , feasible : true } ],1.0225751135520786

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ],1.023212149172815

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CharEncoding]|EXISTS], src=[TypeDeclaration [name=Base32Test]|EXISTS], mtd=[testBase32HexSamples|EXISTS]} ,  , feasible : true } ],1.023080415106367

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ],1.0220748507343134

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamMimeChuckSize|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Rule]|EXISTS], src=[TypeDeclaration [name=Caverphone]|EXISTS], fld=[encoder|EXISTS]} ,  , feasible : true } ],1.023661372747748

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeInteger|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=Base32TestData]|EXISTS], fld=[STRING_FIXTURE|EXISTS]} ,  , feasible : true } ],1.0225348489519641

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TGTtestConstructor]|NEW], src=[TypeDeclaration [name=UtilsTest]|EXISTS], mtd=[testConstructor|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[EOF|EXISTS]} ,  , feasible : true } ],1.0226873883698135

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncodingVariations|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTtestAabjoe]|NEW], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testAabjoe|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[SEP|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0236023504775618

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[unencodedBlockSize|EXISTS]} ,  , feasible : true } ],1.0211377884728272

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RefinedSoundex]|EXISTS], src=[TypeDeclaration [name=Charsets]|EXISTS], mtd=[toCharset|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=EncoderException]|EXISTS], fld=[serialVersionUID|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], src=[TypeDeclaration [name=LangRule]|EXISTS], fld=[acceptOnMatch|EXISTS]} ,  , feasible : true } ],1.0209406228376472

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ],1.021488362134252

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Caverphone]|EXISTS], fld=[encoder|EXISTS]} ,  , feasible : true } ],1.023105813891492

[ " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[write|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=NysiisTest]|EXISTS], fld=[fullNysiis|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=NysiisTest]|EXISTS], mtd=[testRule4Dot1|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0273429385771358

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], fld=[SCZ|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ],1.0239514810271533

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MetaphoneTest]|EXISTS], mtd=[testDiscardOfSilentHAfterG|EXISTS]} ,  , feasible : true } ],1.0233067517482137

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ],1.0277693297787016

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ],1.024116468147236

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], fld=[TDX|EXISTS]} ,  , feasible : true } ],1.0238386890779618

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=PhoneticEngine]|EXISTS], mtd=[getLang|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[encodeBlanks|EXISTS]} ,  , feasible : true } ],1.0232725744069504

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[isDoubleMetaphoneEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched|EXISTS]} ,  , feasible : true } ],1.0216737422685902

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], mtd=[testLongestEnglishSurname|EXISTS]} ,  , feasible : true } ],1.0229303694427445

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[mark|EXISTS]} ,  , feasible : true } ],1.0225258063395692

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[encodeUrl|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Utils]|EXISTS], mtd=[digit16|EXISTS]} ,  , feasible : true } ],1.0245699769675114

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Utils]|EXISTS], src=[TypeDeclaration [name=URLCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ],1.0245250499793979

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ],1.024651755400921

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CryptTest]|EXISTS], mtd=[testCryptWithEmptySalt|EXISTS]} ,  , feasible : true } ],1.0252003485167298

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ],1.0252255929106089

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0260715809388998

[ " EM ":{ {src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS], mtd=[testSolrSEPHARDIC|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], fld=[TEST_DATA|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], mtd=[testDoubleMetaphoneAlternate|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[decodeQuotedPrintable|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTread]|NEW], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ],1.0267468405049858

[ " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=UtilsTest]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS], fld=[B64T|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ],1.0293664462742051

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=NysiisTest]|EXISTS], fld=[fullNysiis|EXISTS]} ,  , feasible : true } ],1.0281883094169875

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ],1.0281256580356317

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], mtd=[soundex|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], mtd=[getNameType|EXISTS]} ,  , feasible : true } ],1.0285187746458548

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], fld=[PRIMARY_INDEX|EXISTS]} ,  , feasible : true } ],1.0270254675465236

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base64InputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS], src=[TypeDeclaration [name=Caverphone]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], fld=[RADIX|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomWords|EXISTS]} ,  , feasible : true } ],1.0275349557161313

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BITS|EXISTS]} ,  , feasible : true } ],1.0279294092160989

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[colognePhonetic|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ],1.0320669501339248

[ " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[SEP|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=PhonemeList]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ],1.0327840048437398

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ],1.0320826607830331

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=DigestUtils]|EXISTS], mtd=[md5|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ],1.031927058012835

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CryptTest]|EXISTS], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[HASH_INCLUDE|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], src=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.03303169662581

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], mtd=[testBase64EmptyOutputStream|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[PRINTABLE_CHARS|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ],1.031356037938857

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[encodeText|EXISTS]} ,  , feasible : true } ],1.0264186309263916

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=PhonemeList]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ],1.027302684022639

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[BYTES_PER_UNENCODED_BLOCK|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[decodeText|EXISTS]} ,  , feasible : true } ],1.0277832528570217

[ " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[instance|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTnewStringUtf16Be]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[newStringUtf16Be|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=QCodecTest]|EXISTS], mtd=[testNullInput|EXISTS]} ,  , feasible : true } ],1.028046491274623

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ],1.0294151845095483

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testDecodeByteArray|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], fld=[testData|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], fld=[SPTRANS.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0266149025566265

[ " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=QCodecTest]|EXISTS], src=[TypeDeclaration [name=BinaryEncoderAbstractTest]|EXISTS], mtd=[makeEncoder|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testSpecificationExamples|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestSha256LargetThanBlocksize]|NEW], src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ],1.0272598607544488

[ " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], src=[TypeDeclaration [name=Utils]|EXISTS], mtd=[digit16|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ],1.0224612647648672

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodecTest]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], fld=[EOF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testGetEncoding_HARPER_HRPR|EXISTS]} ,  , feasible : true } ],1.0236113253044834

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], src=[TypeDeclaration [name=CharsetsTest]|EXISTS], mtd=[testUtf16Be|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testSoundexUtilsConstructable|EXISTS]} ,  , feasible : true } ],1.0235211794674735

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ],1.0245170317473988

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ],1.0245170317473988

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=URLCodecTest]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[encodeHexString|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[write|EXISTS]} ,  , feasible : true } ],1.0243516093576952

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.0234312786239124

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0238135934698094

[ " MF ":{ {tgt=[TypeDeclaration [name=Nysiis]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testCaverphoneRevisitedCommonCodeAT1111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testMd5CryptStrings|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], mtd=[testBase64EmptyOutputStreamPemChunkSize|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], fld=[SZ|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[preprocess|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0219831553579446

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[SWISS_GERMAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testDefaultEncoding|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0227785850092086

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=PhonemeList]|EXISTS]} ,  , feasible : true } ],1.0235324466926816

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[encodeQuotedPrintable|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ],1.0238285755387784

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base64InputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS], src=[TypeDeclaration [name=Caverphone]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], fld=[DEFAULT_CHARSET|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64URLSafeString|EXISTS]} ,  , feasible : true } ],1.0267550012036544

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32TestData]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testAaclan|EXISTS]} ,  , feasible : true } ],1.0275110384287927

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[metaphone|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[PRINTABLE_CHARS|EXISTS]} ,  , feasible : true } ],1.0302695903652694

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ],1.0286724858802614

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[encodeText|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RulesApplication]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE|EXISTS]} ,  , feasible : true } ],1.0304230892262447

[ " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTN11111111|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingOWithDiaeresis|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], fld=[engine|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_6|EXISTS]} ,  , feasible : true } ],1.0287530602845967

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], fld=[AHOUKQX|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_1|EXISTS]} ,  , feasible : true } ],1.0298509937053901

[ " MM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[removeDoubleConsonants|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTnewStringIso8859_1]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[newStringIso8859_1|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], fld=[URL_SAFE_ENCODE_TABLE|EXISTS]} ,  , feasible : true } ],1.026951667374059

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64URLSafe|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[getNextChar|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[encodeText|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ],1.0266912432489348

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ],1.027289462455981

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], mtd=[addRight|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ],1.0297901261535054

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], fld=[rules|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[instance|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testGetEncoding_NoSpace_to_Nothing|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], fld=[testData|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], mtd=[testSha512|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], mtd=[testSha1UpdateWithByteArray|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.DoubleMetaphone.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], fld=[maxLength|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.DoubleMetaphone.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.032240034360977

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64String|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=HexTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualWithMATCHES|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.032851794892263

[ " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testSpecificationExamples|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[EOF|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=RulesApplication]|EXISTS], mtd=[isFound|EXISTS]} ,  , feasible : true } ],1.0312594012022662

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[phonemeText|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[apr1Crypt|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=URLCodecTest]|EXISTS], mtd=[testEncodeUrlWithNullBitSet|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], fld=[SZ|EXISTS]} ,  , feasible : true } ],1.0330641514753718

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Md5Crypt]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], fld=[SALT_PATTERN|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=RefinedSoundexTest]|EXISTS]} ,  , feasible : true } ],1.0279941757492805

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ],1.0280887290915302

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], src=[TypeDeclaration [name=DecoderExceptionTest]|EXISTS], fld=[MSG|EXISTS]} ,  , feasible : true } ],1.025980535337747

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0267684742154108

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], fld=[SHA_384|EXISTS]} ,  , feasible : true } ],1.026859967207427

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeInteger|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamMimeChuckSize|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ],1.025786531424992

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ],1.0272049989255698

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodecTest]|EXISTS], src=[TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Utils]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ],1.0274249394494386

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base64InputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS], src=[TypeDeclaration [name=Caverphone]|EXISTS]} ,  , feasible : true } ],1.0286002379174304

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[UNDERSCORE|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=BCodec]|EXISTS]} ,  , feasible : true } ],1.0282098553562533

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[encodeHex|EXISTS]} ,  , feasible : true } ],1.0264551116026088

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base64InputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS], src=[TypeDeclaration [name=Caverphone]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ],1.0265627536136475

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], mtd=[getNameType|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], fld=[DEFAULT_CHARSET_NAME|EXISTS]} ,  , feasible : true } ],1.0288528341538328

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ],1.0295660225149406

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=EncoderException]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], mtd=[getLanguages|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[HASH_INCLUDE|EXISTS]} ,  , feasible : true } ],1.0271753355233133

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=Context]|EXISTS], fld=[ibitWorkArea|EXISTS]} ,  , feasible : true } ],1.0268799453560709

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], fld=[STANDARD_ENCODE_TABLE|EXISTS]} ,  , feasible : true } ],1.0260464595854921

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], fld=[DIGITS_LOWER|EXISTS]} ,  , feasible : true } ],1.0258948092168745

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING_STRING|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeAsString|EXISTS]} ,  , feasible : true } ],1.025442012533546

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ],1.0234639282743545

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32Test]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ],1.025939695584779

[ " RID ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ],1.026667041348342

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=BaseNCodecTest]|EXISTS], mtd=[testIsInAlphabetByteArrayBoolean|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[DEFAULT_BUFFER_SIZE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], mtd=[compare|EXISTS]} ,  , feasible : true } ],1.0268471064965856

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testMd5CryptWithEmptySalt|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[write|EXISTS]} ,  , feasible : true } ],1.0248407240443178

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneEqualExtended1|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd2]|NEW], src=[TypeDeclaration [name=DigestUtils]|EXISTS], mtd=[md2|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Utils]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], mtd=[testSha2CryptRounds|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[getEncoding|EXISTS]} ,  , feasible : true } ],1.022539595164124

[ " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=PhonemeList]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiBytes|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=CryptTest]|EXISTS], mtd=[testCryptWithBytes|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS]} ,  , feasible : true } ],1.02322007713365

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[append|EXISTS]} ,  , feasible : true } ],1.0230719429346689

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testMd5CryptNullData|EXISTS]} ,  , feasible : true } ],1.0233628314481311

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamMimeChuckSize|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.025303490554608

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeInteger|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DigestUtils]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ],1.0269580429576737

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeInteger|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32TestData]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], fld=[SIX|EXISTS]} ,  , feasible : true } ],1.0260539051905064

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamMimeChuckSize|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=ResourceConstants]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], mtd=[getMaxLength|EXISTS]} ,  , feasible : true } ],1.0253296439012929

[ " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=DigestUtils]|EXISTS], mtd=[md2Hex|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[EOF|EXISTS]} ,  , feasible : true } ],1.0241475017995125

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha2Crypt]|EXISTS], src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ],1.0237034869615027

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], fld=[SHA256_BLOCKSIZE|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[getNextChar|EXISTS]} ,  , feasible : true } ],1.0237395107090292

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[readResults|EXISTS]} ,  , feasible : true } ],1.0239513295424418

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base64InputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS], src=[TypeDeclaration [name=Caverphone]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ],1.025055106188659

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=BaseNCodecTest]|EXISTS], fld=[codec|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringUtils]|EXISTS], src=[TypeDeclaration [name=LanguageGuessingTest]|EXISTS], fld=[EXACT|EXISTS]} ,  , feasible : true } ],1.0264475298907216

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[toIntegerBytes|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_R_N_M_B_H_F_V_W_SPACE|EXISTS]} ,  , feasible : true } ],1.0251983279992114

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ],1.024372358823988

[ " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[length|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS], fld=[VARSON|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ],1.0231526005452978

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.023368060729874

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[ANY_LANGUAGE|EXISTS]} ,  , feasible : true } ],1.0232370636354393

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[encodeTable|EXISTS]} ,  , feasible : true } ],1.0230414591723374

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], fld=[FIVE|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[SEP|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ],1.023546757630331

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CharEncoding]|EXISTS], src=[TypeDeclaration [name=LanguageGuessingTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ],1.0230283384859087

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[decodeBase64|EXISTS]} ,  , feasible : true } ],1.0243765169688244

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], src=[TypeDeclaration [name=Encoder]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.TgtClassEC]|NEW], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[MSG|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.TgtClassEC]|NEW], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorStringThrowable|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone2Test]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ],1.0293554146169321

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ],1.0229263199771281

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Md5CryptTest]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ],1.0245800225349302

[ " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], mtd=[testStaticEncodeChunked|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[SEP|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32InputStreamByteByByte|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0232758670115019

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], src=[TypeDeclaration [name=Lang]|EXISTS], fld=[rules|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DecoderExceptionTest]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[MD5_PREFIX|EXISTS]} ,  , feasible : true } ],1.0224552680568917

[ " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ],1.0216955086879809

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], src=[TypeDeclaration [name=Caverphone]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[COMPARATOR|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], mtd=[testEncodeGna|EXISTS]} ,  , feasible : true } ],1.0223553996904404

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeBase64Chunked|EXISTS]} ,  , feasible : true } ],1.0226786703251411

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DecoderExceptionTest]|EXISTS], src=[TypeDeclaration [name=Base32]|EXISTS], fld=[encodeSize|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=RFC1522TestCodec]|EXISTS]} ,  , feasible : true } ],1.0223020535048428

[ " RDI ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS], mtd=[getRandomSalt|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.TgtClassEC]|NEW], src=[TypeDeclaration [name=DecoderExceptionTest]|EXISTS], fld=[MSG|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.TgtClassEC]|NEW], src=[TypeDeclaration [name=DecoderExceptionTest]|EXISTS], mtd=[testConstructor0|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], fld=[CKQ|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ],1.0235784932266514

[ " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.TGTtestUtf16]|NEW], src=[TypeDeclaration [name=CharsetsTest]|EXISTS], mtd=[testUtf16|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=StringUtils]|EXISTS], src=[TypeDeclaration [name=DigestUtils]|EXISTS], mtd=[sha256|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTgetSoundexMapping]|NEW], src=[TypeDeclaration [name=Soundex]|EXISTS], mtd=[getSoundexMapping|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], mtd=[testInvalidLangIllegalStateException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0248127858237759

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16LE|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeInteger|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamMimeChuckSize|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DigestUtils]|EXISTS], src=[TypeDeclaration [name=Base64TestData]|EXISTS], fld=[CODEC_98_NPE_DECODED|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=ResourceConstants]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[cleanInput|EXISTS]} ,  , feasible : true } ],1.0241499149384914

[ " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[isWhiteSpace|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[mark|EXISTS]} ,  , feasible : true } ],1.024324442236902

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[length|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testToAsciiString|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ],1.0211904357366002

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha2Crypt]|EXISTS], src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], fld=[DIGITS_LOWER|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MetaphoneTest]|EXISTS]} ,  , feasible : true } ],1.0200420725725072

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=HexTest]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ],1.0199675878642083

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS], src=[TypeDeclaration [name=Caverphone]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[phonemeText|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[isWhiteSpace|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[colognePhonetic|EXISTS]} ,  , feasible : true } ],1.0209814721414914

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RID ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[DEFAULT_BUFFER_RESIZE_FACTOR|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTsha512Crypt]|NEW], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], mtd=[sha512Crypt|EXISTS]} ,  , feasible : true } ],1.0183863792267311

[ " PUM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ],1.0198049926578938

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base64InputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS], src=[TypeDeclaration [name=Caverphone]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testMd5CryptLongInput|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=EncoderException]|EXISTS], fld=[serialVersionUID|EXISTS]} ,  , feasible : true } ],1.022215176713145

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[encodeSize|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testAaclan|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Md5Crypt]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[CHUNKED_STRINGS|EXISTS]} ,  , feasible : true } ],1.021091967875549

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageGuessingTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BCodecTest]|EXISTS], src=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], fld=[LOOP|EXISTS]} ,  , feasible : true } ],1.0220703468059658

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0221802422999637

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS, TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=PhonemeList]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ],1.0229392345141144

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], mtd=[getStringEncoder|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Charsets]|EXISTS], mtd=[toCharset|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[PRINTABLE_CHARS|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ],1.0247389099947413

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ],1.0250678732080365

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Metaphone]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], mtd=[testStaticEncode|EXISTS]} ,  , feasible : true } ],1.0297853288605134

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[SEP|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32Test]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[decodeText|EXISTS]} ,  , feasible : true } ],1.0310082400597451

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[VOWELS|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleS|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MetaphoneTest]|EXISTS]} ,  , feasible : true } ],1.027294895774401

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], mtd=[test|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=Base64TestData]|EXISTS], mtd=[randomData|EXISTS]} ,  , feasible : true } ],1.0267893431729318

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CryptTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[SILENT_START|EXISTS]} ,  , feasible : true } ],1.025602323827249

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=RulesApplication]|EXISTS], mtd=[getPhonemeBuilder|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=Context]|EXISTS], fld=[pos|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncodings|EXISTS]} ,  , feasible : true } ],1.0227095586896247

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Md5Crypt]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testDecodeWithNullArray|EXISTS]} ,  , feasible : true } ],1.0205772142981628

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ],1.0247606815531995

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Sha2Crypt]|EXISTS], mtd=[sha512Crypt|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.BaseNCodec.TgtClassEC]|NEW], src=[TypeDeclaration [name=Context]|EXISTS], fld=[lbitWorkArea|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.BaseNCodec.TgtClassEC]|NEW], src=[TypeDeclaration [name=Context]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.PhoneticEngine.TgtClassEC]|NEW], src=[TypeDeclaration [name=RulesApplication]|EXISTS], fld=[found|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.PhoneticEngine.TgtClassEC]|NEW], src=[TypeDeclaration [name=RulesApplication]|EXISTS], mtd=[isFound|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.TGTtestComparatorWithSoundex]|NEW], src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ],1.0257432625859366

[ " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=MetaphoneTest]|EXISTS], mtd=[testTranslateOfSCHAndCH|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.PhoneticEngine.TGTinvoke]|NEW], src=[TypeDeclaration [name=RulesApplication]|EXISTS], mtd=[invoke|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], mtd=[testBase64EmptyOutputStream|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=RulesApplication]|EXISTS], fld=[finalRules|EXISTS]} ,  , feasible : true } ],1.0267811866403878

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.026500584829126

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeInteger|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamMimeChuckSize|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], fld=[MASK_6BITS|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Hex]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ],1.0254415992888206

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha2Crypt]|EXISTS], src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS]} ,  , feasible : true } ],1.021102800213598

[ " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS, TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[SEP|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=BinaryEncoderAbstractTest]|EXISTS], mtd=[testEncodeNull|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ],1.0210363339117294

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=BCodec]|EXISTS]} ,  , feasible : true } ],1.0223601767459396

[ " EM ":{ {src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[apr1Crypt|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], fld=[RADIX|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeNull|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecTest]|EXISTS], fld=[codec|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BaseNCodecTest]|EXISTS], mtd=[testIsInAlphabetString|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ],1.0234766370965496

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base64InputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamMimeChuckSize|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS, TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[setMaxCodeLen|EXISTS]} ,  , feasible : true } ],1.0250432686864765

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeInteger|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS], src=[TypeDeclaration [name=Caverphone]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Utils]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[STRINGS|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DecoderExceptionTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ],1.024970890513045

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[PRINTABLE_CHARS|EXISTS]} ,  , feasible : true } ],1.025258133868777

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[SEP|EXISTS]} ,  , feasible : true } ],1.0239301558868896

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ],1.0231098716019924

[ " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=LanguageGuessingTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncodingVariations|EXISTS]} ,  , feasible : true } ],1.0231268564200928

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], src=[TypeDeclaration [name=Base32]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[ALL|EXISTS]} ,  , feasible : true } ],1.022134000736376

[ " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[US_ENGLISH|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testAabjoe|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], mtd=[testMd2HexLength|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTdifferenceEncoded]|NEW], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[differenceEncoded|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=LanguageGuessingTest]|EXISTS], fld=[exactness|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], mtd=[getNameType|EXISTS]} ,  , feasible : true } ],1.0212165184421143

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=BCodec]|EXISTS]} ,  , feasible : true } ],1.0215695634925503

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getDefaultBufferSize|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[encodeSize|EXISTS]} ,  , feasible : true } ],1.0213486666064016

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PEM_CHUNK_SIZE|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testLocaleIndependence|EXISTS]} ,  , feasible : true } ],1.023199456685474

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ],1.022545362851294

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=URLCodecTest]|EXISTS], mtd=[testDecodeObjects|EXISTS]} ,  , feasible : true } ],1.0255709884360127

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=LanguageGuessingTest]|EXISTS], fld=[name|EXISTS]} ,  , feasible : true } ],1.0224481710449596

[ " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], mtd=[utf8|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Encoder]|EXISTS], src=[TypeDeclaration [name=Nysiis]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=MetaphoneTest]|EXISTS], mtd=[testIsMetaphoneEqualPeter|EXISTS]} ,  , feasible : true } ],1.0217558464865375

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ],1.0244775904559122

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[ensureBufferSize|EXISTS]} ,  , feasible : true } ],1.0197964556469408

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[readResults|EXISTS]} ,  , feasible : true } ],1.019726409824521

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Base64Codec13Test]|EXISTS], fld=[BYTES|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ],1.0204103595174538

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=ResourceConstants]|EXISTS], src=[TypeDeclaration [name=DigestUtils]|EXISTS], fld=[STREAM_BUFFER_LENGTH|EXISTS]} ,  , feasible : true } ],1.0206180601314028

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base32TestData]|EXISTS], mtd=[bytesContain|EXISTS]} ,  , feasible : true } ],1.019865028936062

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtest]|NEW], src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[test|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Md5CryptTest]|EXISTS], src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], fld=[AHKLOQRUX|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], fld=[ALTERNATE_INDEX|EXISTS]} ,  , feasible : true } ],1.0206760464465534

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeInteger|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamMimeChuckSize|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[encodeBlanks|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], mtd=[testDoubleMetaphoneAlternate|EXISTS]} ,  , feasible : true } ],1.018728339623637

[ " MF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[available|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UtilsTest]|EXISTS], mtd=[testConstructor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testWikipediaExamples|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.0189898593564486

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[isPreviousChar|EXISTS]} ,  , feasible : true } ],1.018571024384901

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Caverphone]|EXISTS]} ,  , feasible : true } ],1.0236549558945631

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[toDigit|EXISTS]} ,  , feasible : true } ],1.0205202117748446

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ],1.0222898737215538

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base64InputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=UtilsTest]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS], fld=[VOWELS|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], fld=[LOOP|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], mtd=[test|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], fld=[EOF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0232650946942432

[ " MF ":{ {tgt=[TypeDeclaration [name=Crypt]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], fld=[EOF|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[encodeUrl|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[encodeHex|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS], mtd=[testSolrASHKENAZI|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTtestCaverphoneRevisitedCommonCodeAT1111]|NEW], src=[TypeDeclaration [name=Caverphone1Test]|EXISTS], mtd=[testCaverphoneRevisitedCommonCodeAT1111|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_6|EXISTS]} ,  , feasible : true } ],1.0267057875275138

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ],1.0236244411943907

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.0236244411943907

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Rule]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[maxCodeLen|EXISTS]} ,  , feasible : true } ],1.022023867789625

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BCodecTest]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=PhonemeList]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS], mtd=[testByChunk|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncodings|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS], fld=[FRONTV|EXISTS]} ,  , feasible : true } ],1.023013675957888

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[encodeText|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], fld=[WWW_FORM_URL|EXISTS]} ,  , feasible : true } ],1.0234060224577675

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ],1.0223136932728358

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[chunkSeparatorLength|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ],1.022570334596621

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LanguageGuessingTest]|EXISTS], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[STRING_FIXTURE|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=NysiisTest]|EXISTS], mtd=[testSnat|EXISTS]} ,  , feasible : true } ],1.0209907994643737

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], mtd=[getLanguages|EXISTS]} ,  , feasible : true } ],1.0214337333226582

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CryptTest]|EXISTS], src=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ],1.0259150708052864

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Md5Crypt]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ],1.021767456862866

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DigestUtils]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ],1.0212137237956938

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=Context]|EXISTS], fld=[eof|EXISTS]} ,  , feasible : true } ],1.0213815502021713

[ " MM ":{ {tgt=[TypeDeclaration [name=URLCodecTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorStringThrowable|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CharEncoding]|EXISTS], src=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], mtd=[testSha256|EXISTS]} ,  , feasible : true } ],1.0224543320522803

[ " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Caverphone2Test]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[isMetaphoneEqual|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=NysiisTest]|EXISTS], fld=[fullNysiis|EXISTS]} ,  , feasible : true } ],1.0223628794082271

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], fld=[EOF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[MD5_PREFIX|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[apr1Crypt|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Lang]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=PhoneticEngine]|EXISTS], mtd=[applyFinalRules|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTtestVariationsMeyer]|NEW], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMeyer|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[PRINTABLE_CHARS|EXISTS]} ,  , feasible : true } ],1.0238819679779796

[ " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=Charsets]|EXISTS], mtd=[toCharset|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[decodeText|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[EMPTY_BYTE_ARRAY|EXISTS]} ,  , feasible : true } ],1.0238781136394144

[ " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=QCodecTest]|EXISTS], src=[TypeDeclaration [name=LanguageGuessingTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testLocaleIndependence|EXISTS]} ,  , feasible : true } ],1.0268923199445563

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0267958008389968

[ " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeInteger|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamMimeChuckSize|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Charsets]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], mtd=[testSha512CryptNullData|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[mark|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CharEncoding]|EXISTS], src=[TypeDeclaration [name=CharsetsTest]|EXISTS], mtd=[testToCharset|EXISTS]} ,  , feasible : true } ],1.0267190805005069

[ " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncodings|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PAD_DEFAULT|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[clean|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], fld=[WWW_FORM_URL|EXISTS]} ,  , feasible : true } ],1.0256589282911586

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testGetEncoding_One_Letter_to_Nothing|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toByteArray|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], src=[TypeDeclaration [name=RuleTest]|EXISTS], mtd=[testPhonemeComparedToLaterIsNegative|EXISTS]} ,  , feasible : true } ],1.0266426872531955

[ " RDI ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DecoderExceptionTest]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[available|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=NysiisTest]|EXISTS], mtd=[testRule1|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[join|EXISTS]} ,  , feasible : true } ],1.0265292512012612

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS], src=[TypeDeclaration [name=Caverphone]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[encodeBlanks|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getLanguages|EXISTS]} ,  , feasible : true } ],1.0242845363741697

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testAabjoe|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ],1.0230596902542886

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.025836828719657

[ " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RulesApplication]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS], mtd=[testUnixCryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiChars|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=Lang]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[encodeHex|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], fld=[ENCODED_B64|EXISTS]} ,  , feasible : true } ],1.0253870594875252

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CharEncoding]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], mtd=[testB64from24bit|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Lang]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], fld=[DOUBLE_CONSONANT|EXISTS]} ,  , feasible : true } ],1.0257374294177746

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testAccentRemovalNormalString_NoChange|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ],1.0275360695746667

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[write|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[UNDERSCORE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[setEncodeBlanks|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ],1.0268132987610614

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.0273803569335478

[ " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=LangRule]|EXISTS], src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ],1.030574064363179

[ " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " RID ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], mtd=[getLanguages|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.TgtClassEC]|NEW], src=[TypeDeclaration [name=Charsets]|EXISTS], fld=[ISO_8859_1|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.TgtClassEC]|NEW], src=[TypeDeclaration [name=Charsets]|EXISTS], mtd=[toCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0315287095668644

[ " MM ":{ {tgt=[TypeDeclaration [name=URLCodecTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorStringThrowable|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MIME_CHUNK_SIZE|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=DigestUtils]|EXISTS], fld=[STREAM_BUFFER_LENGTH|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TgtClassEC]|NEW], src=[TypeDeclaration [name=DigestUtils]|EXISTS], mtd=[getSha1Digest|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ],1.0331327659011547

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[getRandom|EXISTS]} ,  , feasible : true } ],1.032633760073592

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[write|EXISTS]} ,  , feasible : true } ],1.0371146278092218

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0320662300754753

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], fld=[countdown|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[decodeUrl|EXISTS]} ,  , feasible : true } ],1.0300584798610866

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=CharEncoding]|EXISTS], src=[TypeDeclaration [name=BaseNCodecTest]|EXISTS], fld=[codec|EXISTS]} ,  , feasible : true } ],1.0281938047138421

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], mtd=[test|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ],1.0273393853964599

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], src=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], mtd=[testShaUpdateWithString|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhonemeList]|EXISTS], src=[TypeDeclaration [name=Charsets]|EXISTS], fld=[UTF_16BE|EXISTS]} ,  , feasible : true } ],1.0284010295651298

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[PREFIX|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ],1.0287225746811273

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=SoundexTest]|EXISTS], mtd=[testUsMappingEWithAcute|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0335957732723988

[ " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=NysiisTest]|EXISTS], fld=[fullNysiis|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[removeNext|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], fld=[SPACE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[removeVowels|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=MetaphoneTest]|EXISTS], mtd=[testTIOAndTIAToX|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BaseNCodecTest]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[PRINTABLE_CHARS|EXISTS]} ,  , feasible : true } ],1.031053538593877

[ " RID ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncoding|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[MASK_8BITS|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Caverphone2Test]|EXISTS], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testRead0|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[encodeBlanks|EXISTS]} ,  , feasible : true } ],1.0310646134958834

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[UNDERSCORE|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[pattern|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS]} ,  , feasible : true } ],1.031022337805694

[ " EM ":{ {src=[TypeDeclaration [name=QCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectNull|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], src=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Utils]|EXISTS], mtd=[digit16|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[newStringUsAscii|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[assertDecodeObject|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[SEP|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[decodeText|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0319703594588538

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base64InputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS], src=[TypeDeclaration [name=Caverphone]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[lineLength|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ],1.0301580936213763

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RID ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], fld=[WWW_FORM_URL|EXISTS]} ,  , feasible : true } ],1.028960797336114

[ " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[PAD|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testEdgeCases|EXISTS]} ,  , feasible : true } ],1.0305009464295043

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], src=[TypeDeclaration [name=QCodecTest]|EXISTS], mtd=[constructString|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Rule]|EXISTS], src=[TypeDeclaration [name=CharEncoding]|EXISTS], fld=[US_ASCII|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], fld=[lineSeparator|EXISTS]} ,  , feasible : true } ],1.0289820469407305

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], src=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ],1.0272272305678318

[ " RID ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[PREFIX|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorThrowable|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=LangRule]|EXISTS], src=[TypeDeclaration [name=PhoneticEnginePerformanceTest]|EXISTS], fld=[LOOP|EXISTS]} ,  , feasible : true } ],1.0285363279509405

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ],1.0286718940768356

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[decodeText|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[getNextPos|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ],1.0262708110159988

[ " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[SPACE|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS], mtd=[testWriteOutOfBounds|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[decodeTable|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], fld=[STRING_FIXTURE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64OutputStreamTest]|EXISTS], mtd=[testWriteOutOfBounds|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS], src=[TypeDeclaration [name=Md5CryptTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], fld=[RADIX|EXISTS]} ,  , feasible : true } ],1.0269237086890532

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], mtd=[assertNotEmpty|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[ANY_LANGUAGE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Languages]|EXISTS], mtd=[getLanguages|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0267954674409991

[ " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=Metaphone]|EXISTS], fld=[FRONTV|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[regionMatch|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], src=[TypeDeclaration [name=Base32InputStream]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[isLastChar|EXISTS]} ,  , feasible : true } ],1.0283662332923604

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[readResults|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], src=[TypeDeclaration [name=PhonemeList]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ],1.028793001031108

[ " MM ":{ {tgt=[TypeDeclaration [name=URLCodecTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorStringThrowable|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Crypt]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[apr1Crypt|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], mtd=[compare|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ],1.0293997302915732

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[write|EXISTS]} ,  , feasible : true } ],1.0289735053079505

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[PREFIX|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base64Test]|EXISTS], src=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], mtd=[testInternalNoSuchAlgorithmException|EXISTS]} ,  , feasible : true } ],1.027761591707125

[ " MM ":{ {tgt=[TypeDeclaration [name=URLCodecTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorStringThrowable|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], mtd=[encodeUrl|EXISTS]} ,  , feasible : true } ],1.0311614955338821

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTcrypt]|NEW], src=[TypeDeclaration [name=Crypt]|EXISTS], mtd=[crypt|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[doEncode|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Base64TestData]|EXISTS], mtd=[bytesContain|EXISTS]} ,  , feasible : true } ],1.0298655027287016

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=BinaryDecoder]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Caverphone1]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[getNextChar|EXISTS]} ,  , feasible : true } ],1.0307118875044914

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringUtilsTest]|EXISTS], src=[TypeDeclaration [name=CharEncodingTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoder]|EXISTS], mtd=[setConcat|EXISTS]} ,  , feasible : true } ],1.0307972401644658

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeInteger|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamMimeChuckSize|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS], fld=[B64T|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], src=[TypeDeclaration [name=EncoderException]|EXISTS], fld=[serialVersionUID|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=ResourceConstants]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], mtd=[langResourceName|EXISTS]} ,  , feasible : true } ],1.0320913058888608

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[isEncodeBlanks|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Phoneme]|EXISTS], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[LF|EXISTS]} ,  , feasible : true } ],1.0302034694158384

[ " RID ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=RefinedSoundexTest]|EXISTS], mtd=[testGetMappingCodeNonLetter|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], fld=[DEFAULT_CHARSET|EXISTS]} ,  , feasible : true } ],1.0304840137810205

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], src=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.0320121831616502

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Metaphone]|EXISTS], mtd=[isPreviousChar|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS]} ,  , feasible : true } ],1.0317824040052874

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=Sha2Crypt]|EXISTS], src=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], fld=[SHA256_BLOCKSIZE|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Soundex]|EXISTS], mtd=[map|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[encodeHexString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testConstructor_Int_ByteArray_Boolean_UrlSafe|EXISTS]} ,  , feasible : true } ],1.0301570997543357

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[PRINTABLE_CHARS|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[available|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ],1.0274783195117616

[ " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testIsEncodeEquals|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base64InputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS], src=[TypeDeclaration [name=Caverphone]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], mtd=[setEncodeBlanks|EXISTS]} ,  , feasible : true } ],1.0276378753955213

[ " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.DoubleMetaphone.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], fld=[alternate|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.DoubleMetaphone.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[getPrimary|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[decodeHex|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[chunkSeparatorLength|EXISTS]} ,  , feasible : true } ],1.028729815793905

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ],1.0291293672355055

[ " MF ":{ {tgt=[TypeDeclaration [name=RPattern]|EXISTS], src=[TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[US_ENGLISH_MAPPING|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=DecoderExceptionTest]|EXISTS], mtd=[testConstructor0|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=Base32Test]|EXISTS], fld=[BASE32_TEST_CASES|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32OutputStreamTest]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ],1.0266302969804961

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=PhoneticEngine]|EXISTS], fld=[ruleType|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RulesApplication]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ],1.0247690681422326

[ " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[encodeText|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[hasData|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], fld=[decodeTable|EXISTS]} ,  , feasible : true } ],1.0259729860926787

[ " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ,  " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=LanguageGuessingTest]|EXISTS], mtd=[testLanguageGuessing|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[flush|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Utils]|EXISTS], mtd=[digit16|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.DoubleMetaphone.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], fld=[alternate|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.DoubleMetaphone.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendPrimary|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0254376013867554

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ],1.0246566184036316

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTskip]|NEW], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], src=[TypeDeclaration [name=StringEncoder]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RefinedSoundex]|EXISTS], src=[TypeDeclaration [name=B64]|EXISTS], fld=[B64T|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], mtd=[getLanguages|EXISTS]} ,  , feasible : true } ],1.0308056484045915

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[mark|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=B64]|EXISTS], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], fld=[CHUNK_SEPARATOR|EXISTS]} ,  , feasible : true } ],1.028658654121703

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=URLCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ],1.0289367214368288

[ " MM ":{ {tgt=[TypeDeclaration [name=URLCodecTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorStringThrowable|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[PEM_CHUNK_SIZE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], mtd=[testgetMinRating_11_Returns_3_Successfully|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ],1.0321664140326365

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=B64Test]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ],1.032687180848948

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[containsAlphabetOrPad|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeEmpty|EXISTS]} ,  , feasible : true } ],1.030478468062553

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], src=[TypeDeclaration [name=Base32Test]|EXISTS], fld=[BASE32_TEST_CASES_CHUNKED|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], mtd=[getCharset|EXISTS]} ,  , feasible : true } ],1.0279479787504016

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ],1.0284475108213924

[ " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=SoundexUtils]|EXISTS], src=[TypeDeclaration [name=NysiisTest]|EXISTS], mtd=[testRule5|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=MetaphoneTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ],1.0287984873186793

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], mtd=[testDoubleMetaphoneAlternate|EXISTS]} ,  , feasible : true } ],1.0311296356734287

[ " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeInteger|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64Test]|EXISTS], src=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Base32Test]|EXISTS], mtd=[testRandomBytesHex|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeNull|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ],1.0273923670343428

[ " RID ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[decodeText|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], src=[TypeDeclaration [name=CryptTest]|EXISTS], mtd=[testCryptWithEmptySalt|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Caverphone]|EXISTS], fld=[encoder|EXISTS]} ,  , feasible : true } ],1.0290833555819086

[ " RID ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[write|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testCodec112|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[COMPARATOR|EXISTS]} ,  , feasible : true } ],1.0267554373652321

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ],1.0261191384657344

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha2CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS, TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[BAD_ENCODING_NAME|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=HexTest]|EXISTS], mtd=[testDecodeStringOddCharacters|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], src=[TypeDeclaration [name=Sha2Crypt]|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Caverphone]|EXISTS]} ,  , feasible : true } ],1.0291034219876702

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[TEN|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[data|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamMimeChuckSize|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Caverphone]|EXISTS], mtd=[isCaverphoneEqual|EXISTS]} ,  , feasible : true } ],1.0299060647865423

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeInteger|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Md5CryptTest]|EXISTS], mtd=[testCtor|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], fld=[SHA_512|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS], fld=[serialVersionUID|EXISTS]} ,  , feasible : true } ],1.0314203976331262

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS], fld=[PRINTABLE_CHARS|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], mtd=[addLeft|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[PREFIX|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncodingVariations|EXISTS]} ,  , feasible : true } ],1.0329579153588153

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringDecoder]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base64InputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS], src=[TypeDeclaration [name=Caverphone]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[decodeText|EXISTS]} ,  , feasible : true } ],1.032970049566159

[ " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " RID ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[getCharsetName|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], fld=[BYTES_FIXTURE_16BE|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUsAscii|EXISTS]} ,  , feasible : true } ]} , feasible : true } ],1.0295409699816402

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ],1.0300960564432544

[ " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[APR1_PREFIX|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=EncoderException]|EXISTS], src=[TypeDeclaration [name=Hex]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=UnixCrypt]|EXISTS], src=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_2|EXISTS]} ,  , feasible : true } ],1.0295657923200001

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTtestEncode]|NEW], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], mtd=[testEncode|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=MatchRatingApproachEncoder]|EXISTS], mtd=[isVowel|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], fld=[lineLength|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ],1.0289209459830575

[ " EM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS, TypeDeclaration [name=RefinedSoundex]|EXISTS], fld=[soundexMapping|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=URLCodec]|EXISTS], src=[TypeDeclaration [name=BinaryEncoder]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptWithInvalidSalt|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTnewStringUtf16]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[newStringUtf16|EXISTS]} ,  , feasible : true } ],1.0302979160350105

[ " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=ColognePhoneticTest]|EXISTS], mtd=[testVariationsMella|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[makeString|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[resizeBuffer|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=NysiisTest]|EXISTS], mtd=[assertEncodings|EXISTS]} ,  , feasible : true } ],1.0320259121868933

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TgtClassEC]|NEW], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], mtd=[testIsDoubleMetaphoneNotEqual|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Rule.TGTgetPhonemeText]|NEW], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TGTguessLanguage]|NEW], src=[TypeDeclaration [name=Lang]|EXISTS], mtd=[guessLanguage|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[decodeText|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=PhonemeList]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS, TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ],1.0340173067410372

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=UnixCryptTest]|EXISTS], src=[TypeDeclaration [name=DecoderException]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Soundex]|EXISTS], src=[TypeDeclaration [name=Decoder]|EXISTS]} ,  , feasible : true } ],1.034882861915931

[ " MM ":{ {tgt=[TypeDeclaration [name=URLCodecTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorStringThrowable|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTgetBytesUtf8]|NEW], src=[TypeDeclaration [name=StringUtils]|EXISTS], mtd=[getBytesUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RuleTest]|EXISTS], mtd=[testPhonemeComparedToSelfIsZero|EXISTS]} ,  , feasible : true } ],1.0334363080622269

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTmd5Crypt]|NEW], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], mtd=[md5Crypt|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.TGTisEncodeEqual]|NEW], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.BaseNCodec.TgtClassEC]|NEW], src=[TypeDeclaration [name=Context]|EXISTS], fld=[buffer|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.BaseNCodec.TgtClassEC]|NEW], src=[TypeDeclaration [name=Context]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[SEP|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256CryptBytes|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=PhonemeList]|EXISTS], fld=[phonemes|EXISTS]} ,  , feasible : true } ],1.0335696370239726

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[encodeToString|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=BCodec]|EXISTS, TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], mtd=[encodeText|EXISTS]} ,  , feasible : true } ],1.0302518307841757

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone2]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], mtd=[isEncodeEqual|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64OutputStream]|EXISTS], src=[TypeDeclaration [name=PhoneticEngineTest]|EXISTS], fld=[concat|EXISTS]} ,  , feasible : true } ],1.031953179624458

[ " MM ":{ {tgt=[TypeDeclaration [name=URLCodecTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], mtd=[testConstructorStringThrowable|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], mtd=[appendAlternate|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Decoder]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=SoundexTest]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Sha2Crypt]|EXISTS], src=[TypeDeclaration [name=NegativeIntegerBaseMatcher]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ],1.032914338949482

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], mtd=[close|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[checkEncodings|EXISTS]} ,  , feasible : true } ],1.030799584740791

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[pattern|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[createResourceName|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[RUSSIAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], mtd=[testEncodeStringWithNull|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=AbstractCaverphone]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[PREFIX|EXISTS]} ,  , feasible : true } ],1.030362959724106

[ " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64TestData]|EXISTS], src=[TypeDeclaration [name=HexTest]|EXISTS], fld=[LOG|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneResult]|EXISTS], src=[TypeDeclaration [name=UtilsTest]|EXISTS], mtd=[testConstructor|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=Lang]|EXISTS], fld=[Langs|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedCommonCodeAT11111111|EXISTS]} ,  , feasible : true } ],1.029739572231645

[ " PDF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[singleByte|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=AbstractCaverphone]|EXISTS], src=[TypeDeclaration [name=Caverphone1]|EXISTS], fld=[SIX_1|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], fld=[phoneme|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.TgtClassEC]|NEW], src=[TypeDeclaration [name=Rule]|EXISTS], mtd=[startsWith|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QCodec]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[L_T_K_S_N_M_B_Z|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=Base32OutputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], fld=[context|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ],1.0305967449585138

[ " RID ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=B64]|EXISTS], mtd=[b64from24bit|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha512CryptTest]|EXISTS], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Sha256CryptTest]|EXISTS], mtd=[testSha256LargetThanBlocksize|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Languages]|EXISTS], src=[TypeDeclaration [name=StringEncoderComparator]|EXISTS], mtd=[compare|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32Test]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], fld=[RADIX|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[data|EXISTS]} ,  , feasible : true } ],1.0296768197272386

[ " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CologneInputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DigestUtilsTest]|EXISTS], mtd=[testSha384|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=StringEncoderComparatorTest]|EXISTS], mtd=[testComparatorWithSoundex|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTread]|NEW], src=[TypeDeclaration [name=Codec105ErrorInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ],1.0306671112001837

[ " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], fld=[random|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testObjectDecodeWithValidParameter|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testCaverphoneRevisitedRandomNameTTA1111111|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], src=[TypeDeclaration [name=PhonemeBuilder]|EXISTS], mtd=[apply|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], fld=[TAB|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.net.TgtClassEC]|NEW], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS], mtd=[getDefaultCharset|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS], fld=[MATCHES|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=DigestUtils]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], fld=[SWISS_GERMAN_STUFF_UNICODE.|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=PhoneticEngine]|EXISTS], src=[TypeDeclaration [name=Md5Crypt]|EXISTS], fld=[ROUNDS|EXISTS]} ,  , feasible : true } ],1.0280510629746797

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestBase32EmptyInputStreamPemChuckSize]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamPemChuckSize|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BaseNCodec]|EXISTS], src=[TypeDeclaration [name=Base64]|EXISTS], mtd=[encodeInteger|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], src=[TypeDeclaration [name=Base64InputStreamTest]|EXISTS], mtd=[testReadOutOfBounds|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], fld=[CRLF|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=Base32InputStreamTest]|EXISTS], mtd=[testBase32EmptyInputStreamMimeChuckSize|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getEncodedLength|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=HexTest]|EXISTS], src=[TypeDeclaration [name=NysiisTest]|EXISTS], fld=[fullNysiis|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=DigestUtils]|EXISTS], src=[TypeDeclaration [name=Soundex]|EXISTS], mtd=[getMaxLength|EXISTS]} ,  , feasible : true } ],1.027667235053956

[ " RID ":{ {tgt=[TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[TEST_CHARS|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CacheSubSequencePerformanceTest]|EXISTS], mtd=[cacheSubSequence|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], src=[TypeDeclaration [name=Languages]|EXISTS], fld=[NO_LANGUAGES|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=RFC1522CodecTest]|EXISTS], src=[TypeDeclaration [name=SoundexUtils]|EXISTS], mtd=[differenceEncoded|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[reset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS], src=[TypeDeclaration [name=CologneBuffer]|EXISTS], fld=[length|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS], fld=[ESCAPE_CHAR|EXISTS]} ,  , feasible : true } ],1.02615215329424

[ " MM ":{ {tgt=[TypeDeclaration [name=RuleTest]|EXISTS], src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[byteToUnsigned|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=BaseNCodecOutputStream]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], fld=[SILENT_START|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=Caverphone2Test]|EXISTS], mtd=[testSpecificationExamples|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], fld=[BIT_6|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=CharsetsTest]|EXISTS], mtd=[testUtf16Le|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=Caverphone2Test]|EXISTS, TypeDeclaration [name=BeiderMorseEncoderTest]|EXISTS, TypeDeclaration [name=ColognePhoneticTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], mtd=[testEncodeWithInvalidObject|EXISTS]} ,  , feasible : true } ],1.0266288916748296

[ " RID ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=EncoderExceptionTest]|EXISTS], fld=[t|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=Sha2Crypt]|EXISTS], src=[TypeDeclaration [name=MessageDigestAlgorithms]|EXISTS], fld=[SHA256_BLOCKSIZE|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], mtd=[toString|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphone2Test]|EXISTS], mtd=[testDoubleMetaphonePrimary|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=QuotedPrintableCodecTest]|EXISTS], src=[TypeDeclaration [name=Context]|EXISTS], fld=[lbitWorkArea|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS, TypeDeclaration [name=Base32]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS], mtd=[getDefaultBufferSize|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], fld=[phonemeText|EXISTS]} ,  , feasible : true } ],1.0247646223344142

[ " IM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.digest.TGTtestApr1CryptExplicitCall]|NEW], src=[TypeDeclaration [name=Apr1CryptTest]|EXISTS], mtd=[testApr1CryptExplicitCall|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], src=[TypeDeclaration [name=DoubleMetaphoneTest]|EXISTS, TypeDeclaration [name=Caverphone1Test]|EXISTS, TypeDeclaration [name=MetaphoneTest]|EXISTS, TypeDeclaration [name=RefinedSoundexTest]|EXISTS, TypeDeclaration [name=NysiisTest]|EXISTS, TypeDeclaration [name=MatchRatingApproachEncoderTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=SomeLanguages]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], fld=[languages|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=StringEncoder]|EXISTS], src=[TypeDeclaration [name=URLCodec]|EXISTS], fld=[RADIX|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=PhonemeExpr]|EXISTS], src=[TypeDeclaration [name=Phoneme]|EXISTS], mtd=[getPhonemeText|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[read|EXISTS]} ,  , feasible : true } ],1.0302226358398665

[ " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TGTtestDecodeWithInnerPad]|NEW], src=[TypeDeclaration [name=Base64Test]|EXISTS], mtd=[testDecodeWithInnerPad|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=CologneBuffer]|EXISTS], src=[TypeDeclaration [name=CologneOutputBuffer]|EXISTS]} ,  , feasible : true } ,  " IM ":{ {src=[TypeDeclaration [name=UnixCrypt]|EXISTS], mtd=[hPermOp|EXISTS]} ,  , feasible : true } ,  " RID ":{ {tgt=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], src=[TypeDeclaration [name=Base64InputStream]|EXISTS], mtd=[skip|EXISTS]} ,  , feasible : true } ,  " RMMO ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.language.bm.Lang.TGTmatches]|NEW], src=[TypeDeclaration [name=LangRule]|EXISTS], mtd=[matches|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=PhoneticEngineRegressionTest]|EXISTS], src=[TypeDeclaration [name=Caverphone]|EXISTS]} ,  , feasible : true } ,  " PDM ":{ {tgt=[TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], mtd=[markSupported|EXISTS]} ,  , feasible : true } ],1.0312901039217452

[ " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[isEmpty|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=DoubleMetaphone]|EXISTS], mtd=[handleD|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Caverphone]|EXISTS], src=[TypeDeclaration [name=StringEncoderAbstractTest]|EXISTS], fld=[stringEncoder|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=RFC1522Codec]|EXISTS], src=[TypeDeclaration [name=QCodec]|EXISTS, TypeDeclaration [name=BCodec]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ],1.0308004100200259

[ " IM ":{ {src=[TypeDeclaration [name=ColognePhonetic]|EXISTS], mtd=[arrayContains|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Base32InputStream]|EXISTS, TypeDeclaration [name=Base64InputStream]|EXISTS], src=[TypeDeclaration [name=BaseNCodecInputStream]|EXISTS], fld=[baseNCodec|EXISTS]} ,  , feasible : true } ,  " EC ":{  , {[ " MF ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], fld=[BIT_5|EXISTS]} ,  , feasible : true } ,  " MM ":{ {tgt=[TypeDeclaration [name=org.apache.commons.codec.binary.TgtClassEC]|NEW], src=[TypeDeclaration [name=BinaryCodecTest]|EXISTS], mtd=[testEncodeObjectException|EXISTS]} ,  , feasible : true } ]} , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=BinaryDecoder]|EXISTS], src=[TypeDeclaration [name=BinaryCodec]|EXISTS], mtd=[toAsciiString|EXISTS]} ,  , feasible : true } ,  " PUF ":{ {tgt=[TypeDeclaration [name=BinaryEncoder]|EXISTS], src=[TypeDeclaration [name=QuotedPrintableCodec]|EXISTS, TypeDeclaration [name=URLCodec]|EXISTS, TypeDeclaration [name=Hex]|EXISTS], fld=[charset|EXISTS]} ,  , feasible : true } ,  " PDF ":{ {tgt=[TypeDeclaration [name=RFC1522TestCodec]|EXISTS], src=[TypeDeclaration [name=RFC1522Codec]|EXISTS], fld=[POSTFIX|EXISTS]} ,  , feasible : true } ,  " PUM ":{ {tgt=[TypeDeclaration [name=LanguageSet]|EXISTS], src=[TypeDeclaration [name=SomeLanguages]|EXISTS], mtd=[getLanguages|EXISTS]} ,  , feasible : true } ],1.0322916172335335

[ " RID ":{ {tgt=[TypeDeclaration [name=Base64]|EXISTS], src=[TypeDeclaration [name=BaseNCodec]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=DecoderException]|EXISTS], src=[TypeDeclaration [name=UnixCryptTest]|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=B64Test]|EXISTS], src=[TypeDeclaration [name=Caverphone2]|EXISTS], fld=[TEN_1|EXISTS]} ,  , feasible : true } ,  " RDI ":{ {tgt=[TypeDeclaration [name=CharEncodingTest]|EXISTS], src=[TypeDeclaration [name=StringUtilsTest]|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=StringUtilsTest]|EXISTS], mtd=[testNewStringUtf8|EXISTS]} ,  , feasible : true } ,  " EM ":{ {src=[TypeDeclaration [name=BCodecTest]|EXISTS], mtd=[testBasicEncodeDecode|EXISTS]} ,  , feasible : true } ,  " MF ":{ {tgt=[TypeDeclaration [name=Context]|EXISTS], src=[TypeDecl